{"version":3,"file":"index.js","sourceRoot":"","sources":["../Imports/ServerTypings/Demo.BasicSamples.BasicSamplesService.ts","../Imports/ServerTypings/Demo.BasicSamples.ChangingLookupTextForm.ts","../Imports/ServerTypings/Demo.BasicSamples.FilteredLookupInDetailForm.ts","../Imports/ServerTypings/Demo.BasicSamples.HardcodedValuesForm.ts","../Imports/ServerTypings/Demo.BasicSamples.InlineImageInGridColumns.ts","../Imports/ServerTypings/Demo.BasicSamples.LookupFilterByMultipleForm.ts","../Imports/ServerTypings/Demo.BasicSamples.OrdersByShipperRequest.ts","../Imports/ServerTypings/Demo.BasicSamples.OrdersByShipperResponse.ts","../Imports/ServerTypings/Demo.BasicSamples.PopulateLinkedDataForm.ts","../Imports/ServerTypings/Demo.BasicSamples.StaticTextBlockForm.ts","../Serenity.Demo.BasicSamples/Dialogs/ChartInDialog/ChartInDialog.ts","../Serenity.Demo.BasicSamples/Dialogs/CloneableEntityDialog/CloneableEntityDialog.ts","../Serenity.Demo.BasicSamples/Dialogs/CloneableEntityDialog/CloneableEntityGrid.ts","../Serenity.Demo.BasicSamples/Dialogs/DefaultValuesInNewDialog/DefaultValuesInNewGrid.ts","../Serenity.Demo.BasicSamples/Dialogs/DialogBoxes/DialogBoxes.ts","../Serenity.Demo.BasicSamples/Dialogs/EntityDialogAsPanel/EntityDialogAsPanel.ts","../Serenity.Demo.BasicSamples/Dialogs/GetInsertedRecordId/GetInsertedRecordIdDialog.ts","../Serenity.Demo.BasicSamples/Dialogs/GetInsertedRecordId/GetInsertedRecordIdGrid.ts","../Serenity.Demo.BasicSamples/Dialogs/OtherFormInTab/OtherFormInTabDialog.ts","../Serenity.Demo.BasicSamples/Dialogs/OtherFormInTab/OtherFormInTabGrid.ts","../Serenity.Demo.BasicSamples/Dialogs/OtherFormInTabOneBar/OtherFormOneBarDialog.ts","../Serenity.Demo.BasicSamples/Dialogs/OtherFormInTabOneBar/OtherFormOneBarGrid.ts","../Serenity.Demo.BasicSamples/Dialogs/PopulateLinkedData/PopulateLinkedDataDialog.ts","../Serenity.Demo.BasicSamples/Dialogs/PopulateLinkedData/PopulateLinkedDataGrid.ts","../Serenity.Demo.BasicSamples/Dialogs/ReadOnlyDialog/ReadOnlyDialog.ts","../Serenity.Demo.BasicSamples/Dialogs/ReadOnlyDialog/ReadOnlyGrid.ts","../Serenity.Demo.BasicSamples/Dialogs/SerialAutoNumber/SerialAutoNumberDialog.ts","../Serenity.Demo.BasicSamples/Dialogs/SerialAutoNumber/SerialAutoNumberGrid.ts","../Serenity.Demo.BasicSamples/Editors/ChangingLookupText/ChangingLookupTextDialog.ts","../Serenity.Demo.BasicSamples/Editors/ChangingLookupText/ChangingLookupTextEditor.ts","../Serenity.Demo.BasicSamples/Editors/FilteredLookupInDetail/FilteredLookupDetailDialog.ts","../Serenity.Demo.BasicSamples/Editors/FilteredLookupInDetail/FilteredLookupDetailEditor.ts","../Serenity.Demo.BasicSamples/Editors/FilteredLookupInDetail/FilteredLookupInDetailDialog.ts","../Serenity.Demo.BasicSamples/Editors/FilteredLookupInDetail/FilteredLookupInDetailGrid.ts","../Serenity.Demo.BasicSamples/Editors/LookupFilterByMultipleValues/LookupFilterByMultipleDialog.ts","../Serenity.Demo.BasicSamples/Editors/LookupFilterByMultipleValues/LookupFilterByMultipleGrid.ts","../Serenity.Demo.BasicSamples/Editors/LookupFilterByMultipleValues/ProduceSeafoodCategoryEditor.ts","../Serenity.Demo.BasicSamples/Editors/SelectWithHardcodedValues/HardcodedValuesDialog.ts","../Serenity.Demo.BasicSamples/Editors/SelectWithHardcodedValues/HardcodedValuesEditor.ts","../Serenity.Demo.BasicSamples/Editors/StaticTextBlock/StaticTextBlockDialog.ts","../Serenity.Demo.BasicSamples/Grids/CustomLinksInGrid/CustomLinksInGrid.ts","../Serenity.Demo.BasicSamples/Grids/EnablingRowSelection/RowSelectionGrid.ts","../Serenity.Demo.BasicSamples/Grids/GridFilteredByCriteria/GridFilteredByCriteria.ts","../Serenity.Demo.BasicSamples/Grids/GroupingAndSummariesInGrid/GroupingAndSummariesInGrid.ts","../Serenity.Demo.BasicSamples/Grids/InitialValuesForQuickFilters/InitialValuesForQuickFilters.ts","../Serenity.Demo.BasicSamples/Grids/InlineActionButtons/InlineActionGrid.ts","../Serenity.Demo.BasicSamples/Grids/InlineImageInGrid/InlineImageFormatter.ts","../Serenity.Demo.BasicSamples/Grids/InlineImageInGrid/InlineImageInGrid.ts","../Serenity.Demo.BasicSamples/Grids/RemovingAddButton/RemovingAddButton.ts","../Serenity.Demo.BasicSamples/Grids/ViewWithoutID/ViewWithoutIDGrid.ts","../Serenity.Demo.BasicSamples/Grids/WrappedHeaders/WrappedHeadersGrid.ts"],"names":[],"mappings":"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","sourcesContent":["namespace Serenity.Demo.BasicSamples {\r\n    export namespace BasicSamplesService {\r\n        export const baseUrl = 'Serenity.Demo.BasicSamples';\r\n\r\n        export declare function OrdersByShipper(request: OrdersByShipperRequest, onSuccess?: (response: OrdersByShipperResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            OrdersByShipper = \"Serenity.Demo.BasicSamples/OrdersByShipper\"\r\n        }\r\n\r\n        [\r\n            'OrdersByShipper'\r\n        ].forEach(x => {\r\n            (<any>BasicSamplesService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n    export interface ChangingLookupTextForm {\r\n        ProductID: ChangingLookupTextEditor;\r\n        UnitPrice: DecimalEditor;\r\n        Quantity: IntegerEditor;\r\n        Discount: DecimalEditor;\r\n    }\r\n\r\n    export class ChangingLookupTextForm extends Serenity.PrefixedContext {\r\n        static formKey = 'BasicSamples.ChangingLookupText';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!ChangingLookupTextForm.init)  {\r\n                ChangingLookupTextForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = ChangingLookupTextEditor;\r\n                var w1 = DecimalEditor;\r\n                var w2 = IntegerEditor;\r\n\r\n                Q.initFormType(ChangingLookupTextForm, [\r\n                    'ProductID', w0,\r\n                    'UnitPrice', w1,\r\n                    'Quantity', w2,\r\n                    'Discount', w1\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n    export interface FilteredLookupInDetailForm {\r\n        CustomerID: Demo.Northwind.CustomerEditor;\r\n        OrderDate: DateEditor;\r\n        CategoryID: LookupEditor;\r\n        DetailList: FilteredLookupDetailEditor;\r\n    }\r\n\r\n    export class FilteredLookupInDetailForm extends Serenity.PrefixedContext {\r\n        static formKey = 'BasicSamples.FilteredLookupInDetail';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!FilteredLookupInDetailForm.init)  {\r\n                FilteredLookupInDetailForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = Demo.Northwind.CustomerEditor;\r\n                var w1 = DateEditor;\r\n                var w2 = LookupEditor;\r\n                var w3 = FilteredLookupDetailEditor;\r\n\r\n                Q.initFormType(FilteredLookupInDetailForm, [\r\n                    'CustomerID', w0,\r\n                    'OrderDate', w1,\r\n                    'CategoryID', w2,\r\n                    'DetailList', w3\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n    export interface HardcodedValuesForm {\r\n        SomeValue: HardcodedValuesEditor;\r\n    }\r\n\r\n    export class HardcodedValuesForm extends Serenity.PrefixedContext {\r\n        static formKey = 'BasicSamples.HarcodedValues';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!HardcodedValuesForm.init)  {\r\n                HardcodedValuesForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = HardcodedValuesEditor;\r\n\r\n                Q.initFormType(HardcodedValuesForm, [\r\n                    'SomeValue', w0\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n    export class InlineImageInGridColumns {\r\n        static columnsKey = 'BasicSamples.InlineImageInGrid';\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n    export interface LookupFilterByMultipleForm {\r\n        ProductName: StringEditor;\r\n        ProductImage: ImageUploadEditor;\r\n        Discontinued: BooleanEditor;\r\n        SupplierID: LookupEditor;\r\n        CategoryID: ProduceSeafoodCategoryEditor;\r\n        QuantityPerUnit: StringEditor;\r\n        UnitPrice: DecimalEditor;\r\n        UnitsInStock: IntegerEditor;\r\n        UnitsOnOrder: IntegerEditor;\r\n        ReorderLevel: IntegerEditor;\r\n    }\r\n\r\n    export class LookupFilterByMultipleForm extends Serenity.PrefixedContext {\r\n        static formKey = 'BasicSamples.LookupFilterByMultiple';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!LookupFilterByMultipleForm.init)  {\r\n                LookupFilterByMultipleForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = StringEditor;\r\n                var w1 = ImageUploadEditor;\r\n                var w2 = BooleanEditor;\r\n                var w3 = LookupEditor;\r\n                var w4 = ProduceSeafoodCategoryEditor;\r\n                var w5 = DecimalEditor;\r\n                var w6 = IntegerEditor;\r\n\r\n                Q.initFormType(LookupFilterByMultipleForm, [\r\n                    'ProductName', w0,\r\n                    'ProductImage', w1,\r\n                    'Discontinued', w2,\r\n                    'SupplierID', w3,\r\n                    'CategoryID', w4,\r\n                    'QuantityPerUnit', w0,\r\n                    'UnitPrice', w5,\r\n                    'UnitsInStock', w6,\r\n                    'UnitsOnOrder', w6,\r\n                    'ReorderLevel', w6\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n    export interface OrdersByShipperRequest extends Serenity.ServiceRequest {\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n    export interface OrdersByShipperResponse extends Serenity.ServiceResponse {\r\n        Values?: { [key: string]: any }[];\r\n        ShipperKeys?: string[];\r\n        ShipperLabels?: string[];\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n    export interface PopulateLinkedDataForm {\r\n        CustomerID: Demo.Northwind.CustomerEditor;\r\n        CustomerContactName: StringEditor;\r\n        CustomerContactTitle: StringEditor;\r\n        CustomerCity: StringEditor;\r\n        CustomerRegion: StringEditor;\r\n        CustomerCountry: StringEditor;\r\n        CustomerPhone: StringEditor;\r\n        CustomerFax: StringEditor;\r\n        OrderDate: DateEditor;\r\n        RequiredDate: DateEditor;\r\n        EmployeeID: LookupEditor;\r\n        DetailList: Demo.Northwind.OrderDetailsEditor;\r\n    }\r\n\r\n    export class PopulateLinkedDataForm extends Serenity.PrefixedContext {\r\n        static formKey = 'BasicSamples.PopulateLinkedData';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!PopulateLinkedDataForm.init)  {\r\n                PopulateLinkedDataForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = Demo.Northwind.CustomerEditor;\r\n                var w1 = StringEditor;\r\n                var w2 = DateEditor;\r\n                var w3 = LookupEditor;\r\n                var w4 = Demo.Northwind.OrderDetailsEditor;\r\n\r\n                Q.initFormType(PopulateLinkedDataForm, [\r\n                    'CustomerID', w0,\r\n                    'CustomerContactName', w1,\r\n                    'CustomerContactTitle', w1,\r\n                    'CustomerCity', w1,\r\n                    'CustomerRegion', w1,\r\n                    'CustomerCountry', w1,\r\n                    'CustomerPhone', w1,\r\n                    'CustomerFax', w1,\r\n                    'OrderDate', w2,\r\n                    'RequiredDate', w2,\r\n                    'EmployeeID', w3,\r\n                    'DetailList', w4\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n    export interface StaticTextBlockForm {\r\n        StaticText: Extensions.StaticTextBlock;\r\n        SomeInput: StringEditor;\r\n        HtmlList: Extensions.StaticTextBlock;\r\n        FromLocalText: Extensions.StaticTextBlock;\r\n        DisplayFieldValue: Extensions.StaticTextBlock;\r\n    }\r\n\r\n    export class StaticTextBlockForm extends Serenity.PrefixedContext {\r\n        static formKey = 'BasicSamples.StaticTextBlock';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!StaticTextBlockForm.init)  {\r\n                StaticTextBlockForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = Extensions.StaticTextBlock;\r\n                var w1 = StringEditor;\r\n\r\n                Q.initFormType(StaticTextBlockForm, [\r\n                    'StaticText', w0,\r\n                    'SomeInput', w1,\r\n                    'HtmlList', w0,\r\n                    'FromLocalText', w0,\r\n                    'DisplayFieldValue', w0\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n\r\n    const chartColors = ['#4E79A7', '#A0CBE8', '#F28E2B', '#FFBE7D', '#59A14F', '#8CD17D', '#B6992D', '#F1CE63', '#499894', '#86BCB6',\r\n        '#E15759', '#FF9D9A', '#79706E', '#BAB0AC', '#D37295', '#FABFD2', '#B07AA1', '#D4A6C8', '#9D7660', '#D7B5A6'];\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.resizable()\r\n    @Serenity.Decorators.maximizable()\r\n    export class ChartInDialog extends Serenity.TemplatedDialog<any> {\r\n\r\n        private areaChart: any;\r\n\r\n        static initializePage() {\r\n            $(function () {\r\n                $('#LaunchDialogButton').click(function (e) {\r\n                    (new ChartInDialog()).dialogOpen();\r\n                });\r\n            });\r\n        }\r\n\r\n        protected onDialogOpen() {\r\n            super.onDialogOpen();\r\n\r\n            BasicSamplesService.OrdersByShipper({}, response => {\r\n                this.areaChart = new Chart(document.getElementById(\r\n                    this.idPrefix + 'Chart') as HTMLCanvasElement, {\r\n                        type: \"bar\",\r\n                        data: {\r\n                            labels: response.Values.map(x => x.Month),\r\n                            datasets: response.ShipperKeys.map((shipperKey, shipperIdx) => ({\r\n                                label: response.ShipperLabels[shipperIdx],\r\n                                fill: true,\r\n                                backgroundColor: chartColors[shipperIdx % chartColors.length],\r\n                                data: response.Values.map((x, ix) => response.Values[ix][shipperKey])\r\n                            }))\r\n                        }\r\n                    });\r\n            });\r\n        }\r\n\r\n        protected getTemplate() {\r\n            return \"<canvas id='~_Chart'></div>\";\r\n        }\r\n\r\n        protected getDialogOptions() {\r\n            var opt = super.getDialogOptions();\r\n            opt.title = 'Orders by Shipper';\r\n            return opt;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.maximizable()\r\n    export class CloneableEntityDialog extends Northwind.ProductDialog {\r\n        protected updateInterface() {\r\n\r\n            // by default cloneButton is hidden in base UpdateInterface method\r\n            super.updateInterface();\r\n\r\n            // here we show it if it is edit mode (not new)\r\n            this.cloneButton.toggle(this.isEditMode());\r\n        }\r\n\r\n        /**\r\n         * Overriding this method is optional to customize cloned entity\r\n         */\r\n        protected getCloningEntity() {\r\n            var clone = super.getCloningEntity();\r\n\r\n            // add (Clone) suffix if it's not already added\r\n            var suffix = ' (Clone)';\r\n            if (!Q.endsWith(clone.ProductName || '', suffix)) {\r\n                clone.ProductName = (clone.ProductName || '') + suffix;\r\n            }\r\n\r\n            // it's better to clear image for this sample\r\n            // otherwise we would have to create a temporary copy of it\r\n            // and upload\r\n            clone.ProductImage = null;\r\n\r\n            // let's clear fields not logical to be cloned\r\n            clone.UnitsInStock = 0;\r\n            clone.UnitsOnOrder = 0;\r\n            return clone;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Subclass of ProductGrid to override dialog type to CloneableEntityDialog\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class CloneableEntityGrid extends Serenity.EntityGrid<Northwind.ProductRow, any> {\r\n\r\n        protected getColumnsKey() { return Northwind.ProductColumns.columnsKey; }\r\n        protected getDialogType() { return CloneableEntityDialog; }\r\n        protected getIdProperty() { return Northwind.ProductRow.idProperty; }\r\n        protected getLocalTextPrefix() { return Northwind.ProductRow.localTextPrefix; }\r\n        protected getService() { return Northwind.ProductService.baseUrl; }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class DefaultValuesInNewGrid extends Northwind.OrderGrid {\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        /**\r\n         * This method is called when New Item button is clicked.\r\n         * By default, it calls EditItem with an empty entity.\r\n         * This is a good place to fill in default values for New Item button.\r\n         */\r\n        protected addButtonClick() {\r\n            this.editItem(<Northwind.OrderRow>{\r\n                CustomerID: 'ANTON',\r\n                RequiredDate: Q.formatDate(new Date(), 'yyyy-MM-dd'),\r\n                EmployeeID: Northwind.EmployeeRow.getLookup().items\r\n                    .filter(x => x.FullName === 'Robert King')[0].EmployeeID,\r\n                ShipVia: Northwind.ShipperRow.getLookup().items\r\n                    .filter(x => x.CompanyName === 'Speedy Express')[0].ShipperID\r\n            });\r\n        }\r\n\r\n        protected getButtons() {\r\n            // preserving default New Item button\r\n            var buttons = super.getButtons();\r\n\r\n            buttons.push({\r\n                title: 'Add Order from the Queen',\r\n                cssClass: 'add-button', \r\n                onClick: () => {\r\n                    // using EditItem method as a shortcut to create a new Order dialog,\r\n                    // bind to its events, load our order row, and open dialog\r\n                    this.editItem(<Northwind.OrderRow>{\r\n                        CustomerID: 'QUEEN',\r\n                        EmployeeID: Northwind.EmployeeRow.getLookup().items\r\n                            .filter(x => x.FullName === 'Nancy Davolio')[0].EmployeeID,\r\n                        ShipVia: Northwind.ShipperRow.getLookup().items\r\n                            .filter(x => x.CompanyName === 'United Package')[0].ShipperID\r\n                    });\r\n                }\r\n            });\r\n\r\n            buttons.push({\r\n                title: 'Add Order with 5 Chai by Laura', cssClass: 'add-note-button',\r\n                onClick: () => {\r\n                    // we could use EditItem here too, but for demonstration\r\n                    // purposes we are manually creating dialog this time\r\n                    var dlg = new Northwind.OrderDialog();\r\n\r\n                    // let grid watch for changes to manually created dialog, \r\n                    // so when a new item is saved, grid can refresh itself\r\n                    this.initDialog(dlg);\r\n\r\n                    // get a reference to product Chai\r\n                    var chai = Northwind.ProductRow.getLookup().items\r\n                        .filter(x => x.ProductName === 'Chai')[0];\r\n\r\n                    // LoadEntityAndOpenDialog, loads an OrderRow \r\n                    // to dialog and opens it\r\n                    var lauraCallahanID = Northwind.EmployeeRow.getLookup().items\r\n                        .filter(x => x.FullName === 'Laura Callahan')[0].EmployeeID;\r\n\r\n                    dlg.loadEntityAndOpenDialog(<Northwind.OrderRow>{\r\n                        CustomerID: 'GOURL',\r\n                        EmployeeID: lauraCallahanID,\r\n                        DetailList: [{\r\n                            ProductID: chai.ProductID,\r\n                            ProductName: chai.ProductName,\r\n                            UnitPrice: chai.UnitPrice,\r\n                            Quantity: 5,\r\n                            LineTotal: chai.UnitPrice * 5\r\n                        }]\r\n                    });\r\n                }\r\n            });\r\n\r\n            return buttons;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples.DialogBoxes {\r\n\r\n    export function initializePage() {\r\n        confirmDialogButtons();\r\n        confirmWithCustomTitle();\r\n        information();\r\n        success();\r\n        warning();\r\n        alert();\r\n        alertWithHtmlContent();\r\n    }\r\n\r\n    function confirmDialogButtons() {\r\n\r\n        // here we demonstrate how you can detect which button user has clicked\r\n        // second parameter is Yes handler and it is called only when user clicks Yes.\r\n        // third parameter has some additional options, that you should only use when needed\r\n\r\n        $('#ConfirmDialogButtons').click(() => {\r\n            Q.confirm(\r\n                \"Click one of buttons, or close dialog with [x] on top right, i'll tell you what you did!\",\r\n                () => {\r\n                    Q.notifySuccess(\"You clicked YES. Great!\");\r\n                },\r\n                {\r\n                    onNo: () => {\r\n                        Q.notifyInfo(\"You clicked NO. Why?\");\r\n                    },\r\n                    onCancel: () => {\r\n                        Q.notifyError(\"You clicked X. Operation is cancelled. Will try again?\");\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    function confirmWithCustomTitle() {\r\n\r\n        $('#ConfirmWithCustomTitle').click(() => {\r\n            Q.confirm(\r\n                \"This confirmation has a custom title\",\r\n                () => {\r\n                    Q.notifySuccess(\"Allright!\");\r\n                },\r\n                {\r\n                    title: 'Some Custom Confirmation Title'\r\n                });\r\n        });\r\n    }\r\n\r\n    function information() {\r\n\r\n        $('#Information').click(() => {\r\n            Q.information(\r\n                \"What a nice day\",\r\n                () => {\r\n                    Q.notifySuccess(\"No problem!\");\r\n                });\r\n        });\r\n    }\r\n\r\n    function success() {\r\n\r\n        $('#Success').click(() => {\r\n            Q.success(\r\n                \"Operation complete\",\r\n                () => {\r\n                    Q.notifySuccess(\"Well done!\");\r\n                });\r\n        });\r\n    }\r\n\r\n    function warning() {\r\n\r\n        $('#Warning').click(() => {\r\n            Q.warning(\"Hey, be careful!\");\r\n        });\r\n    }\r\n\r\n    function alert() {\r\n\r\n        $('#Alert').click(() => {\r\n            Q.alert(\"Houston, we got a problem!\");\r\n        });\r\n    }\r\n\r\n    function alertWithHtmlContent() {\r\n        $('#AlertWithHtmlContent').click(() => {\r\n            Q.alert(\"<h4>Here is some HTML content!</h4>\" +\r\n                \"<ul><li>Item 1</li><li>Item 2</li >\" +\r\n                \"<li>Visit <a href='http://serenity.is/' target='_blank' style='color: #ddf'>http://serenity.is/</a>!</li></ul>\", {\r\n                htmlEncode: false\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * A version of order dialog converted to a panel by adding Serenity.Decorators.panel decorator.\r\n     */\r\n    @Serenity.Decorators.panel()\r\n    export class EntityDialogAsPanel extends Northwind.OrderDialog {\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        protected updateInterface() {\r\n            super.updateInterface();\r\n\r\n            this.deleteButton.hide();\r\n            this.applyChangesButton.hide();\r\n        }\r\n\r\n        protected onSaveSuccess(response) {\r\n            this.showSaveSuccessMessage(response);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class GetInsertedRecordIdDialog extends Northwind.CategoryDialog {\r\n\r\n        /**\r\n         * This method is called after the save request to service\r\n         * is completed succesfully. This can be an insert or update.\r\n         *\r\n         * @param response Response that is returned from server\r\n         */\r\n        protected onSaveSuccess(response: Serenity.SaveResponse): void {\r\n\r\n            // check that this is an insert\r\n            if (this.isNew()) {\r\n                Q.notifySuccess(\"Just inserted a category with ID: \" + response.EntityId);\r\n\r\n                // you could also open a new dialog\r\n                // new Northwind.CategoryDialog().loadByIdAndOpenDialog(response.EntityId);\r\n\r\n                // but let's better load inserted record using Retrieve service\r\n                Northwind.CategoryService.Retrieve(<any>{\r\n                    EntityId: response.EntityId\r\n                }, resp => {\r\n                    Q.notifyInfo(\"Looks like the category you added has name: \" + resp.Entity.CategoryName);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Subclass of CategoryGrid to override dialog type to GetInsertedRecordIdDialog\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class GetInsertedRecordIdGrid extends Northwind.CategoryGrid {\r\n\r\n        protected getDialogType() { return GetInsertedRecordIdDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Our custom order dialog subclass that will have a tab to display and edit selected customer details.\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class OtherFormInTabDialog extends Northwind.OrderDialog {\r\n\r\n        private customerPropertyGrid: Serenity.PropertyGrid;\r\n        private customerForm: Northwind.CustomerForm;\r\n        private customerValidator: JQueryValidation.Validator;\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            // entity dialogs by default creates a property grid on element with ID \"PropertyGrid\".\r\n            // here we explicitly create another, the customer property grid (vertical form) on element with ID \"CustomerPropertyGrid\".\r\n            this.customerPropertyGrid = new Serenity.PropertyGrid(this.byId(\"CustomerPropertyGrid\"), {\r\n                idPrefix: this.idPrefix + \"_Customer_\",\r\n                items: Q.getForm(Northwind.CustomerForm.formKey).filter(x => x.name != 'CustomerID'),\r\n                useCategories: true\r\n            });\r\n\r\n            // this is just a helper to access editors if needed\r\n            this.customerForm = new Northwind.CustomerForm((this.customerPropertyGrid as any).idPrefix);\r\n\r\n            // initialize validator for customer form\r\n            this.customerValidator = this.byId(\"CustomerForm\").validate(Q.validateOptions({}));\r\n\r\n            var selfChange = 0;\r\n\r\n            // creating another toolbar for customer tab that will only save Customer\r\n            new Serenity.Toolbar(this.byId(\"CustomerToolbar\"), {\r\n                buttons: [{\r\n                    cssClass: \"apply-changes-button\",\r\n                    title: Q.text(\"Controls.EntityDialog.SaveButton\"),\r\n                    onClick: () => {\r\n                        var id = this.getCustomerID();\r\n                        if (!id)\r\n                            return;\r\n\r\n                        if (!this.customerValidator.form())\r\n                            return;\r\n\r\n                        // prepare an empty entity to serialize customer details into\r\n                        var c = <Northwind.CustomerRow>{};\r\n                        this.customerPropertyGrid.save(c);\r\n\r\n                        Northwind.CustomerService.Update({\r\n                            EntityId: id,\r\n                            Entity: c\r\n                        }, response => {\r\n                            // reload customer list just in case\r\n                            Q.reloadLookup(Northwind.CustomerRow.lookupKey);\r\n\r\n                            // set flag that we are triggering customer select change event\r\n                            // otherwise active tab will change to first one\r\n                            selfChange++;\r\n                            try {\r\n                                // trigger change so that customer select updates its text\r\n                                // in case if Company Name is changed\r\n                                this.form.CustomerID.element.change();\r\n                            }\r\n                            finally {\r\n                                selfChange--;\r\n                            }\r\n\r\n                            Q.notifySuccess(\"Saved customer details\");\r\n                        });\r\n\r\n                    }\r\n                }]\r\n            });\r\n\r\n            this.form.CustomerID.change(e => {\r\n                if (selfChange)\r\n                    return;\r\n\r\n                var customerID = this.getCustomerID();\r\n\r\n                Serenity.TabsExtensions.setDisabled(this.tabs, 'Customer', !customerID);\r\n\r\n                if (!customerID) {\r\n                    // no customer is selected, just load an empty entity\r\n                    this.customerPropertyGrid.load({});\r\n                    return;\r\n                }\r\n\r\n                // load selected customer into customer form by calling CustomerService\r\n                Northwind.CustomerService.Retrieve({\r\n                    EntityId: customerID\r\n                }, response => {\r\n                    this.customerPropertyGrid.load(response.Entity);\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        getCustomerID() {\r\n            var customerID = this.form.CustomerID.value;\r\n\r\n            if (Q.isEmptyOrNull(customerID))\r\n                return null;\r\n\r\n            // unfortunately, CustomerID (a string) used in this form and \r\n            // the ID (auto increment ID) are different, so we need to \r\n            // find numeric ID from customer lookups. \r\n            // you'll probably won't need this step.\r\n            return Q.first(Northwind.CustomerRow.getLookup().items,\r\n                x => x.CustomerID == customerID).ID;\r\n        }\r\n\r\n        loadEntity(entity: Northwind.OrderRow) {\r\n            super.loadEntity(entity);\r\n\r\n            Serenity.TabsExtensions.setDisabled(this.tabs, 'Customer',\r\n                !this.getCustomerID());\r\n        }\r\n\r\n        getTemplate() {\r\n            return `<div id=\"~_Tabs\" class=\"s-DialogContent\">\r\n    <ul>\r\n        <li><a href=\"#~_TabOrder\"><span>Order</span></a></li>\r\n        <li><a href=\"#~_TabCustomer\"><span>Customer</span></a></li>\r\n    </ul>\r\n    <div id=\"~_TabOrder\" class=\"tab-pane s-TabOrder\">\r\n        <div id=\"~_Toolbar\" class=\"s-DialogToolbar\">\r\n        </div>\r\n        <div class=\"s-Form\">\r\n            <form id=\"~_Form\" action=\"\">\r\n                <div class=\"fieldset\">\r\n                    <div id=\"~_PropertyGrid\"></div>\r\n                    <div class=\"clear\"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div id=\"~_TabCustomer\" class=\"tab-pane s-TabCustomer\">\r\n        <div id=\"~_CustomerToolbar\" class=\"s-DialogToolbar\">\r\n        </div>\r\n        <div class=\"s-Form\">\r\n            <form id=\"~_CustomerForm\" action=\"\">\r\n                <div class=\"fieldset\">\r\n                    <div id=\"~_CustomerPropertyGrid\"></div>\r\n                    <div class=\"clear\"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>`;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Subclass of OrderGrid to override dialog type to OtherFormInTabDialog\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class OtherFormInTabGrid extends Northwind.OrderGrid {\r\n\r\n        protected getDialogType() { return OtherFormInTabDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Our custom order dialog subclass that will have a tab to display and edit selected customer details.\r\n     * With single toolbar for all forms\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class OtherFormOneBarDialog extends Northwind.OrderDialog {\r\n\r\n        private customerPropertyGrid: Serenity.PropertyGrid;\r\n        private customerForm: Northwind.CustomerForm;\r\n        private customerValidator: JQueryValidation.Validator;\r\n        private selfChange = 0;\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            // entity dialogs by default creates a property grid on element with ID \"PropertyGrid\".\r\n            // here we explicitly create another, the customer property grid (vertical form) on element with ID \"CustomerPropertyGrid\".\r\n            this.customerPropertyGrid = new Serenity.PropertyGrid(this.byId(\"CustomerPropertyGrid\"), {\r\n                items: Q.getForm(Northwind.CustomerForm.formKey).filter(x => x.name != 'CustomerID' && x.name != \"NoteList\"),\r\n                idPrefix: this.idPrefix + \"_Customer_\",\r\n                useCategories: true\r\n            });\r\n\r\n            // this is just a helper to access editors if needed\r\n            this.customerForm = new Northwind.CustomerForm((this.customerPropertyGrid as any).idPrefix);\r\n\r\n            // initialize validator for customer form\r\n            this.customerValidator = this.byId(\"CustomerForm\").validate(Q.validateOptions({}));\r\n\r\n            this.form.CustomerID.change(e => {\r\n                if (this.selfChange)\r\n                    return;\r\n\r\n                var customerID = this.getCustomerID();\r\n\r\n                Serenity.TabsExtensions.setDisabled(this.tabs, 'Customer', !customerID);\r\n\r\n                if (!customerID) {\r\n                    // no customer is selected, just load an empty entity\r\n                    this.customerPropertyGrid.load({});\r\n                    return;\r\n                }\r\n\r\n                // load selected customer into customer form by calling CustomerService\r\n                Northwind.CustomerService.Retrieve({\r\n                    EntityId: customerID\r\n                }, response => {\r\n                    this.customerPropertyGrid.load(response.Entity);\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        getCustomerID() {\r\n            var customerID = this.form.CustomerID.value;\r\n\r\n            if (Q.isEmptyOrNull(customerID))\r\n                return null;\r\n\r\n            // unfortunately, CustomerID (a string) used in this form and \r\n            // the ID (auto increment ID) are different, so we need to \r\n            // find numeric ID from customer lookups. \r\n            // you'll probably won't need this step.\r\n            return Q.first(Northwind.CustomerRow.getLookup().items,\r\n                x => x.CustomerID == customerID).ID;\r\n        }\r\n\r\n        loadEntity(entity: Northwind.OrderRow) {\r\n            super.loadEntity(entity);\r\n\r\n            Serenity.TabsExtensions.setDisabled(this.tabs, 'Customer',\r\n                !this.getCustomerID());\r\n        }\r\n\r\n        // Save the customer and the order \r\n        protected saveCustomer(callback: (response: Serenity.SaveResponse) => void, onSuccess?: (response: Serenity.SaveResponse) => void): boolean {\r\n            var id = this.getCustomerID();\r\n            if (!id) {\r\n                // If id of Customer isn't present, we save only Order entity\r\n                onSuccess(null);\r\n            }\r\n            else {\r\n                // Get current tab\r\n                var currTab = Serenity.TabsExtensions.activeTabKey(this.tabs);\r\n\r\n                // Select the correct tab and validate to see the error message in tab\r\n                Serenity.TabsExtensions.selectTab(this.tabs, \"Customer\")\r\n                if (!this.customerValidator.form()) {\r\n                    return false;\r\n                }\r\n\r\n                // Re-select initial tab\r\n                Serenity.TabsExtensions.selectTab(this.tabs, currTab)\r\n\r\n                // prepare an empty entity to serialize customer details into\r\n                var c = <Northwind.CustomerRow>{};\r\n                this.customerPropertyGrid.save(c);\r\n\r\n                Northwind.CustomerService.Update({\r\n                    EntityId: id,\r\n                    Entity: c\r\n                }, response => {\r\n                    // reload customer list just in case\r\n                    Q.reloadLookup(Northwind.CustomerRow.lookupKey);\r\n\r\n                    // set flag that we are triggering customer select change event\r\n                    // otherwise active tab will change to first one\r\n                    this.selfChange++;\r\n                    try {\r\n                        // trigger change so that customer select updates its text\r\n                        // in case if Company Name is changed\r\n                        this.form.CustomerID.element.change();\r\n                    }\r\n                    finally {\r\n                        this.selfChange--;\r\n                    }\r\n\r\n                    onSuccess(response);\r\n                });\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        // Call super.save to save Order entity\r\n        protected saveOrder(callback: (response: Serenity.SaveResponse) => void) {\r\n            super.save(callback);\r\n        }\r\n\r\n        protected saveAll(callback: (response: Serenity.SaveResponse) => void) {\r\n            this.saveCustomer(callback,\r\n                // If customer successa, save Order entity\r\n                resp => this.saveOrder(callback)\r\n            );\r\n        }\r\n\r\n        // This is called when save/update button is pressed\r\n        protected save(callback: (response: Serenity.SaveResponse) => void) {\r\n            this.saveAll(callback);\r\n        }\r\n\r\n        protected getTemplate() {\r\n            return `<div id=\"~_Toolbar\" class=\"s-DialogToolbar\">\r\n</div>\r\n<div id=\"~_Tabs\" class=\"s-DialogContent\">\r\n    <ul>\r\n        <li><a href=\"#~_TabOrder\"><span>Order</span></a></li>\r\n        <li><a href=\"#~_TabCustomer\"><span>Customer</span></a></li>\r\n    </ul>\r\n    <div id=\"~_TabOrder\" class=\"tab-pane s-TabOrder\">\r\n        <div class=\"s-Form\">\r\n            <form id=\"~_Form\" action=\"\">\r\n                <div class=\"fieldset\">\r\n                    <div id=\"~_PropertyGrid\"></div>\r\n                    <div class=\"clear\"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div id=\"~_TabCustomer\" class=\"tab-pane s-TabCustomer\">\r\n        <div class=\"s-Form\">\r\n            <form id=\"~_CustomerForm\" action=\"\">\r\n                <div class=\"fieldset\">\r\n                    <div id=\"~_CustomerPropertyGrid\"></div>\r\n                    <div class=\"clear\"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>`;\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Subclass of OrderGrid to override dialog type to OtherFormInTabOneBarDialog\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class OtherFormInTabOneBarGrid extends Northwind.OrderGrid {\r\n\r\n        protected getDialogType() { return OtherFormOneBarDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class PopulateLinkedDataDialog extends Serenity.EntityDialog<Northwind.OrderRow, any> {\r\n\r\n        protected getFormKey() { return PopulateLinkedDataForm.formKey; }\r\n        protected getIdProperty() { return Northwind.OrderRow.idProperty; }\r\n        protected getLocalTextPrefix() { return Northwind.OrderRow.localTextPrefix; }\r\n        protected getNameProperty() { return Northwind.OrderRow.nameProperty; }\r\n        protected getService() { return Northwind.OrderService.baseUrl; }\r\n\r\n        protected form = new PopulateLinkedDataForm(this.idPrefix);\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            // \"changeSelect2\" is only fired when user changes the selection\r\n            // but \"change\" is fired when dialog sets customer on load too\r\n            // so we prefer \"changeSelect2\", as initial customer details \r\n            // will get populated by initial load, we don't want extra call\r\n            this.form.CustomerID.changeSelect2(e => {\r\n                var customerID = this.form.CustomerID.value;\r\n                if (Q.isEmptyOrNull(customerID)) {\r\n                    this.setCustomerDetails({});\r\n                    return;\r\n                }\r\n\r\n                // in northwind CustomerID is a string like \"ALFKI\", \r\n                // while its actual integer ID value is 1.\r\n                // so we need to convert customer ID to ID.\r\n                // you won't have to do this conversion with your tables\r\n                var id = Q.first(Northwind.CustomerRow.getLookup().items, x => x.CustomerID == customerID).ID;\r\n\r\n                Northwind.CustomerService.Retrieve({\r\n                    EntityId: id\r\n                }, response => {\r\n                    this.setCustomerDetails(response.Entity);\r\n                });\r\n            });\r\n        }\r\n\r\n        private setCustomerDetails(details: Northwind.CustomerRow) {\r\n            this.form.CustomerCity.value = details.City;\r\n            this.form.CustomerContactName.value = details.ContactName;\r\n            this.form.CustomerContactTitle.value = details.ContactTitle;\r\n            this.form.CustomerCountry.value = details.Country;\r\n            this.form.CustomerFax.value = details.Fax;\r\n            this.form.CustomerPhone.value = details.Phone;\r\n            this.form.CustomerRegion.value = details.Region;\r\n        }\r\n\r\n        /**\r\n         * This dialog will have CSS class \"s-PopulateLinkedDataDialog\"\r\n         * We are changing it here to \"s-OrderDialog\", to make it use default OrderDialog styles\r\n         * This has no effect other than looks on populate linked data demonstration\r\n         */\r\n        protected getCssClass() {\r\n            return super.getCssClass() + \" s-OrderDialog s-Demo-Northwind-OrderDialog\";\r\n        }\r\n\r\n\r\n\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * A subclass of OrderGrid that launches PopulateLinkedDataDialog\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class PopulateLinkedDataGrid extends Northwind.OrderGrid {\r\n\r\n        protected getDialogType() { return PopulateLinkedDataDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class ReadOnlyDialog extends Northwind.SupplierDialog {\r\n\r\n        /**\r\n         * This is the method that gets list of tool \r\n         * buttons to be created in a dialog.\r\n         *\r\n         * Here we'll remove save and close button, and\r\n         * apply changes buttons. \r\n         */\r\n        protected getToolbarButtons(): Serenity.ToolButton[] {\r\n            let buttons = super.getToolbarButtons();\r\n\r\n            buttons.splice(Q.indexOf(buttons, x => x.cssClass == \"save-and-close-button\"), 1);\r\n            buttons.splice(Q.indexOf(buttons, x => x.cssClass == \"apply-changes-button\"), 1);\r\n\r\n            // We could also remove delete button here, but for demonstration \r\n            // purposes we'll hide it in another method (updateInterface)\r\n            // buttons.splice(Q.indexOf(buttons, x => x.cssClass == \"delete-button\"), 1);\r\n\r\n            return buttons;\r\n        }\r\n\r\n        /**\r\n         * This method is a good place to update states of\r\n         * interface elements. It is called after dialog\r\n         * is initialized and an entity is loaded into dialog.\r\n         * This is also called in new item mode.\r\n         */\r\n        protected updateInterface(): void {\r\n\r\n            super.updateInterface();\r\n\r\n            // finding all editor elements and setting their readonly attribute\r\n            // note that this helper method only works with basic inputs, \r\n            // some editors require widget based set readonly overload (setReadOnly)\r\n            Serenity.EditorUtils.setReadonly(this.element.find('.editor'), true);\r\n\r\n            // remove required asterisk (*)\r\n            this.element.find('sup').hide();\r\n\r\n            // here is a way to locate a button by its css class\r\n            // note that this method is not available in \r\n            // getToolbarButtons() because buttons are not \r\n            // created there yet!\r\n            // \r\n            // this.toolbar.findButton('delete-button').hide();\r\n\r\n            // entity dialog also has reference variables to\r\n            // its default buttons, lets use them to hide delete button\r\n            this.deleteButton.hide();\r\n\r\n            // we could also hide save buttons just like delete button,\r\n            // but they are null now as we removed them in getToolbarButtons()\r\n            // if we didn't we could write like this:\r\n            // \r\n            // this.applyChangesButton.hide();\r\n            // this.saveAndCloseButton.hide();\r\n\r\n            // instead of hiding, we could disable a button\r\n            // \r\n            // this.deleteButton.toggleClass('disabled', true);\r\n        }\r\n\r\n        /**\r\n         * This method is called when dialog title needs to be updated.\r\n         * Base class returns something like 'Edit xyz' for edit mode,\r\n         * and 'New xyz' for new record mode.\r\n         * \r\n         * But our dialog is readonly, so we should change it to 'View xyz'\r\n         */\r\n        protected getEntityTitle(): string {\r\n\r\n            if (!this.isEditMode()) {\r\n                // we shouldn't hit here, but anyway for demo...\r\n                return \"How did you manage to open this dialog in new record mode?\";\r\n            }\r\n            else {\r\n                // entitySingular is type of record this dialog edits. something like 'Supplier'.\r\n                // you could hardcode it, but this is for demonstration\r\n                var entityType = super.getEntitySingular();\r\n\r\n                // get name field value of record this dialog edits\r\n                let name = this.getEntityNameFieldValue() || \"\";\r\n\r\n                // you could use Q.format with a local text, but again demo...\r\n                return 'View ' + entityType + \" (\" + name + \")\";\r\n            }\r\n        }\r\n\r\n        /**\r\n         * This method is actually the one that calls getEntityTitle()\r\n         * and updates the dialog title. We could do it here too...\r\n         */\r\n        protected updateTitle(): void {\r\n            super.updateTitle();\r\n\r\n            // remove super.updateTitle() call above and uncomment \r\n            // below line if you'd like to use this version\r\n            // \r\n            // this.dialogTitle = 'View Supplier (' + this.getEntityNameFieldValue() + ')';\r\n        }\r\n\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * A readonly grid that launches ReadOnlyDialog\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class ReadOnlyGrid extends Northwind.SupplierGrid {\r\n\r\n        protected getDialogType() { return ReadOnlyDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        /**\r\n         * Removing add button from grid using its css class\r\n         */\r\n        protected getButtons(): Serenity.ToolButton[] {\r\n            var buttons = super.getButtons();\r\n            buttons.splice(Q.indexOf(buttons, x => x.cssClass == \"add-button\"), 1);\r\n            return buttons;\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class SerialAutoNumberDialog extends Northwind.CustomerDialog {\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.form.CustomerID.element.on('keyup', (e) => {\r\n                // only auto number when a key between 'A' and 'Z' is pressed\r\n                if (e.which >= 65 && e.which <= 90)\r\n                    this.getNextNumber();\r\n            });\r\n        }\r\n\r\n        protected afterLoadEntity() {\r\n            super.afterLoadEntity();\r\n\r\n            // fill next number in new record mode\r\n            if (this.isNew())\r\n                this.getNextNumber();\r\n        }\r\n\r\n        private getNextNumber() {\r\n            \r\n            var val = Q.trimToNull(this.form.CustomerID.value);\r\n\r\n            // we will only get next number when customer ID is empty or 1 character in length\r\n            if (!val || val.length <= 1) {\r\n\r\n                // if no customer ID yet (new record mode probably) use 'C' as a prefix\r\n                var prefix = (val || 'C').toUpperCase();\r\n\r\n                // call our service, see CustomerEndpoint.cs and CustomerRepository.cs\r\n                Serenity.Demo.Northwind.CustomerService.GetNextNumber({\r\n                    Prefix: prefix,\r\n                    Length: 5 // we want service to search for and return serials of 5 in length\r\n                }, response => {\r\n                    this.form.CustomerID.value = response.Serial;\r\n\r\n                    // this is to mark numerical part after prefix\r\n                    (this.form.CustomerID.element[0] as any).setSelectionRange(prefix.length, response.Serial.length);\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Subclass of CustomerGrid to override dialog type to SerialAutoNumberDialog\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class SerialAutoNumberGrid extends Northwind.CustomerGrid {\r\n\r\n        protected getDialogType() { return SerialAutoNumberDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class ChangingLookupTextDialog extends Extensions.GridEditorDialog<Northwind.OrderDetailRow> {\r\n        protected getFormKey() { return ChangingLookupTextForm.formKey; }\r\n        protected getLocalTextPrefix() { return Northwind.OrderDetailRow.localTextPrefix; }\r\n\r\n        protected form: ChangingLookupTextForm;\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.form = new ChangingLookupTextForm(this.idPrefix);\r\n\r\n            this.form.ProductID.changeSelect2(e => {\r\n                var productID = Q.toId(this.form.ProductID.value);\r\n                if (productID != null) {\r\n                    this.form.UnitPrice.value = Northwind.ProductRow.getLookup().itemById[productID].UnitPrice;\r\n                }\r\n            });\r\n\r\n            this.form.Discount.addValidationRule(this.uniqueName, e => {\r\n                var price = this.form.UnitPrice.value;\r\n                var quantity = this.form.Quantity.value;\r\n                var discount = this.form.Discount.value;\r\n                if (price != null && quantity != null && discount != null &&\r\n                    discount > 0 && discount >= price * quantity) {\r\n                    return \"Discount can't be higher than total price!\";\r\n                }\r\n            });\r\n        }\r\n\r\n        protected updateInterface() {\r\n            super.updateInterface();\r\n            this.toolbar.findButton('apply-changes-button').hide();\r\n            this.toolbar.findButton('save-and-close-button').hide();\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Our custom product editor type\r\n     */\r\n    @Serenity.Decorators.registerEditor()\r\n    export class ChangingLookupTextEditor extends Serenity.LookupEditorBase<Serenity.LookupEditorOptions, Northwind.ProductRow> {\r\n\r\n        constructor(container: JQuery, options: Serenity.LookupEditorOptions) {\r\n            super(container, options);\r\n        }\r\n\r\n        protected getLookupKey() {\r\n            return Northwind.ProductRow.lookupKey;\r\n        }\r\n\r\n        protected getItemText(item: Northwind.ProductRow, lookup: Q.Lookup<Northwind.ProductRow>) {\r\n            return super.getItemText(item, lookup) +\r\n                ' (' +\r\n                '$' + Q.formatNumber(item.UnitPrice, '#,##0.00') +\r\n                ', ' + (item.UnitsInStock > 0 ? (item.UnitsInStock + ' in stock') : 'out of stock') +\r\n                ', ' + (item.SupplierCompanyName || 'Unknown') +\r\n                ')';\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Our subclass of order detail dialog with a CategoryID property\r\n     * that will be used to set CascadeValue of product editor\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class FilteredLookupOrderDetailDialog extends Northwind.OrderDetailDialog {\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.form = new Northwind.OrderDetailForm(this.idPrefix);\r\n\r\n            // we can set cascade field in constructor\r\n            // we could also use FilterField but in this case, when CategoryID is null\r\n            // lookup editor would show all products in any category\r\n            this.form.ProductID.cascadeField = Northwind.ProductRow.Fields.CategoryID;\r\n\r\n            // but CategoryID value is not yet available here as detail editor will set it \r\n            // after calling constructor (creating a detail dialog) so we'll use BeforeLoadEntity\r\n        }\r\n\r\n        /**\r\n         * This method is called just before an entity is loaded to dialog\r\n         * This is also called for new record mode with an empty entity\r\n         */\r\n        protected beforeLoadEntity(entity) {\r\n            super.beforeLoadEntity(entity);\r\n\r\n            // setting cascade value here\r\n            // make sure you have [LookupInclude] on CategoryID property of ProductRow\r\n            // otherwise this field won't be available in lookup script (will always be null),\r\n            // so can't be filtered and you'll end up with an empty product list.\r\n            this.form.ProductID.cascadeValue = this.categoryID;\r\n        }\r\n\r\n        public categoryID: number;\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Our subclass of Order Details editor with a CategoryID property\r\n     */\r\n    @Serenity.Decorators.registerEditor()\r\n    export class FilteredLookupDetailEditor extends Northwind.OrderDetailsEditor {\r\n\r\n        protected getDialogType() { return FilteredLookupOrderDetailDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        public categoryID: number;\r\n\r\n        /**\r\n         * This method is called to initialize an edit dialog created by\r\n         * grid editor when Add button or an edit link is clicked\r\n         * We have an opportunity here to pass CategoryID to edit dialog\r\n         */\r\n        protected initEntityDialog(itemType: string, dialog: Serenity.Widget<any>) {\r\n            super.initEntityDialog(itemType, dialog);\r\n\r\n            // passing category ID from grid editor to detail dialog\r\n            (dialog as FilteredLookupOrderDetailDialog).categoryID = this.categoryID;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Basic order dialog with a category selection\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class FilteredLookupInDetailDialog extends Serenity.EntityDialog<Northwind.OrderRow, any> {\r\n\r\n        protected getFormKey() { return FilteredLookupInDetailForm.formKey; }\r\n        protected getIdProperty() { return Northwind.OrderRow.idProperty; }\r\n        protected getLocalTextPrefix() { return Northwind.OrderRow.localTextPrefix; }\r\n        protected getNameProperty() { return Northwind.OrderRow.nameProperty; }\r\n        protected getService() { return Northwind.OrderService.baseUrl; }\r\n\r\n        private form: FilteredLookupInDetailForm;\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.form = new FilteredLookupInDetailForm(this.idPrefix);\r\n            this.form.CategoryID.change(e => {\r\n                this.form.DetailList.categoryID = Q.toId(this.form.CategoryID.value);\r\n            });\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Subclass of OrderGrid to override dialog type to FilteredLookupInDetailDialog\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class FilteredLookupInDetailGrid extends Northwind.OrderGrid {\r\n\r\n        protected getDialogType() { return FilteredLookupInDetailDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * This is our custom product dialog that uses a different product form\r\n     * (LookupFilterByMultipleForm) with our special category editor.\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class LookupFilterByMultipleDialog extends Northwind.ProductDialog {\r\n\r\n        protected getFormKey() { return LookupFilterByMultipleForm.formKey; }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Subclass of ProductGrid to override dialog type to CloneableEntityDialog\r\n     */\r\n    @Serenity.Decorators.registerClass()\r\n    export class LookupFilterByMultipleGrid extends Serenity.EntityGrid<Northwind.ProductRow, any> {\r\n\r\n        protected getColumnsKey() { return Northwind.ProductColumns.columnsKey; }\r\n        protected getDialogType() { return LookupFilterByMultipleDialog; }\r\n        protected getIdProperty() { return Northwind.ProductRow.idProperty; }\r\n        protected getLocalTextPrefix() { return Northwind.ProductRow.localTextPrefix; }\r\n        protected getService() { return Northwind.ProductService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        /**\r\n         * This method is called just before List request is sent to service.\r\n         * You have an opportunity here to cancel request or modify it.\r\n         * Here we'll add a custom criteria to list request.\r\n         */\r\n        protected onViewSubmit() {\r\n            if (!super.onViewSubmit()) {\r\n                return false;\r\n            }\r\n\r\n            // this has no relation to our lookup editor but as we'll allow picking only \r\n            // categories of Produce and Seafood in product dialog, it's better to show\r\n            // only products from these categories in grid too\r\n            let request = this.view.params as Serenity.ListRequest;\r\n            request.Criteria = Serenity.Criteria.and(request.Criteria,\r\n                [['CategoryName'], 'in', [['Produce', 'Seafood']]]);\r\n\r\n            // brackets used are important above, NOT ['CategoryName', 'in', ['Produce', 'Seafood']]\r\n\r\n            return true;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * This is our category editor that will show only categories of Produce and\r\n     * Seafood. We are subclassing LookupEditorBase which also LookupEditor\r\n     * derives from.\r\n     *\r\n     * After compiling and transforming templates, this editor type will be\r\n     * available in server side to use in our LookupFilterByMultipleForm,\r\n     * which is a version of ProductForm that uses our custom editor.\r\n     */\r\n    @Serenity.Decorators.registerEditor()\r\n    export class ProduceSeafoodCategoryEditor extends\r\n        Serenity.LookupEditorBase<Serenity.LookupEditorOptions, Northwind.CategoryRow> {\r\n\r\n        constructor(container: JQuery, opt: Serenity.LookupEditorOptions) {\r\n            super(container, opt);\r\n        }\r\n\r\n        /**\r\n         * Normally LookupEditor requires a lookup key to determine which set of\r\n         * lookup data to show in editor. As our editor will only show category\r\n         * data, we lock it to category lookup key.\r\n         */\r\n        protected getLookupKey() {\r\n            return Northwind.CategoryRow.lookupKey;\r\n        }\r\n\r\n        /**\r\n         * Here we are filtering by category name but you could filter by any field.\r\n         * Just make sure the fields you filter on has [LookupInclude] attribute on them,\r\n         * otherwise their value will be null in client side as they are not sent back\r\n         * from server in lookup script.\r\n         */\r\n        protected getItems(lookup: Q.Lookup<Northwind.CategoryRow>) {\r\n            return super.getItems(lookup).filter(x =>\r\n                x.CategoryName === 'Produce' || x.CategoryName === 'Seafood');\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class HardcodedValuesDialog extends Serenity.PropertyDialog<any, any> {\r\n        protected getFormKey() { return HardcodedValuesForm.formKey; }\r\n\r\n        protected form = new HardcodedValuesForm(this.idPrefix);\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.dialogTitle = \"Please select some value\";\r\n\r\n            this.form.SomeValue.changeSelect2(e => {\r\n                Q.notifySuccess(\"You selected item with key: \" + this.form.SomeValue.value);\r\n            });\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    /**\r\n     * Our select editor with hardcoded values.\r\n     * \r\n     * When you define a new editor type, make sure you build\r\n     * and transform templates for it to be available \r\n     * in server side forms, e.g. [HardCodedValuesEditor]\r\n     */\r\n    @Serenity.Decorators.registerEditor()\r\n    export class HardcodedValuesEditor extends Serenity.Select2Editor<any, any> {\r\n\r\n        constructor(container: JQuery) {\r\n            super(container, null);\r\n\r\n            // add option accepts a key (id) value and display text value\r\n            this.addOption(\"key1\", \"Text 1\");\r\n            this.addOption(\"key2\", \"Text 2\");\r\n\r\n            // you may also use addItem which accepts a Select2Item parameter\r\n            this.addItem({\r\n                id: \"key3\",\r\n                text: \"Text 3\"\r\n            });\r\n\r\n            // don't let selecting this one (disabled)\r\n            this.addItem({\r\n                id: \"key4\",\r\n                text: \"Text 4\",\r\n                disabled: true\r\n            });\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class StaticTextBlockDialog extends Serenity.PropertyDialog<any, any> {\r\n        protected getFormKey() { return StaticTextBlockForm.formKey; }\r\n\r\n        protected form = new StaticTextBlockForm(this.idPrefix);\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.dialogTitle = \"A form with static text blocks\";\r\n        }\r\n\r\n        /**\r\n         * Here we override loadInitialEntity method to set value for \"DisplayFieldValue\" field.\r\n         * If this was an EntityDialog, your field value would be originating from server side entity.\r\n         */\r\n        protected loadInitialEntity() {\r\n            this.propertyGrid.load({\r\n                DisplayFieldValue: 'This content comes from <b>the value</b> of <em>DisplayFieldValue</em> field.'\r\n            });\r\n        }\r\n\r\n        protected getDialogOptions() {\r\n            var opt = super.getDialogOptions();\r\n            opt.width = 650;\r\n            return opt;\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    import fld = Northwind.OrderRow.Fields;\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class CustomLinksInGrid extends Northwind.OrderGrid {\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        /**\r\n         * We override getColumns() to change format functions for some columns.\r\n         * You could also write them as formatter classes, and use them at server side\r\n         */\r\n        protected getColumns(): Slick.Column[] {\r\n            var columns = super.getColumns();\r\n\r\n\r\n            Q.first(columns, x => x.field == fld.CustomerCompanyName).format =\r\n                ctx => `<a href=\"javascript:;\" class=\"customer-link\">${Q.htmlEncode(ctx.value)}</a>`;\r\n\r\n            Q.first(columns, x => x.field == fld.OrderDate).format =\r\n                ctx => `<a href=\"javascript:;\" class=\"date-link\">${Q.formatDate(ctx.value)}</a>`;\r\n\r\n            Q.first(columns, x => x.field == fld.EmployeeFullName).format =\r\n                ctx => `<a href=\"javascript:;\" class=\"employee-link\">${Q.htmlEncode(ctx.value)}</a>`;\r\n\r\n            Q.first(columns, x => x.field == fld.ShipCountry).format =\r\n                ctx => `<a href=\"javascript:;\" class=\"ship-country-link\">${Q.htmlEncode(ctx.value)}</a>`;\r\n\r\n            return columns;\r\n        }\r\n\r\n        protected onClick(e: JQueryEventObject, row: number, cell: number): void {\r\n\r\n            // let base grid handle clicks for its edit links\r\n            super.onClick(e, row, cell);\r\n\r\n            // if base grid already handled, we shouldn\"t handle it again\r\n            if (e.isDefaultPrevented()) {\r\n                return;\r\n            }\r\n\r\n            // get reference to current item\r\n            var item = this.itemAt(row);\r\n\r\n            // get reference to clicked element\r\n            var target = $(e.target);\r\n\r\n            if (target.hasClass(\"customer-link\")) {\r\n                e.preventDefault();\r\n\r\n                let message = Q.format(\r\n                    \"<p>You have clicked an order from customer: {0}.</p>\" +\r\n                    \"<p>If you click Yes, i'll open Customer dialog.</p>\" +\r\n                    \"<p>If you click No, i'll open Order dialog.</p>\",\r\n                    Q.htmlEncode(item.CustomerCompanyName));\r\n\r\n                Q.confirm(message, () => {\r\n                    // CustomerDialog doesn't use CustomerID but ID (identity)\r\n                    // so need to find customer to get its actual ID\r\n                    var customer = Q.first(Northwind.CustomerRow.getLookup().items,\r\n                        x => x.CustomerID == item.CustomerID);\r\n\r\n                    new Northwind.CustomerDialog().loadByIdAndOpenDialog(customer.ID);\r\n                },\r\n                    {\r\n                        htmlEncode: false,\r\n                        onNo: () => {\r\n                            new Northwind.OrderDialog().loadByIdAndOpenDialog(item.OrderID);\r\n                        }\r\n                    });\r\n            }\r\n            else if (target.hasClass(\"date-link\")) {\r\n                e.preventDefault();\r\n\r\n                var ordersInSameDate = Q.count(this.view.getItems(), x => x.OrderDate == item.OrderDate);\r\n\r\n                Q.notifyInfo(\"You clicked an order from date \" +\r\n                    Q.formatDate(item.OrderDate) + \". There are \" +\r\n                    ordersInSameDate + \" orders from the same date that is loaded in grid at the moment\");\r\n            }\r\n            else if (target.hasClass(\"employee-link\")) {\r\n                e.preventDefault();\r\n\r\n                Q.notifySuccess(\"You clicked an employee name, \" +\r\n                    \"so i've opened a new Order Dialog from same customer \" +\r\n                    \"with that employee prepopulated!\");\r\n\r\n                new Northwind.OrderDialog().loadEntityAndOpenDialog(<Northwind.OrderRow>{\r\n                    CustomerID: item.CustomerID,\r\n                    EmployeeID: item.EmployeeID\r\n                });\r\n            }\r\n            else if (target.hasClass(\"ship-country-link\")) {\r\n                e.preventDefault();\r\n\r\n                Q.notifySuccess(\"Let's filter the grid to orders from \" + item.ShipCountry);\r\n                var countryFilter = this.findQuickFilter(Serenity.LookupEditor,\r\n                    Northwind.OrderRow.Fields.ShipCountry);\r\n                countryFilter.value = item.ShipCountry;\r\n                this.refresh();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * This method is called for columns with [EditLink] attribute,\r\n         * but only for edit links of this grid's own item type.\r\n         * It is also called by Add Product button with a NULL entityOrId\r\n         * parameter so we should check that entityOrId is a string\r\n         * to be sure it is originating from a link.\r\n         *\r\n         * As we changed format for other columns, this will only be called\r\n         * for links in remaining OrderID column\r\n         */\r\n        protected editItem(entityOrId) {\r\n            // check that this is an edit link click, not add button, ID is always a string\r\n            if (typeof entityOrId == \"string\") {\r\n                // convert ID to an integer, and find order with that ID\r\n                var item = this.view.getItemById(Q.toId(entityOrId));\r\n                // date is a ISO string, so need to parse it first\r\n                var date = Q.formatDate(item.OrderDate);\r\n\r\n                // ask for confirmation\r\n                Q.confirm(Q.format(\"You clicked edit link for order with ID: {0} and Date: {1}. Should i open that order?\",\r\n                    item.OrderID, date), () => {\r\n                        new Northwind.OrderDialog().loadByIdAndOpenDialog(item.OrderID);\r\n                    });\r\n            }\r\n            else {\r\n                super.editItem(entityOrId);\r\n            }\r\n        }\r\n\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class RowSelectionGrid extends Extensions.SelectableEntityGrid<Northwind.SupplierRow, any> {\r\n        protected getColumnsKey() { return Northwind.SupplierColumns.columnsKey; }\r\n        protected getDialogType() { return <any>Northwind.SupplierDialog; }\r\n        protected getIdProperty() { return Northwind.SupplierRow.idProperty; }\r\n        protected getLocalTextPrefix() { return Northwind.SupplierRow.localTextPrefix; }\r\n        protected getService() { return Northwind.SupplierService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class GridFilteredByCriteria extends Serenity.EntityGrid<Northwind.ProductRow, any> {\r\n\r\n        protected getColumnsKey() { return Northwind.ProductColumns.columnsKey; }\r\n        protected getDialogType() { return Northwind.ProductDialog; }\r\n        protected getIdProperty() { return Northwind.ProductRow.idProperty; }\r\n        protected getLocalTextPrefix() { return Northwind.ProductRow.localTextPrefix; }\r\n        protected getService() { return Northwind.ProductService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected onViewSubmit() {\r\n            // only continue if base class returns true (didn't cancel request)\r\n            if (!super.onViewSubmit()) {\r\n                return false;\r\n            }\r\n\r\n            // view object is the data source for grid (SlickRemoteView)\r\n            // this is an EntityGrid so its Params object is a ListRequest\r\n            var request = this.view.params as Serenity.ListRequest;\r\n\r\n            // list request has a Criteria parameter\r\n            // we AND criteria here to existing one because \r\n            // otherwise we might clear filter set by \r\n            // an edit filter dialog if any.\r\n\r\n            request.Criteria = Serenity.Criteria.and(request.Criteria,\r\n                [['UnitsInStock'], '>', 10],\r\n                [['CategoryName'], '!=', 'Condiments'],\r\n                [['Discontinued'], '=', 0]);\r\n\r\n            // TypeScript doesn't support operator overloading\r\n            // so we had to use array syntax above to build criteria.\r\n\r\n            // Make sure you write\r\n            // [['Field'], '>', 10] (which means field A is greater than 10)\r\n            // not \r\n            // ['A', '>', 10] (which means string 'A' is greater than 10\r\n\r\n            return true;\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class GroupingAndSummariesInGrid extends Serenity.EntityGrid<Northwind.ProductRow, any> {\r\n\r\n        protected getColumnsKey() { return Northwind.ProductColumns.columnsKey; }\r\n        protected getDialogType() { return LookupFilterByMultipleDialog; }\r\n        protected getIdProperty() { return Northwind.ProductRow.idProperty; }\r\n        protected getLocalTextPrefix() { return Northwind.ProductRow.localTextPrefix; }\r\n        protected getService() { return Northwind.ProductService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected createSlickGrid() {\r\n            var grid = super.createSlickGrid();\r\n\r\n            // need to register this plugin for grouping or you'll have errors\r\n            grid.registerPlugin(new Slick.Data.GroupItemMetadataProvider());\r\n\r\n            this.view.setSummaryOptions({\r\n                aggregators: [\r\n                    new Slick.Aggregators.Avg('UnitPrice'),\r\n                    new Slick.Aggregators.Sum('UnitsInStock'),\r\n                    new Slick.Aggregators.Max('UnitsOnOrder'),\r\n                    new Slick.Aggregators.Avg('ReorderLevel')\r\n                ]\r\n            });\r\n\r\n            return grid;\r\n        }\r\n\r\n        protected getColumns() {\r\n            var columns = super.getColumns();\r\n\r\n            Q.first(columns, x => x.field === 'UnitsOnOrder')\r\n                .groupTotalsFormatter = (totals, col) =>\r\n                    (totals.max ? ('max: ' + Q.coalesce(totals.max[col.field], '')) : '');\r\n\r\n            Q.first(columns, x => x.field === 'ReorderLevel')\r\n                .groupTotalsFormatter = (totals, col) =>\r\n                    (totals.avg ? ('avg: ' + Q.coalesce(Q.formatNumber(totals.avg[col.field], '0.'), '')) : '');\r\n\r\n            return columns;\r\n        }\r\n\r\n        protected getSlickOptions() {\r\n            var opt = super.getSlickOptions();\r\n            opt.showFooterRow = true;\r\n            return opt;\r\n        }\r\n\r\n        protected usePager() {\r\n            return false;\r\n        }\r\n\r\n        protected getButtons() {\r\n            return [{\r\n                title: 'Group By Category',\r\n                cssClass: 'expand-all-button',\r\n                onClick: () => this.view.setGrouping(\r\n                    [{\r\n                        getter: 'CategoryName'\r\n                    }])\r\n            },\r\n            {\r\n                title: 'Group By Category and Supplier',\r\n                cssClass: 'expand-all-button',\r\n                onClick: () => this.view.setGrouping(\r\n                    [{\r\n                        formatter: x => 'Category: ' + x.value + ' (' + x.count + ' items)',\r\n                        getter: 'CategoryName'\r\n                    }, {\r\n                        formatter: x => 'Supplier: ' + x.value + ' (' + x.count + ' items)',\r\n                        getter: 'SupplierCompanyName'\r\n                    }])\r\n            }, {\r\n                title: 'No Grouping',\r\n                cssClass: 'collapse-all-button',\r\n                onClick: () => this.view.setGrouping([])\r\n            }];\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    // get a reference to order row field names\r\n    import fld = Northwind.OrderRow.Fields;\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class InitialValuesForQuickFilters extends Northwind.OrderGrid {\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        /**\r\n         * This method is called to get list of quick filters to be created for this grid.\r\n         * By default, it returns quick filter objects corresponding to properties that\r\n         * have a [QuickFilter] attribute at server side OrderColumns.cs\r\n         */\r\n        protected getQuickFilters(): Serenity.QuickFilter<Serenity.Widget<any>, any>[] {\r\n\r\n            // get quick filter list from base class\r\n            let filters = super.getQuickFilters();\r\n\r\n            // quick filter init method is a good place to set initial\r\n            // value for a quick filter editor, just after it is created\r\n\r\n            Q.first(filters, x => x.field == fld.OrderDate).init = w => {\r\n                // w is a reference to the editor for this quick filter widget\r\n                // here we cast it to DateEditor, and set its value as date.\r\n                // note that in Javascript, months are 0 based, so date below\r\n                // is actually 2016-05-01\r\n                (w as Serenity.DateEditor).valueAsDate = new Date(2010, 4, 1);\r\n\r\n                // setting start date was simple. but this quick filter is actually\r\n                // a combination of two date editors. to get reference to second one,\r\n                // need to find its next sibling element by its class\r\n                let endDate = w.element.nextAll(\".s-DateEditor\").getWidget(Serenity.DateEditor);\r\n                endDate.valueAsDate = new Date(2020, 6, 1);\r\n            };\r\n\r\n            Q.first(filters, x => x.field == fld.ShippingState).init = w => {\r\n                // enum editor has a string value, so need to call toString()\r\n                (w as Serenity.EnumEditor).value = Northwind.OrderShippingState.NotShipped.toString()\r\n            };\r\n\r\n            return filters;\r\n        }\r\n\r\n        /**\r\n         * This method is another possible place to modify quick filter widgets.\r\n         * It is where the quick filter widgets are actually created.\r\n         * \r\n         * By default, it calls getQuickFilters() then renders UI for these\r\n         * quick filters.\r\n         *\r\n         * We could use getQuickFilters() method for ShipVia too,\r\n         * but this is for demonstration purposes\r\n         */\r\n        protected createQuickFilters(): void {\r\n\r\n            // let base class to create quick filters first\r\n            super.createQuickFilters();\r\n\r\n            // find a quick filter widget by its field name\r\n            this.findQuickFilter(Serenity.LookupEditor, fld.ShipVia).values = [\"1\", \"2\"];\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class InlineActionGrid extends Northwind.CustomerGrid {\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getColumns() {\r\n            var columns = super.getColumns();\r\n\r\n            columns.unshift({\r\n                field: 'Delete Row',\r\n                name: '',\r\n                format: ctx => '<a class=\"inline-action delete-row\" title=\"delete\">' + \r\n                    '<i class=\"fa fa-trash-o text-red\"></i></a>',\r\n                width: 24,\r\n                minWidth: 24,\r\n                maxWidth: 24                   \r\n            });\r\n\r\n            columns.splice(1, 0, {\r\n                field: 'View Details',\r\n                name: '',\r\n                format: ctx => `<a class=\"inline-action view-details\" title=\"view details\">\r\n                    <i class=\"fa fa-search\"></i></a>`,\r\n                width: 24,\r\n                minWidth: 24,\r\n                maxWidth: 24 \r\n            });\r\n\r\n            columns.splice(2, 0, {\r\n                field: 'New Order',\r\n                name: '',\r\n                format: ctx => `<a class=\"inline-action new-order text-purple\" title=\"new order\">\r\n                    <i class=\"fa fa-cart-plus\"></i></a>`,\r\n                width: 24,\r\n                minWidth: 24,\r\n                maxWidth: 24\r\n            });\r\n\r\n            return columns;\r\n        }\r\n\r\n        protected onClick(e: JQueryEventObject, row: number, cell: number) {\r\n            super.onClick(e, row, cell);\r\n\r\n            if (e.isDefaultPrevented())\r\n                return;\r\n\r\n            var item = this.itemAt(row);\r\n            var target = $(e.target);\r\n\r\n            // if user clicks \"i\" element, e.g. icon\r\n            if (target.parent().hasClass('inline-action'))\r\n                target = target.parent();\r\n\r\n            if (target.hasClass('inline-action')) {\r\n                e.preventDefault();\r\n\r\n                if (target.hasClass('delete-row')) {\r\n                    Q.confirm('Delete record?', () => {\r\n                        Northwind.CustomerService.Delete({\r\n                            EntityId: item.ID,\r\n                        }, response => {\r\n                            this.refresh();\r\n                        });\r\n                    });\r\n                }\r\n                else if (target.hasClass('view-details')) {\r\n                    this.editItem(item.ID);\r\n                }\r\n                else if (target.hasClass('new-order')) {\r\n                    var dlg = new Northwind.OrderDialog();\r\n                    this.initDialog(dlg);\r\n                    dlg.loadEntityAndOpenDialog(<Northwind.OrderRow>{\r\n                        CustomerID: item.CustomerID\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerFormatter()\r\n    export class InlineImageFormatter\r\n        implements Slick.Formatter, Serenity.IInitializeColumn {\r\n            \r\n        format(ctx: Slick.FormatterContext): string {\r\n\r\n            var file = (this.fileProperty ? ctx.item[this.fileProperty] : ctx.value) as string;\r\n            if (!file || !file.length)\r\n                return \"\";\r\n\r\n            let href = Q.resolveUrl(\"~/upload/\" + file);\r\n\r\n            if (this.thumb) {\r\n                var parts = file.split('.');\r\n                file = parts.slice(0, parts.length - 1).join('.') + '_t.jpg';\r\n            }\r\n\r\n            let src = Q.resolveUrl('~/upload/' + file);\r\n\r\n            return `<a class=\"inline-image\" target='_blank' href=\"${href}\">` +\r\n                `<img src=\"${src}\" style='max-height: 145px; max-width: 100%;' /></a>`;\r\n        }\r\n\r\n        initializeColumn(column: Slick.Column): void {\r\n            if (this.fileProperty) {\r\n                column.referencedFields = column.referencedFields || [];\r\n                column.referencedFields.push(this.fileProperty);\r\n            }\r\n        }\r\n\r\n        @Serenity.Decorators.option()\r\n        public fileProperty: string;\r\n\r\n        @Serenity.Decorators.option()\r\n        public thumb: boolean;\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class InlineImageInGrid extends Serenity.EntityGrid<Northwind.ProductRow, any> {\r\n\r\n        protected getColumnsKey() { return BasicSamples.InlineImageInGridColumns.columnsKey; }\r\n        protected getDialogType() { return <any>Northwind.ProductDialog; }\r\n        protected getIdProperty() { return Northwind.ProductRow.idProperty; }\r\n        protected getLocalTextPrefix() { return Northwind.ProductRow.localTextPrefix; }\r\n        protected getService() { return Northwind.ProductService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getSlickOptions(): Slick.GridOptions {\r\n            let opt = super.getSlickOptions();\r\n            opt.rowHeight = 150;\r\n            return opt;\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class RemovingAddButton extends Northwind.SupplierGrid {\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        /**\r\n         * This method is called to get list of buttons to be created.\r\n         */\r\n        protected getButtons(): Serenity.ToolButton[] {\r\n\r\n            // call base method to get list of buttons\r\n            // by default, base entity grid adds a few buttons, \r\n            // add, refresh, column selection in order.\r\n            var buttons = super.getButtons();\r\n\r\n            // here is several methods to remove add button\r\n            // only one is enabled, others are commented\r\n\r\n            // METHOD 1\r\n            // we would be able to simply return an empty button list,\r\n            // but this would also remove all other buttons\r\n            // return [];\r\n\r\n            // METHOD 2\r\n            // remove by splicing (something like delete by index)\r\n            // here we hard code add button index (not nice!)\r\n            // buttons.splice(0, 1);\r\n\r\n            // METHOD 3 - recommended\r\n            // remove by splicing, but this time find button index\r\n            // by its css class. it is the best and safer method\r\n            buttons.splice(Q.indexOf(buttons, x => x.cssClass == \"add-button\"), 1);\r\n\r\n            return buttons;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.BasicSamples {\r\n    @Serenity.Decorators.registerClass()\r\n    export class ViewWithoutIDGrid extends Serenity.EntityGrid<Northwind.SalesByCategoryRow, any> {\r\n        protected getColumnsKey() { return Northwind.SalesByCategoryColumns.columnsKey; }\r\n        protected getIdProperty() { return \"__id\"; }\r\n        protected getNameProperty() { return Northwind.SalesByCategoryRow.nameProperty; }\r\n        protected getLocalTextPrefix() { return Northwind.SalesByCategoryRow.localTextPrefix; }\r\n        protected getService() { return Northwind.SalesByCategoryService.baseUrl; }\r\n\r\n        // this is our autoincrementing counter\r\n        private nextId = 1; \r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        /**\r\n         * This method is called to preprocess data returned from the list service\r\n         */\r\n        protected onViewProcessData(response: Serenity.ListResponse<Northwind.SalesByCategoryRow>) {\r\n            response = super.onViewProcessData(response);\r\n\r\n            // there is no __id property in SalesByCategoryRow but \r\n            // this is javascript and we can set any property of an object\r\n            for (var x of response.Entities) {\r\n                (x as any).__id = this.nextId++;\r\n            }\r\n            return response;\r\n        }\r\n\r\n        protected getButtons() {\r\n            return [];\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Demo.BasicSamples {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class WrappedHeadersGrid extends Northwind.OrderGrid {\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}"]}