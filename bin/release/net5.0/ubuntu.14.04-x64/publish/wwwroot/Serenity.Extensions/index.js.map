{"version":3,"file":"index.js","sourceRoot":"","sources":["../Imports/ServerTypings/Extensions.ExcelImportRequest.ts","../Imports/ServerTypings/Extensions.ExcelImportResponse.ts","../Imports/ServerTypings/Extensions.GetNextNumberRequest.ts","../Imports/ServerTypings/Extensions.GetNextNumberResponse.ts","../Imports/ServerTypings/Extensions.UserPreferenceRetrieveRequest.ts","../Imports/ServerTypings/Extensions.UserPreferenceRetrieveResponse.ts","../Imports/ServerTypings/Extensions.UserPreferenceRow.ts","../Imports/ServerTypings/Extensions.UserPreferenceService.ts","../Imports/ServerTypings/Extensions.UserPreferenceUpdateRequest.ts","../Imports/ServerTypings/Reporting.ReportRetrieveResult.ts","../Serenity.Extensions/BulkActions/BasicProgressDialog.ts","../Serenity.Extensions/BulkActions/BulkServiceAction.ts","../Serenity.Extensions/ExportImport/ExcelExportHelper.ts","../Serenity.Extensions/ExportImport/JsPdfAutoTable.ts","../Serenity.Extensions/ExportImport/PdfExportHelper.ts","../Serenity.Extensions/Formatters/EnumSelectFormatter.ts","../Serenity.Extensions/Formatters/SingleLineTextFormatter.ts","../Serenity.Extensions/GridEditor/GridEditorBase.ts","../Serenity.Extensions/GridEditor/GridEditorDialog.ts","../Serenity.Extensions/Reporting/ReportDialog.ts","../Serenity.Extensions/Reporting/ReportHelper.ts","../Serenity.Extensions/Reporting/ReportPage.ts","../Serenity.Extensions/UserPreference/UserPreferenceStorage.ts","../Serenity.Extensions/Widgets/DialogUtils.ts","../Serenity.Extensions/Widgets/PromptDialog.ts","../Serenity.Extensions/Widgets/SelectableEntityGrid.ts","../Serenity.Extensions/Widgets/ServiceEditorBase.ts","../Serenity.Extensions/Widgets/StaticTextBlock.ts"],"names":[],"mappings":"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","sourcesContent":["namespace Serenity.Extensions {\r\n    export interface ExcelImportRequest extends Serenity.ServiceRequest {\r\n        FileName?: string;\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n    export interface ExcelImportResponse extends Serenity.ServiceResponse {\r\n        Inserted?: number;\r\n        Updated?: number;\r\n        ErrorList?: string[];\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n    export interface GetNextNumberRequest extends Serenity.ServiceRequest {\r\n        Prefix?: string;\r\n        Length?: number;\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n    export interface GetNextNumberResponse extends Serenity.ServiceResponse {\r\n        Number?: number;\r\n        Serial?: string;\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n    export interface UserPreferenceRetrieveRequest extends Serenity.ServiceRequest {\r\n        PreferenceType?: string;\r\n        Name?: string;\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n    export interface UserPreferenceRetrieveResponse extends Serenity.ServiceResponse {\r\n        Value?: string;\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n    export interface UserPreferenceRow {\r\n        UserPreferenceId?: number;\r\n        UserId?: number;\r\n        PreferenceType?: string;\r\n        Name?: string;\r\n        Value?: string;\r\n    }\r\n\r\n    export namespace UserPreferenceRow {\r\n        export const idProperty = 'UserPreferenceId';\r\n        export const nameProperty = 'Name';\r\n        export const localTextPrefix = 'Common.UserPreference';\r\n        export const deletePermission = '';\r\n        export const insertPermission = '';\r\n        export const readPermission = '';\r\n        export const updatePermission = '';\r\n\r\n        export declare const enum Fields {\r\n            UserPreferenceId = \"UserPreferenceId\",\r\n            UserId = \"UserId\",\r\n            PreferenceType = \"PreferenceType\",\r\n            Name = \"Name\",\r\n            Value = \"Value\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n    export namespace UserPreferenceService {\r\n        export const baseUrl = 'Extensions/UserPreference';\r\n\r\n        export declare function Update(request: UserPreferenceUpdateRequest, onSuccess?: (response: Serenity.ServiceResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: UserPreferenceRetrieveRequest, onSuccess?: (response: UserPreferenceRetrieveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Update = \"Extensions/UserPreference/Update\",\r\n            Retrieve = \"Extensions/UserPreference/Retrieve\"\r\n        }\r\n\r\n        [\r\n            'Update', \r\n            'Retrieve'\r\n        ].forEach(x => {\r\n            (<any>UserPreferenceService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n    export interface UserPreferenceUpdateRequest extends Serenity.ServiceRequest {\r\n        PreferenceType?: string;\r\n        Name?: string;\r\n        Value?: string;\r\n    }\r\n}\r\n","namespace Serenity.Reporting {\r\n    export interface ReportRetrieveResult extends Serenity.ServiceResponse {\r\n        IsExternalReport?: boolean;\r\n        ReportKey?: string;\r\n        Title?: string;\r\n        Properties?: Serenity.PropertyItem[];\r\n        InitialSettings?: any;\r\n        IsDataOnlyReport?: boolean;\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n\r\n    export class BasicProgressDialog extends Serenity.TemplatedDialog<any> {\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.byId('ProgressBar').progressbar({\r\n                max: 100,\r\n                value: 0,\r\n                change: (e, v) => {\r\n                    this.byId('ProgressLabel').text(this.value + ' / ' + this.max);\r\n                }\r\n            });\r\n\r\n            this.dialogTitle = Q.text('Site.BasicProgressDialog.PleaseWait');\r\n        }\r\n\r\n        public cancelled: boolean;\r\n\r\n        public get max(): number {\r\n            return this.byId('ProgressBar').progressbar().progressbar('option', 'max');\r\n        }\r\n\r\n        public set max(value: number) {\r\n            this.byId('ProgressBar').progressbar().progressbar('option', 'max', value);\r\n        }\r\n\r\n        public get value(): number {\r\n            return this.byId('ProgressBar').progressbar('value');\r\n        }\r\n\r\n        public set value(value: number) {\r\n            this.byId('ProgressBar').progressbar().progressbar('value', value);\r\n        }\r\n\r\n        public get title(): string {\r\n            return this.dialogTitle;\r\n        }\r\n\r\n        public set title(value: string) {\r\n            this.dialogTitle = value;\r\n        }\r\n\r\n        public cancelTitle: string;\r\n\r\n        getDialogButtons() {\r\n            return [{\r\n                text: Q.text('Dialogs.CancelButton'),\r\n                click: () => {\r\n                    this.cancelled = true;\r\n                    this.element.closest('.ui-dialog')\r\n                        .find('.ui-dialog-buttonpane .ui-button')\r\n                        .attr('disabled', 'disabled')\r\n                        .css('opacity', '0.5');\r\n\r\n                    this.element.dialog('option', 'title', Q.trimToNull(this.cancelTitle) ||\r\n                        Q.text('Site.BasicProgressDialog.CancelTitle'));\r\n                }\r\n            }];\r\n        }\r\n\r\n        getDialogOptions() {\r\n            var opt = super.getDialogOptions();\r\n            opt.width = 600;\r\n            return opt;\r\n        }\r\n\r\n        initDialog() {\r\n            super.initDialog();\r\n            this.element.closest('.ui-dialog').find('.ui-dialog-titlebar-close').hide();\r\n        }\r\n\r\n        getTemplate() {\r\n            return (\r\n                \"<div class='s-DialogContent s-BasicProgressDialogContent'>\" +\r\n                    \"<div id='~_StatusText' class='status-text' ></div>\" +\r\n                    \"<div id='~_ProgressBar' class='progress-bar'>\" +\r\n                        \"<div id='~_ProgressLabel' class='progress-label' ></div>\" +\r\n                    \"</div>\" +\r\n                \"</div>\");\r\n        }\r\n    }\r\n}","namespace Serenity.Extensions {\r\n\r\n    export class BulkServiceAction {\r\n\r\n        protected keys: string[];\r\n        protected queue: string[];\r\n        protected queueIndex: number;\r\n        protected progressDialog: BasicProgressDialog;\r\n        protected pendingRequests: number;\r\n        protected completedRequests: number;\r\n        protected errorByKey: Q.Dictionary<Serenity.ServiceError>;\r\n        private successCount;\r\n        private errorCount;\r\n        public done: () => void;\r\n\r\n        protected createProgressDialog() {\r\n            this.progressDialog = new BasicProgressDialog();\r\n            this.progressDialog.dialogOpen();\r\n            this.progressDialog.max = this.keys.length;\r\n            this.progressDialog.value = 0;\r\n        }\r\n\r\n        protected getConfirmationFormat() {\r\n            return Q.text('Site.BulkServiceAction.ConfirmationFormat');\r\n        }\r\n\r\n        protected getConfirmationMessage(targetCount) {\r\n            return Q.format(this.getConfirmationFormat(), targetCount);\r\n        }\r\n\r\n        protected confirm(targetCount, action) {\r\n            Q.confirm(this.getConfirmationMessage(targetCount), action);\r\n        }\r\n\r\n        protected getNothingToProcessMessage() {\r\n            return Q.text('Site.BulkServiceAction.NothingToProcess');\r\n        }\r\n\r\n        protected nothingToProcess() {\r\n            Q.notifyError(this.getNothingToProcessMessage());\r\n        }\r\n\r\n        protected getParallelRequests() {\r\n            return 1;\r\n        }\r\n\r\n        protected getBatchSize() {\r\n            return 1;\r\n        }\r\n\r\n        protected startParallelExecution() {\r\n            this.createProgressDialog();\r\n            this.successCount = 0;\r\n            this.errorCount = 0;\r\n            this.pendingRequests = 0;\r\n            this.completedRequests = 0;\r\n            this.errorCount = 0;\r\n            this.errorByKey = {};\r\n            this.queue = this.keys.slice();\r\n            this.queueIndex = 0;\r\n            var parallelRequests = this.getParallelRequests();\r\n            while (parallelRequests-- > 0) {\r\n                this.executeNextBatch();\r\n            }\r\n        }\r\n\r\n        protected serviceCallCleanup() {\r\n            this.pendingRequests--;\r\n            this.completedRequests++;\r\n\r\n            var title = Q.text((this.progressDialog.cancelled ?\r\n                'Site.BasicProgressDialog.CancelTitle' : 'Site.BasicProgressDialog.PleaseWait'));\r\n\r\n            title += ' (';\r\n            if (this.successCount > 0) {\r\n                title += Q.format(Q.text('Site.BulkServiceAction.SuccessCount'), this.successCount);\r\n            }\r\n\r\n            if (this.errorCount > 0) {\r\n                if (this.successCount > 0) {\r\n                    title += ', ';\r\n                }\r\n\r\n                title += Q.format(Q.text('Site.BulkServiceAction.ErrorCount'), this.errorCount);\r\n            }\r\n\r\n            this.progressDialog.title = title + ')';\r\n            this.progressDialog.value = this.successCount + this.errorCount;\r\n            if (!this.progressDialog.cancelled && this.progressDialog.value < this.keys.length) {\r\n                this.executeNextBatch();\r\n            }\r\n\r\n            else if (this.pendingRequests === 0) {\r\n                this.progressDialog.dialogClose();\r\n                this.showResults();\r\n                if (this.done) {\r\n                    this.done();\r\n                    this.done = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        protected executeForBatch(batch: string[]) {\r\n        }\r\n\r\n        protected executeNextBatch() {\r\n            var batchSize = this.getBatchSize();\r\n            var batch = [];\r\n            while (true) {\r\n                if (batch.length >= batchSize) {\r\n                    break;\r\n                }\r\n\r\n                if (this.queueIndex >= this.queue.length) {\r\n                    break;\r\n                }\r\n\r\n                batch.push(this.queue[this.queueIndex++]);\r\n            }\r\n\r\n            if (batch.length > 0) {\r\n                this.pendingRequests++;\r\n                this.executeForBatch(batch);\r\n            }\r\n        }\r\n\r\n        protected getAllHadErrorsFormat() {\r\n            return Q.text('Site.BulkServiceAction.AllHadErrorsFormat');\r\n        }\r\n\r\n        protected showAllHadErrors() {\r\n            Q.notifyError(Q.format(this.getAllHadErrorsFormat(), this.errorCount));\r\n        }\r\n\r\n        protected getSomeHadErrorsFormat() {\r\n            return Q.text('Site.BulkServiceAction.SomeHadErrorsFormat');\r\n        }\r\n\r\n        protected showSomeHadErrors() {\r\n            Q.notifyWarning(Q.format(this.getSomeHadErrorsFormat(), this.successCount, this.errorCount));\r\n        }\r\n\r\n        protected getAllSuccessFormat() {\r\n            return Q.text('Site.BulkServiceAction.AllSuccessFormat');\r\n        }\r\n\r\n        protected showAllSuccess() {\r\n            Q.notifySuccess(Q.format(this.getAllSuccessFormat(), this.successCount));\r\n        }\r\n\r\n        protected showResults() {\r\n            if (this.errorCount === 0 && this.successCount === 0) {\r\n                this.nothingToProcess();\r\n                return;\r\n            }\r\n\r\n            if (this.errorCount > 0 && this.successCount === 0) {\r\n                this.showAllHadErrors();\r\n                return;\r\n            }\r\n\r\n            if (this.errorCount > 0) {\r\n                this.showSomeHadErrors();\r\n                return;\r\n            }\r\n\r\n            this.showAllSuccess();\r\n        }\r\n\r\n        public execute(keys: string[]) {\r\n            this.keys = keys;\r\n            if (this.keys.length === 0) {\r\n                this.nothingToProcess();\r\n                return;\r\n            }\r\n            this.confirm(this.keys.length, () => this.startParallelExecution());\r\n        }\r\n\r\n        get_successCount() {\r\n            return this.successCount;\r\n        }\r\n\r\n        set_successCount(value: number) {\r\n            this.successCount = value;\r\n        }\r\n\r\n        get_errorCount() {\r\n            return this.errorCount;\r\n        }\r\n\r\n        set_errorCount(value: number) {\r\n            this.errorCount = value;\r\n        }\r\n    }\r\n}","namespace Serenity.Extensions {\r\n\r\n    export interface ExcelExportOptions {\r\n        grid: Serenity.DataGrid<any, any>;\r\n        service: string;\r\n        onViewSubmit: () => boolean;\r\n        editRequest?: (request: Serenity.ListRequest) => Serenity.ListRequest;\r\n        title?: string;\r\n        hint?: string;\r\n        separator?: boolean;\r\n    }\r\n\r\n    export namespace ExcelExportHelper {\r\n\r\n        export function createToolButton(options: ExcelExportOptions): Serenity.ToolButton {\r\n\r\n            return {\r\n                hint: Q.coalesce(options.hint, 'Excel'),\r\n                title: Q.coalesce(options.title, ''),\r\n                cssClass: 'export-xlsx-button',\r\n                onClick: function () {\r\n                    if (!options.onViewSubmit()) {\r\n                        return;\r\n                    }\r\n\r\n                    let grid = options.grid;\r\n\r\n                    var request = Q.deepClone(grid.getView().params) as Serenity.ListRequest;\r\n                    request.Take = 0;\r\n                    request.Skip = 0;\r\n                    var sortBy = grid.getView().sortBy;\r\n                    if (sortBy) {\r\n                        request.Sort = sortBy;\r\n                    }\r\n\r\n                    request.ExportColumns = [];\r\n                    let columns = grid.getGrid().getColumns();\r\n                    for (let column of columns) {\r\n                        request.ExportColumns.push(column.id || column.field);\r\n                    }\r\n\r\n                    if (options.editRequest)\r\n                        request = options.editRequest(request);\r\n\r\n                    Q.postToService({ service: options.service, request: request, target: '_blank' });\r\n                },\r\n                separator: options.separator\r\n            };\r\n        }\r\n    }\r\n}","declare var jsPDF: any;\r\n\r\ndeclare interface jsPDF {\r\n    autoTableEndPosY?: number;\r\n    autoTableHtmlToJson(table: HTMLElement);\r\n    autoTable(columns: string[] | jsPDF.AutoTableColumn[], data: any[], options: jsPDF.AutoTableOptions);\r\n    autoTableText(text: string, x: number, y: number, styles: jsPDF.AutoTableStyles);\r\n}\r\n\r\ndeclare namespace jsPDF {\r\n\r\n    interface AutoTableColumn {\r\n        title?: string;\r\n        dataKey?: string;\r\n    }\r\n\r\n    interface AutoTableOptions {\r\n        tableWidth?: 'wrap';\r\n        theme?: 'striped' | 'grid' | 'plain';\r\n        startY?: number;\r\n        styles?: AutoTableStyles;\r\n        headerStyles?: AutoTableStyles;\r\n        bodyStyles?: AutoTableStyles;\r\n        columnStyles?: {\r\n            [dataKey: string]: AutoTableStyles;\r\n        };\r\n        margin?: AutoTableMargin;\r\n        didDrawCell?: (data: CellHookData) => void;\r\n        didDrawPage?: (data: HookData) => void;\r\n        head?: [AutoTableColumn[]],\r\n        body?: {}[]\r\n    }\r\n\r\n    interface HookData {\r\n        table?: any,\r\n        pageNumber?: number,\r\n        pageCount?: number,\r\n        settings?: {},\r\n        doc?: any,\r\n        cursor?: { x?: number, y?: number }\r\n    }\r\n\r\n    interface CellHookData extends HookData {\r\n        cell?: { x?: number, y?: number },\r\n        row?: any,\r\n        column?: AutoTableColumn,\r\n        section?: 'head' | 'body' | 'foot';\r\n    }\r\n\r\n    interface AutoTableMargin {\r\n        horizontal?: number;\r\n        top?: number;\r\n        left?: number;\r\n        right?: number;\r\n        bottom?: number;\r\n    }\r\n\r\n    interface AutoTableStyles {\r\n        cellPadding?: number;\r\n        fontSize?: number;\r\n        font?: string;\r\n        lineColor?: number | number[];\r\n        lineWidth?: number;\r\n        lineHeight?: number;\r\n        fontStyle?: string;\r\n        fillColor?: number | number[];\r\n        textColor?: number | number[];\r\n        halign?: 'left' | 'center' | 'right';\r\n        valign?: 'top' | 'middle' | 'bottom';\r\n        fillStyle?: 'S' | 'F' | 'DF';\r\n        rowHeight?: number;\r\n        columnWidth?: 'auto' | 'wrap' | number;\r\n        overflow?: 'linebreak';\r\n    }\r\n}","declare var jspdf: any;\r\n\r\nnamespace Serenity.Extensions {\r\n    export interface PdfExportOptions {\r\n        grid: Serenity.DataGrid<any, any>;\r\n        onViewSubmit: () => boolean;\r\n        title?: string;\r\n        hint?: string;\r\n        separator?: boolean;\r\n        reportTitle?: string;\r\n        titleTop?: number;\r\n        titleFontSize?: number;\r\n        fileName?: string;\r\n        pageNumbers?: boolean;\r\n        columnTitles?: { [key: string]: string };\r\n        tableOptions?: jsPDF.AutoTableOptions;\r\n        output?: string;\r\n        autoPrint?: boolean;\r\n        printDateTimeHeader?: boolean;\r\n    }\r\n\r\n    export namespace PdfExportHelper {\r\n\r\n        function toAutoTableColumns(srcColumns: Slick.Column[], columnStyles: { [dataKey: string]: jsPDF.AutoTableStyles; },\r\n                columnTitles: { [key: string]: string }) {\r\n            return srcColumns.map(src => {\r\n                let col: jsPDF.AutoTableColumn = {\r\n                    dataKey: src.id || src.field,\r\n                    title: src.name || ''\r\n                };\r\n\r\n                if (columnTitles && columnTitles[col.dataKey] != null)\r\n                    col.title = columnTitles[col.dataKey];\r\n\r\n                let style: jsPDF.AutoTableStyles = {};\r\n                if ((src.cssClass || '').indexOf(\"align-right\") >= 0)\r\n                    style.halign = 'right';\r\n                else if ((src.cssClass || '').indexOf(\"align-center\") >= 0)\r\n                    style.halign = 'center';\r\n\r\n                columnStyles[col.dataKey] = style;\r\n\r\n                return col;\r\n            });\r\n        }\r\n\r\n        function toAutoTableData(entities: any[], keys: string[], srcColumns: Slick.Column[] ) {\r\n            let el = document.createElement('span');\r\n            let row = 0;\r\n            return entities.map(item => {\r\n                let dst = [];\r\n                for (let cell = 0; cell < srcColumns.length; cell++) {\r\n                    let src = srcColumns[cell];\r\n                    let fld = src.field || '';\r\n                    let html: string;\r\n                    if (src.formatter) {\r\n                        html = src.formatter(row, cell, item[fld], src, item);\r\n                    }\r\n                    else if (src.format) {\r\n                        html = src.format({ row: row, cell: cell, item: item, value: item[fld] });\r\n                    }\r\n                    else {\r\n                        dst.push(item[fld]);\r\n                        continue;\r\n                    }\r\n\r\n                    if (!html || (html.indexOf('<') < 0 && html.indexOf('&') < 0))\r\n                        dst.push(html);\r\n                    else {\r\n                        el.innerHTML = html;\r\n                        if (el.children.length == 1 &&\r\n                            $(el.children[0]).is(\":input\")) {\r\n                            dst.push($(el.children[0]).val());\r\n                        }\r\n                        else if (el.children.length == 1 &&\r\n                            $(el.children).is('.check-box')) {\r\n                            dst.push($(el.children).hasClass(\"checked\") ? \"X\" : \"\")\r\n                        }\r\n                        else\r\n                            dst.push(el.textContent || '');\r\n                    }\r\n                }\r\n                row++;\r\n                return dst;\r\n            });\r\n        }\r\n\r\n        export function exportToPdf(options: PdfExportOptions): void {\r\n\r\n            var g = options.grid;\r\n\r\n            if (!options.onViewSubmit())\r\n                return;\r\n\r\n            includeAutoTable();\r\n\r\n            var request = Q.deepClone(g.view.params) as Serenity.ListRequest;\r\n            request.Take = 0;\r\n            request.Skip = 0;\r\n\r\n            var sortBy = g.view.sortBy;\r\n            if (sortBy != null)\r\n                request.Sort = sortBy;\r\n\r\n            var gridColumns = g.slickGrid.getColumns();\r\n            gridColumns = gridColumns.filter(x => x.id !== \"__select__\");\r\n\r\n            request.IncludeColumns = [];\r\n            for (var column of gridColumns)\r\n                request.IncludeColumns.push(column.id || column.field);\r\n\r\n            Q.serviceCall({\r\n                url: g.view.url,\r\n                request: request,\r\n                onSuccess: response => {\r\n                    // @ts-ignore\r\n                    let doc = new jsPDF('l', 'pt');\r\n                    let srcColumns = gridColumns;\r\n                    let columnStyles: { [dataKey: string]: jsPDF.AutoTableStyles; } = {};\r\n                    let columns = toAutoTableColumns(srcColumns, columnStyles, options.columnTitles);\r\n                    var keys = columns.map(x => x.dataKey);\r\n                    let entities = (<Serenity.ListResponse<any>>response).Entities || [];\r\n                    let data = toAutoTableData(entities, keys, srcColumns);\r\n\r\n                    doc.setFontSize(options.titleFontSize || 10);\r\n                    doc.setFont('helvetica', 'bold');\r\n                    let reportTitle = options.reportTitle || g.getTitle() || \"Report\";\r\n\r\n                    doc.autoTableText(reportTitle, doc.internal.pageSize.width / 2,\r\n                        options.titleTop || 25, { halign: 'center' });\r\n\r\n                    var totalPagesExp = \"{{T}}\";\r\n\r\n                    let pageNumbers = options.pageNumbers == null || options.pageNumbers;\r\n                    var autoOptions = $.extend({\r\n                        margin: { top: 25, left: 25, right: 25, bottom: pageNumbers ? 25 : 30 },\r\n                        startY: 60,\r\n                        styles: {\r\n                            fontSize: 8,\r\n                            overflow: 'linebreak',\r\n                            cellPadding: 2,\r\n                            valign: 'middle'\r\n                        },\r\n                        columnStyles: columnStyles\r\n                    }, options.tableOptions);\r\n\r\n                    var footer: (data: any) => void;\r\n                    var header: (data: any) => void;\r\n                    if (pageNumbers) {\r\n                        footer = function (data) {\r\n                            var str = data.pageCount;\r\n                            // Total page number plugin only available in jspdf v1.0+\r\n                            if (typeof doc.putTotalPages === 'function') {\r\n                                str = str + \" / \" + totalPagesExp;\r\n                            }\r\n                            doc.autoTableText(str, doc.internal.pageSize.width / 2,\r\n                                doc.internal.pageSize.height - autoOptions.margin.bottom, {\r\n                                    halign: 'center'\r\n                                });\r\n                        };\r\n                    }\r\n                    \r\n                    // Print header of page\r\n                    if (options.printDateTimeHeader == null || options.printDateTimeHeader) {\r\n                        header = function (data) {\r\n                            doc.setFont('helvetica', 'normal');\r\n                            doc.setFontSize(8);\r\n\r\n                            // Date and time of the report\r\n                            doc.autoTableText(Q.formatDate(new Date(), \"dd-MM-yyyy HH:mm\"), \r\n                                doc.internal.pageSize.width - autoOptions.margin.right, 13, \r\n                                {\r\n                                    halign: 'right'\r\n                                });\r\n                        };\r\n                    }\r\n\r\n                    autoOptions.didDrawPage = (data) => {\r\n                        if (!!header) header(data);\r\n                        if (!!footer) footer(data);\r\n                    };\r\n\r\n                    autoOptions.head = [columns];\r\n                    autoOptions.body = data;\r\n\r\n                    doc.autoTable(autoOptions);\r\n\r\n                    if (typeof doc.putTotalPages === 'function') {\r\n                        doc.putTotalPages(totalPagesExp);\r\n                    }\r\n\r\n\r\n                    if (!options.output || options.output == \"file\") {\r\n                        var fileName = options.fileName || options.reportTitle || \"{0}_{1}.pdf\";\r\n                        fileName = Q.format(fileName, g.getTitle() || \"report\",\r\n                            Q.formatDate(new Date(), \"yyyyMMdd_HHmm\"));\r\n                        doc.save(fileName);\r\n                        return;\r\n                    }\r\n\r\n                    if (options.autoPrint)\r\n                        doc.autoPrint();\r\n\r\n                    var output = options.output;\r\n                    if (output == 'newwindow' || '_blank')\r\n                        output = 'dataurlnewwindow';\r\n                    else if (output == 'window')\r\n                        output = 'datauri';\r\n\r\n                    doc.output(output);\r\n                }\r\n            }); \r\n        }\r\n\r\n        export function createToolButton(options: PdfExportOptions) {\r\n\r\n            return <Serenity.ToolButton>{\r\n                title: options.title || '',\r\n                hint: options.hint || 'PDF',\r\n                cssClass: 'export-pdf-button',\r\n                onClick: () => exportToPdf(options),\r\n                separator: options.separator\r\n            };\r\n        }\r\n\r\n        function includeJsPDF() {\r\n            // @ts-ignore\r\n            if (typeof jsPDF !== \"undefined\")\r\n                return;\r\n\r\n            var script = $(\"jsPDFScript\");\r\n            if (script.length > 0)\r\n                return;\r\n\r\n            $(\"<script/>\")\r\n                .attr(\"type\", \"text/javascript\")\r\n                .attr(\"id\", \"jsPDFScript\")\r\n                .attr(\"src\", Q.resolveUrl(\"~/Serenity.Assets/Scripts/jspdf.min.js\"))\r\n                .appendTo(document.head);\r\n\r\n            if (typeof jsPDF === \"undefined\" && typeof jspdf !== \"undefined\") {\r\n                window.jsPDF = jspdf.jsPDF;\r\n            }\r\n        }\r\n\r\n        function includeAutoTable() {\r\n            includeJsPDF();\r\n\r\n            // @ts-ignore\r\n            if (typeof jsPDF === \"undefined\" ||\r\n                typeof (jsPDF as any).API == \"undefined\" ||\r\n                typeof (jsPDF as any).API.autoTable !== \"undefined\")\r\n                return;\r\n\r\n            var script = $(\"jsPDFAutoTableScript\");\r\n            if (script.length > 0)\r\n                return;\r\n\r\n            $(\"<script/>\")\r\n                .attr(\"type\", \"text/javascript\")\r\n                .attr(\"id\", \"jsPDFAutoTableScript\")\r\n                .attr(\"src\", Q.resolveUrl(\"~/Serenity.Assets/Scripts/jspdf.plugin.autotable.min.js\"))\r\n                .appendTo(document.head);\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n\r\n    @Serenity.Decorators.registerFormatter('Serenity.Extensions.EnumSelectFormatter')\r\n    export class EnumSelectFormatter implements Slick.Formatter {\r\n        constructor() {\r\n            this.allowClear = true;\r\n        }\r\n\r\n        format(ctx: Slick.FormatterContext) {\r\n            var enumType = Serenity.EnumTypeRegistry.get(this.enumKey);\r\n\r\n            var sb = \"<select>\";\r\n            if (this.allowClear) {\r\n                sb += '<option value=\"\">';\r\n                sb += Q.htmlEncode(this.emptyItemText || Q.text(\"Controls.SelectEditor.EmptyItemText\"));\r\n                sb += '</option>';\r\n            }\r\n\r\n            for (var x of Object.keys(enumType).filter(v => !isNaN(parseInt(v, 10)))) {\r\n                sb += '<option value=\"' + Q.attrEncode(x) + '\"';\r\n                if (x == ctx.value)\r\n                    sb += \" selected\";\r\n                var name = enumType[x];\r\n                sb += \">\";\r\n                sb += Q.htmlEncode(Q.tryGetText(\"Enums.\" + this.enumKey + \".\" + name) || name);\r\n                sb += \"</option>\";\r\n            }\r\n\r\n            sb += \"</select>\";\r\n\r\n            return sb;\r\n        }\r\n\r\n        @Serenity.Decorators.option()\r\n        public enumKey: string;\r\n\r\n        @Serenity.Decorators.option()\r\n        public allowClear: boolean;\r\n\r\n        @Serenity.Decorators.option()\r\n        public emptyItemText: string;\r\n    }\r\n}","\r\nnamespace Serenity.Extensions {\r\n    \r\n    @Decorators.registerFormatter('Serenity.Extensions.SingleLineTextFormatter')\r\n    export class SingleLineTextFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n            return SingleLineTextFormatter.formatValue(ctx.value);\r\n        }\r\n\r\n        public static formatValue(value: string) {\r\n            var text = $('<div/>').html(value || '').text();\r\n            return Q.toSingleLine(text);\r\n        }\r\n    }\r\n}","namespace Serenity.Extensions {\r\n\r\n    @Serenity.Decorators.registerClass([Serenity.IGetEditValue, Serenity.ISetEditValue])\r\n    @Serenity.Decorators.editor()\r\n    @Serenity.Decorators.element(\"<div/>\")\r\n    export class GridEditorBase<TEntity, TOptions = any> extends Serenity.EntityGrid<TEntity, TOptions>\r\n        implements Serenity.IGetEditValue, Serenity.ISetEditValue {\r\n\r\n        protected getIdProperty() { return \"__id\"; }\r\n\r\n        protected nextId = 1;\r\n\r\n        constructor(container: JQuery, opt?: TOptions) {\r\n            super(container, opt);\r\n        }\r\n\r\n        protected id(entity: TEntity) {\r\n            return (entity as any)[this.getIdProperty()];\r\n        }\r\n\r\n        protected getNextId() {\r\n            return \"`\" + this.nextId++;\r\n        }\r\n\r\n        protected setNewId(entity: TEntity) {\r\n            entity[this.getIdProperty()] = this.getNextId();\r\n        }\r\n\r\n        protected save(opt: Serenity.ServiceOptions<any>, callback: (r: Serenity.ServiceResponse) => void) {\r\n            var request = opt.request as Serenity.SaveRequest<TEntity>;\r\n            var row = Q.deepClone(request.Entity);\r\n\r\n            var id = this.id(row);\r\n            if (id == null) {\r\n                (row as any)[this.getIdProperty()] = this.getNextId();\r\n            }\r\n\r\n            if (!this.validateEntity(row, id)) {\r\n                return;\r\n            }\r\n\r\n            var items = this.view.getItems().slice();\r\n            if (id == null) {\r\n                items.push(row);\r\n            }\r\n            else {\r\n                var index = Q.indexOf(items, x => this.id(x) === id);\r\n                items[index] = Q.deepClone({} as TEntity, items[index], row);\r\n            }\r\n\r\n            this.setEntities(items);\r\n            callback({});\r\n        }\r\n\r\n        protected deleteEntity(id: number) {\r\n            this.view.deleteItem(id);\r\n            return true;\r\n        }\r\n\r\n        protected validateEntity(row: TEntity, id: number) {\r\n            return true;\r\n        }\r\n\r\n        protected setEntities(items: TEntity[]) {\r\n            this.view.setItems(items, true);\r\n        }\r\n\r\n        protected getNewEntity(): TEntity {\r\n            return {} as TEntity;\r\n        }\r\n\r\n        protected getButtons(): Serenity.ToolButton[] {\r\n            var buttons = super.getButtons();\r\n            var addButton = Q.tryFirst(buttons, x => x.cssClass == 'add-button');\r\n            if (addButton != null) {\r\n                addButton.onClick = () => {\r\n                    this.createEntityDialog(this.getItemType(), dlg => {\r\n                        var dialog = dlg as GridEditorDialog<TEntity>;\r\n                        dialog.onSave = (opt, callback) => this.save(opt, callback);\r\n                        this.transferDialogReadOnly(dialog);\r\n                        dialog.loadEntityAndOpenDialog(this.getNewEntity());\r\n                    });\r\n                }\r\n            }\r\n\r\n            return buttons.filter(x => x.cssClass != \"refresh-button\");\r\n        }\r\n\r\n        protected editItem(entityOrId: any): void {\r\n\r\n            var id = entityOrId;\r\n            var item = this.view.getItemById(id);\r\n            this.createEntityDialog(this.getItemType(), dlg => {\r\n                var dialog = dlg as GridEditorDialog<TEntity>;\r\n                dialog.onDelete = (opt, callback) => {\r\n                    if (!this.deleteEntity(id)) {\r\n                        return;\r\n                    }\r\n                    callback({});\r\n                };\r\n                this.transferDialogReadOnly(dialog);\r\n                dialog.onSave = (opt, callback) => this.save(opt, callback);\r\n                dialog.loadEntityAndOpenDialog(item);\r\n            });;\r\n        }\r\n\r\n        public getEditValue(property, target) {\r\n            target[property.name] = this.value;\r\n        }\r\n\r\n        public setEditValue(source, property) {\r\n            this.value = source[property.name];\r\n        }\r\n\r\n        public get value(): TEntity[] {\r\n            var p = this.getIdProperty();\r\n            return this.view.getItems().map(x => {\r\n                var y = Q.deepClone(x);\r\n                var id = y[p];\r\n                if (id && id.toString().charAt(0) == '`')\r\n                    delete y[p];\r\n                return y;\r\n            });\r\n        }\r\n\r\n        public set value(value: TEntity[]) {\r\n            var p = this.getIdProperty();\r\n            this.view.setItems((value || []).map(x => {\r\n                var y = Q.deepClone(x);\r\n                if ((y as any)[p] == null)\r\n                    (y as any)[p] = \"`\" + this.getNextId();\r\n                return y;\r\n            }), true);\r\n        }\r\n\r\n        protected getGridCanLoad() {\r\n            return false;\r\n        }\r\n\r\n        protected usePager() {\r\n            return false;\r\n        }\r\n\r\n        protected getInitialTitle() {\r\n            return null;\r\n        }\r\n\r\n        protected createQuickSearchInput() {\r\n        }\r\n    }\r\n}","namespace Serenity.Extensions {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class GridEditorDialog<TEntity> extends Serenity.EntityDialog<TEntity, any> {\r\n        protected getIdProperty() { return \"__id\"; }\r\n\r\n        public onSave: (options: Serenity.ServiceOptions<Serenity.SaveResponse>,\r\n            callback: (response: Serenity.SaveResponse) => void) => void;\r\n\r\n        public onDelete: (options: Serenity.ServiceOptions<Serenity.DeleteResponse>,\r\n            callback: (response: Serenity.DeleteResponse) => void) => void;\r\n\r\n        public destroy() {\r\n            this.onSave = null;\r\n            this.onDelete = null;\r\n            super.destroy();\r\n        }\r\n\r\n        protected updateInterface() {\r\n            super.updateInterface();\r\n\r\n            // apply changes button doesn't work properly with in-memory grids yet\r\n            if (this.applyChangesButton) {\r\n                this.applyChangesButton.hide();\r\n            }\r\n        }\r\n\r\n        protected saveHandler(options: Serenity.ServiceOptions<Serenity.SaveResponse>,\r\n            callback: (response: Serenity.SaveResponse) => void): void {\r\n            this.onSave && this.onSave(options, callback);\r\n        }\r\n\r\n        protected deleteHandler(options: Serenity.ServiceOptions<Serenity.DeleteResponse>,\r\n            callback: (response: Serenity.DeleteResponse) => void): void {\r\n            this.onDelete && this.onDelete(options, callback);\r\n        }\r\n    }\r\n}","namespace Serenity.Extensions {\r\n    export class ReportDialog extends Serenity.TemplatedDialog<ReportDialogOptions> {\r\n\r\n        private report: Serenity.Reporting.ReportRetrieveResult;\r\n        private propertyGrid: Serenity.PropertyGrid;\r\n\r\n        constructor(options: ReportDialogOptions) {\r\n            super(options);\r\n\r\n            this.updateInterface();\r\n            this.loadReport(this.options.reportKey);\r\n        }\r\n\r\n        protected getDialogButtons() {\r\n            return null;\r\n        }\r\n\r\n        protected createPropertyGrid() {\r\n            this.propertyGrid && this.byId('PropertyGrid').html('').attr('class', '');\r\n            this.propertyGrid = new Serenity.PropertyGrid(this.byId('PropertyGrid'), {\r\n                idPrefix: this.idPrefix,\r\n                useCategories: true,\r\n                items: this.report.Properties\r\n            }).init(null);\r\n        }\r\n\r\n        protected loadReport(reportKey: string) {\r\n            Q.serviceCall({\r\n                url: Q.resolveUrl('~/Serenity.Extensions/Report/Retrieve'),\r\n                request: {\r\n                    ReportKey: reportKey\r\n                },\r\n                onSuccess: response => {\r\n                    this.report = response as Serenity.Reporting.ReportRetrieveResult;\r\n                    this.dialogTitle = this.report.Title;\r\n                    this.createPropertyGrid();\r\n                    this.propertyGrid.load(this.report.InitialSettings || {});\r\n                    this.updateInterface();\r\n                    this.dialogOpen();\r\n                }\r\n            });\r\n        }\r\n\r\n        protected updateInterface() {\r\n            this.toolbar.findButton('print-preview-button')\r\n                .toggle(this.report && !this.report.IsDataOnlyReport && !this.report.IsExternalReport);\r\n\r\n            this.toolbar.findButton('run-button')\r\n                .toggle(this.report && this.report.IsExternalReport);\r\n\r\n            this.toolbar.findButton('export-pdf-button')\r\n                .toggle(this.report && !this.report.IsDataOnlyReport && !this.report.IsExternalReport);\r\n\r\n            this.toolbar.findButton('export-xlsx-button')\r\n                .toggle(this.report && this.report.IsDataOnlyReport && !this.report.IsExternalReport);\r\n        }\r\n\r\n        executeReport(target: string, ext: string, download: boolean) {\r\n            if (!this.validateForm()) {\r\n                return;\r\n            }\r\n\r\n            var opt = {};\r\n            this.propertyGrid.save(opt);\r\n            ReportHelper.execute({\r\n                download: download,\r\n                reportKey: this.report.ReportKey,\r\n                extension: ext as any,\r\n                target: target,\r\n                params: opt\r\n            });\r\n        }\r\n    \r\n        getToolbarButtons() {\r\n            return [\r\n                {\r\n                    title: 'Preview',\r\n                    cssClass: 'print-preview-button',\r\n                    onClick: () => this.executeReport('_blank', null, false)\r\n                },\r\n                {\r\n                    title: 'Run',\r\n                    cssClass: 'run-button',\r\n                    icon: 'fa-print text-blue',\r\n                    onClick: () => this.executeReport('_blank', null, false)\r\n                },\r\n                {\r\n                    title: 'PDF',\r\n                    cssClass: 'export-pdf-button',\r\n                    onClick: () => this.executeReport('_blank', 'pdf', true)\r\n                },\r\n                {\r\n                    title: 'Excel',\r\n                    cssClass: 'export-xlsx-button',\r\n                    onClick: () => this.executeReport('_blank', 'xlsx', true)\r\n                }\r\n            ];\r\n        }\r\n\r\n        getTemplate() {\r\n            return `<div class=\"s-DialogContent\">\r\n    <div id=\"~_Toolbar\" class=\"s-DialogToolbar\">\r\n    </div>\r\n    <div class=\"s-Form\">\r\n        <form id=\"~_Form\" action=\"\">\r\n            <div class=\"fieldset ui-widget ui-widget-content ui-corner-all\">\r\n                <div id=\"~_PropertyGrid\"></div>\r\n                <div class=\"clear\"></div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>`;\r\n\r\n        }\r\n    }\r\n\r\n    export interface ReportDialogOptions {\r\n        reportKey: string;\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n\r\n    export interface ReportExecuteOptions {\r\n        reportKey: string;\r\n        download?: boolean;\r\n        extension?: 'pdf' | 'htm' | 'html' | 'xlsx' | 'docx';\r\n        getParams?: () => any;\r\n        params?: { [key: string]: any }\r\n        target?: string;\r\n    }\r\n\r\n    export interface ReportButtonOptions extends ReportExecuteOptions {\r\n        title?: string;\r\n        cssClass?: string;\r\n        icon?: string;\r\n    }\r\n\r\n    export namespace ReportHelper {\r\n\r\n        export function createToolButton(options: ReportButtonOptions): Serenity.ToolButton {\r\n            return {\r\n                title: Q.coalesce(options.title, 'Report'),\r\n                cssClass: Q.coalesce(options.cssClass, 'print-button'),\r\n                icon: options.icon,\r\n                onClick: () => {\r\n                    ReportHelper.execute(options);\r\n                }\r\n            };\r\n        }\r\n\r\n        export function execute(options: ReportExecuteOptions) {\r\n            var opt = options.getParams ? options.getParams() : options.params;\r\n\r\n            Q.postToUrl({\r\n                url: '~/Serenity.Extensions/Report/' + (options.download ? 'Download' : 'Render'),\r\n                params: {\r\n                    key: options.reportKey,\r\n                    ext: Q.coalesce(options.extension, 'pdf'),\r\n                    opt: opt ? $.toJSON(opt) : ''\r\n                },\r\n                target: Q.coalesce(options.target, '_blank')\r\n            });\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Extensions {\r\n    export class ReportPage extends Serenity.Widget<any> {\r\n\r\n        constructor(element: JQuery) {\r\n            super(element);\r\n\r\n            $('.report-link', element).click(e => this.reportLinkClick(e));\r\n\r\n            new Serenity.QuickSearchInput($('.s-QuickSearchBar input', element), {\r\n                onSearch: (field, text, done) => {\r\n                    this.updateMatchFlags(text);\r\n                    done(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        protected updateMatchFlags(text: string) {\r\n            var liList = $('.report-list', this.element).find('li').removeClass('non-match');\r\n            text = Q.trimToNull(text);\r\n\r\n            if (!text)\r\n                return;\r\n\r\n            text = Select2.util.stripDiacritics(text).toUpperCase();\r\n\r\n            var reportItems = liList.filter('.report-item');\r\n            reportItems.each(function (ix, e) {\r\n                var x = $(e);\r\n                var title = Select2.util.stripDiacritics(Q.coalesce(x.text(), '').toUpperCase());\r\n                if (title.indexOf(text) < 0) {\r\n                    x.addClass('non-match');\r\n                }\r\n            });\r\n\r\n            var matchingItems = reportItems.not('.non-match');\r\n            var visibles = matchingItems.parents('li').add(matchingItems);\r\n            visibles.children('[data-bs-toggle]:not([aria-expanded=true])')\r\n                .attr('aria-expanded', 'true')\r\n                .removeClass('collapsed');\r\n            visibles\r\n                .parent('.collapse:not(.show)')\r\n                .addClass('show');\r\n\r\n            var nonVisibles = liList.not(visibles);\r\n            nonVisibles.addClass('non-match');\r\n        }\r\n\r\n        protected reportLinkClick(e) {\r\n            e.preventDefault();\r\n            new ReportDialog({\r\n                reportKey: $(e.target).data('key')\r\n            }).dialogOpen();\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\r\n    export class UserPreferenceStorage implements Serenity.SettingStorage {\r\n        getItem(key: string): string {\r\n            let value: string;\r\n\r\n            UserPreferenceService.Retrieve({\r\n                PreferenceType: \"UserPreferenceStorage\",\r\n                Name: key\r\n            },\r\n            response => value = response.Value,\r\n            {\r\n                async: false\r\n            });\r\n\r\n            return value;\r\n        }\r\n\r\n        setItem(key: string, data: string): void {\r\n            UserPreferenceService.Update({\r\n                PreferenceType: \"UserPreferenceStorage\",\r\n                Name: key,\r\n                Value: data\r\n            });\r\n        }\r\n    }\r\n}","namespace Serenity.Extensions.DialogUtils {\r\n    export function pendingChangesConfirmation(element: JQuery, hasPendingChanges: () => boolean) {\r\n        element.on('dialogbeforeclose panelbeforeclose', function (e) {\r\n            if (!Serenity.WX.hasOriginalEvent(e) || !hasPendingChanges()) {\r\n                return;\r\n            }\r\n\r\n            e.preventDefault();\r\n            Q.confirm(Q.text('Site.Dialogs.PendingChangesConfirmation'),\r\n                () => element.find('div.save-and-close-button').click(),\r\n                {\r\n                    onNo: function () {\r\n                        if (element.hasClass('ui-dialog-content'))\r\n                            element.dialog('close');\r\n                        else if (element.hasClass('s-Panel'))\r\n                            Serenity.TemplatedDialog.closePanel(element);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Extensions {\n\n    export interface PromptDialogOptions {\n        cssClass?: string;\n        editorType?: string;\n        editorOptions?: any;\n        title?: string;\n        message?: string;\n        isHtml?: boolean;\n        value?: any;\n        required?: boolean;\n        validateValue: (v: any) => boolean;\n    }\n\n    @Serenity.Decorators.registerClass()\n    export class PromptDialog extends Serenity.PropertyDialog<any, PromptDialogOptions> {\n\n        constructor(opt: PromptDialogOptions) {\n            super(opt);\n\n            if (!Q.isEmptyOrNull(this.options.cssClass))\n                this.element.addClass(this.options.cssClass);\n\n            if (!Q.isEmptyOrNull(this.options.message)) {\n                var msg = $(\"<div/>\").addClass(\"message\")\n                    .insertBefore(this.byId(\"PropertyGrid\"));\n                this.options.isHtml ? msg.html(this.options.message) : msg.text(this.options.message);\n            }\n\n            this.dialogTitle = this.options.title || \"Prompt\";\n\n        }\n\n        protected getDialogButtons() {\n            return [\n                {\n                    text: Q.text(\"Dialogs.OkButton\"),\n                    click: () => {\n                        if (!this.validateForm())\n                            return;\n\n                        if (this.options.validateValue == null || this.options.validateValue(this.value))\n                            this.dialogClose();\n                    },\n                },\n                {\n                    text: Q.text(\"Dialogs.CancelButton\"),\n                    click: () => this.dialogClose()\n                }\n            ];\n        }\n\n        protected loadInitialEntity()\n        {\n            this.value = this.options.value;\n        }\n\n        protected getPropertyItems() {\n            return [\n                {\n                    name: \"Value\",\n                    editorType: this.options.editorType || \"String\",\n                    required: Q.coalesce(this.options.required, true),\n                    editorParams: this.options.editorOptions\n                }\n            ]\n        }\n\n        public get value() {\n            return (this.getSaveEntity() as any).Value;\n        }\n\n        public set value(v: any) {\n            this.propertyGrid.load(\n            {\n                Value: v\n            });\n        }\n\n        public static prompt(title: string, message: string, value: string, validateValue: (string) => boolean) {\n            new PromptDialog({\n                title: title,\n                message: message,\n                value: value,\n                validateValue: v => validateValue(v)\n            }).dialogOpen();\n        }\n    }\n}","namespace Serenity.Extensions {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class SelectableEntityGrid<TItem, TOptions> extends Serenity.EntityGrid<TItem, TOptions> {\r\n\r\n        protected getSlickOptions(): Slick.GridOptions {\r\n            var opt = super.getSlickOptions();\r\n            opt.enableTextSelectionOnCells = true;\r\n            opt.selectedCellCssClass = \"slick-row-selected\";\r\n            opt.enableCellNavigation = true;\r\n            return opt;\r\n        }\r\n\r\n        protected createSlickGrid(): Slick.Grid {\r\n            var grid = super.createSlickGrid();\r\n            grid.setSelectionModel(new Slick.RowSelectionModel());\r\n            return grid;\r\n        }\r\n    }\r\n\r\n}","\r\nnamespace Serenity.Extensions {\r\n\r\n    export interface ServiceEditorOptions {\r\n        cascadeFrom?: string;\r\n        cascadeField?: string;\r\n        cascadeValue?: any;\r\n    }\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class ServiceEditorBase<TOptions extends ServiceEditorOptions, TRow>\r\n            extends Serenity.Select2AjaxEditor<TOptions, TRow> {\r\n        private cascadeLink: Serenity.CascadedWidgetLink<Serenity.Widget<any>>;\r\n\r\n        constructor(hidden: JQuery, options: TOptions) {\r\n            super(hidden, options);\r\n\r\n            this.setCascadeFrom(this.options.cascadeFrom);\r\n        }\r\n\r\n        private setCascadeFrom(value: string): void {\r\n            if (Q.isEmptyOrNull(value)) {\r\n                if (this.cascadeLink) {\r\n                    this.cascadeLink.set_parentID(null);\r\n                    this.cascadeLink = null;\r\n                }\r\n\r\n                this.options.cascadeFrom = null;\r\n                return;\r\n            }\r\n\r\n            this.cascadeLink = new Serenity.CascadedWidgetLink(Serenity.Widget, this,\r\n                p => this.cascadeValue = this.getCascadeFromValue(p));\r\n\r\n            this.cascadeLink.set_parentID(value);\r\n            this.options.cascadeFrom = value;\r\n        }\r\n\r\n        public get cascadeValue(): any {\r\n            return this.options.cascadeValue;\r\n        }\r\n\r\n        public set cascadeValue(value: any) {\r\n            if (value !== this.options.cascadeValue) {\r\n                this.options.cascadeValue = value;\r\n                this.value = null;\r\n            }\r\n        }\r\n\r\n        public get cascadeField(): any {\r\n            return this.options.cascadeField || this.options.cascadeFrom;\r\n        }\r\n\r\n        public set cascadeField(value: any) {\r\n            this.options.cascadeField = value;\r\n        }\r\n\r\n        public get cascadeFrom(): any {\r\n            return this.options.cascadeFrom;\r\n        }\r\n\r\n        public set cascadeFrom(value: any) {\r\n            if (value !== this.options.cascadeFrom) {\r\n                this.setCascadeFrom(value);\r\n            }\r\n        }\r\n\r\n        private getCascadeFromValue(parent: Serenity.Widget<any>) {\r\n            return Serenity.EditorUtils.getValue(parent);\r\n        }\r\n\r\n        protected getIncludeColumns(): string[] {\r\n            return [];\r\n        }\r\n\r\n        protected getSort(): string[] {\r\n            return [];\r\n        }\r\n\r\n        public getTypeDelay(): number {\r\n            return 200;\r\n        }\r\n\r\n        private lastRequest: JQueryXHR;\r\n\r\n        public executeQueryByKey(options: Serenity.ServiceOptions<Serenity.RetrieveResponse<TRow>>): void {\r\n            var request = <Serenity.RetrieveRequest>options.request;\r\n            request.ColumnSelection = Serenity.RetrieveColumnSelection.keyOnly;\r\n            request.IncludeColumns = this.getIncludeColumns();\r\n            super.executeQueryByKey(options);\r\n        }\r\n\r\n        public executeQuery(options: Serenity.ServiceOptions<Serenity.ListResponse<TRow>>): void {\r\n\r\n            var request = <Serenity.ListRequest>options.request;\r\n\r\n            request.ColumnSelection = Serenity.ColumnSelection.KeyOnly;\r\n            request.IncludeColumns = this.getIncludeColumns();\r\n            request.Sort = this.getSort();\r\n            request.ExcludeTotalCount = true;\r\n\r\n            if (this.cascadeField) {\r\n                request.EqualityFilter = request.EqualityFilter || {};\r\n                request.EqualityFilter[this.cascadeField] = this.cascadeValue;\r\n            }\r\n\r\n            options.blockUI = false;\r\n            options.error = () => {};\r\n\r\n            if (this.lastRequest != null && this.lastRequest.readyState != XMLHttpRequest.DONE)\r\n                this.lastRequest.abort();\r\n\r\n            this.lastRequest = Q.serviceCall(options);\r\n            this.lastRequest.then(() => this.lastRequest = null, () => this.lastRequest = null);\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.Extensions {\r\n\r\n    /**\r\n     * This is an editor widget but it only displays a text, not edits it.\r\n     *  \r\n     */\r\n    @Serenity.Decorators.element(\"<div/>\")\r\n    @Serenity.Decorators.registerEditor([Serenity.ISetEditValue])\r\n    export class StaticTextBlock extends Serenity.Widget<StaticTextBlockOptions>\r\n        implements Serenity.ISetEditValue {\r\n\r\n        private value: string;\r\n\r\n        constructor(container: JQuery, options: StaticTextBlockOptions) {\r\n            super(container, options);\r\n\r\n            // hide the caption label for this editor if in a form. ugly hack\r\n            if (this.options.hideLabel)\r\n                this.element.closest('.field').find('.caption').hide();\r\n\r\n            this.updateElementContent();\r\n        }\r\n\r\n        private updateElementContent() {\r\n            var text = Q.coalesce(this.options.text, this.value);\r\n\r\n            // if isLocalText is set, text is actually a local text key\r\n            if (this.options.isLocalText)\r\n                text = Q.text(text);\r\n\r\n            // don't html encode if isHtml option is true\r\n            if (this.options.isHtml)\r\n                this.element.html(text);\r\n            else\r\n                this.element.text(text);\r\n        }\r\n\r\n        /**\r\n         * By implementing ISetEditValue interface, we allow this editor to display its field value.\r\n         * But only do this when our text content is not explicitly set in options\r\n         */\r\n        public setEditValue(source: any, property: Serenity.PropertyItem) {\r\n            if (this.options.text == null) {\r\n                this.value = Q.coalesce(this.options.text, source[property.name]);\r\n                this.updateElementContent();\r\n            }\r\n        }\r\n    }\r\n\r\n    export interface StaticTextBlockOptions {\r\n        text: string;\r\n        isHtml: boolean;\r\n        isLocalText: boolean;\r\n        hideLabel: boolean;\r\n    }\r\n}"]}