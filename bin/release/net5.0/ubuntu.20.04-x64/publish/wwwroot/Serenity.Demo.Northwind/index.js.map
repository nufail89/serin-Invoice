{"version":3,"file":"index.js","sourceRoot":"","sources":["../Imports/ServerTypings/Demo.Northwind.CategoryColumns.ts","../Imports/ServerTypings/Demo.Northwind.CategoryForm.ts","../Imports/ServerTypings/Demo.Northwind.CategoryLangRow.ts","../Imports/ServerTypings/Demo.Northwind.CategoryLangService.ts","../Imports/ServerTypings/Demo.Northwind.CategoryRow.ts","../Imports/ServerTypings/Demo.Northwind.CategoryService.ts","../Imports/ServerTypings/Demo.Northwind.CustomerColumns.ts","../Imports/ServerTypings/Demo.Northwind.CustomerCustomerDemoRow.ts","../Imports/ServerTypings/Demo.Northwind.CustomerDemographicRow.ts","../Imports/ServerTypings/Demo.Northwind.CustomerDetailsRow.ts","../Imports/ServerTypings/Demo.Northwind.CustomerForm.ts","../Imports/ServerTypings/Demo.Northwind.CustomerGrossSalesRow.ts","../Imports/ServerTypings/Demo.Northwind.CustomerRepresentativesRow.ts","../Imports/ServerTypings/Demo.Northwind.CustomerRow.ts","../Imports/ServerTypings/Demo.Northwind.CustomerService.ts","../Imports/ServerTypings/Demo.Northwind.EmployeeRow.ts","../Imports/ServerTypings/Demo.Northwind.EmployeeTerritoryRow.ts","../Imports/ServerTypings/Demo.Northwind.Gender.ts","../Imports/ServerTypings/Demo.Northwind.NoteRow.ts","../Imports/ServerTypings/Demo.Northwind.OrderColumns.ts","../Imports/ServerTypings/Demo.Northwind.OrderDetailColumns.ts","../Imports/ServerTypings/Demo.Northwind.OrderDetailForm.ts","../Imports/ServerTypings/Demo.Northwind.OrderDetailRow.ts","../Imports/ServerTypings/Demo.Northwind.OrderDetailService.ts","../Imports/ServerTypings/Demo.Northwind.OrderForm.ts","../Imports/ServerTypings/Demo.Northwind.OrderListRequest.ts","../Imports/ServerTypings/Demo.Northwind.OrderRow.ts","../Imports/ServerTypings/Demo.Northwind.OrderService.ts","../Imports/ServerTypings/Demo.Northwind.OrderShippingState.ts","../Imports/ServerTypings/Demo.Northwind.PermissionKeys.ts","../Imports/ServerTypings/Demo.Northwind.ProductColumns.ts","../Imports/ServerTypings/Demo.Northwind.ProductForm.ts","../Imports/ServerTypings/Demo.Northwind.ProductLangRow.ts","../Imports/ServerTypings/Demo.Northwind.ProductLangService.ts","../Imports/ServerTypings/Demo.Northwind.ProductLogRow.ts","../Imports/ServerTypings/Demo.Northwind.ProductRow.ts","../Imports/ServerTypings/Demo.Northwind.ProductService.ts","../Imports/ServerTypings/Demo.Northwind.RegionColumns.ts","../Imports/ServerTypings/Demo.Northwind.RegionForm.ts","../Imports/ServerTypings/Demo.Northwind.RegionRow.ts","../Imports/ServerTypings/Demo.Northwind.RegionService.ts","../Imports/ServerTypings/Demo.Northwind.SalesByCategoryColumns.ts","../Imports/ServerTypings/Demo.Northwind.SalesByCategoryRow.ts","../Imports/ServerTypings/Demo.Northwind.SalesByCategoryService.ts","../Imports/ServerTypings/Demo.Northwind.ShipperColumns.ts","../Imports/ServerTypings/Demo.Northwind.ShipperForm.ts","../Imports/ServerTypings/Demo.Northwind.ShipperRow.ts","../Imports/ServerTypings/Demo.Northwind.ShipperService.ts","../Imports/ServerTypings/Demo.Northwind.SupplierColumns.ts","../Imports/ServerTypings/Demo.Northwind.SupplierForm.ts","../Imports/ServerTypings/Demo.Northwind.SupplierRow.ts","../Imports/ServerTypings/Demo.Northwind.SupplierService.ts","../Imports/ServerTypings/Demo.Northwind.TerritoryColumns.ts","../Imports/ServerTypings/Demo.Northwind.TerritoryForm.ts","../Imports/ServerTypings/Demo.Northwind.TerritoryRow.ts","../Imports/ServerTypings/Demo.Northwind.TerritoryService.ts","../Serenity.Demo.Northwind/Category/CategoryDialog.ts","../Serenity.Demo.Northwind/Category/CategoryGrid.ts","../Serenity.Demo.Northwind/Customer/CustomerDialog.ts","../Serenity.Demo.Northwind/Customer/CustomerEditor.ts","../Serenity.Demo.Northwind/Customer/CustomerGrid.ts","../Serenity.Demo.Northwind/Order/OrderDialog.ts","../Serenity.Demo.Northwind/Customer/CustomerOrderDialog.ts","../Serenity.Demo.Northwind/Order/OrderGrid.ts","../Serenity.Demo.Northwind/Customer/CustomerOrdersGrid.ts","../Serenity.Demo.Northwind/Customer/EmployeeListFormatter.ts","../Serenity.Demo.Northwind/Employee/EmployeeFormatter.ts","../Serenity.Demo.Northwind/Note/NoteDialog.ts","../Serenity.Demo.Northwind/Note/NotesEditor.ts","../Serenity.Demo.Northwind/Order/FreightFormatter.ts","../Serenity.Demo.Northwind/OrderDetail/OrderDetailDialog.ts","../Serenity.Demo.Northwind/OrderDetail/OrderDetailsEditor.ts","../Serenity.Demo.Northwind/Product/ProductDialog.ts","../Serenity.Demo.Northwind/Product/ProductGrid.ts","../Serenity.Demo.Northwind/Region/RegionDialog.ts","../Serenity.Demo.Northwind/Region/RegionGrid.ts","../Serenity.Demo.Northwind/Shared/PhoneEditor.ts","../Serenity.Demo.Northwind/Shipper/ShipperDialog.ts","../Serenity.Demo.Northwind/Shipper/ShipperFormatter.ts","../Serenity.Demo.Northwind/Shipper/ShipperGrid.ts","../Serenity.Demo.Northwind/Supplier/SupplierDialog.ts","../Serenity.Demo.Northwind/Supplier/SupplierGrid.ts","../Serenity.Demo.Northwind/Territory/TerritoryDialog.ts","../Serenity.Demo.Northwind/Territory/TerritoryGrid.ts"],"names":[],"mappings":"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","sourcesContent":["namespace Serenity.Demo.Northwind {\r\n    export class CategoryColumns {\r\n        static columnsKey = 'Northwind.Category';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CategoryForm {\r\n        CategoryName: StringEditor;\r\n        Description: StringEditor;\r\n    }\r\n\r\n    export class CategoryForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Northwind.Category';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!CategoryForm.init)  {\r\n                CategoryForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = StringEditor;\r\n\r\n                Q.initFormType(CategoryForm, [\r\n                    'CategoryName', w0,\r\n                    'Description', w0\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CategoryLangRow {\r\n        Id?: number;\r\n        CategoryId?: number;\r\n        LanguageId?: number;\r\n        CategoryName?: string;\r\n        Description?: string;\r\n    }\r\n\r\n    export namespace CategoryLangRow {\r\n        export const idProperty = 'Id';\r\n        export const nameProperty = 'CategoryName';\r\n        export const localTextPrefix = 'Northwind.CategoryLang';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            Id = \"Id\",\r\n            CategoryId = \"CategoryId\",\r\n            LanguageId = \"LanguageId\",\r\n            CategoryName = \"CategoryName\",\r\n            Description = \"Description\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace CategoryLangService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/CategoryLang';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<CategoryLangRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<CategoryLangRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<CategoryLangRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<CategoryLangRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/CategoryLang/Create\",\r\n            Update = \"Serenity.Demo.Northwind/CategoryLang/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/CategoryLang/Delete\",\r\n            Retrieve = \"Serenity.Demo.Northwind/CategoryLang/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/CategoryLang/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>CategoryLangService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CategoryRow {\r\n        CategoryID?: number;\r\n        CategoryName?: string;\r\n        Description?: string;\r\n        Picture?: number[];\r\n    }\r\n\r\n    export namespace CategoryRow {\r\n        export const idProperty = 'CategoryID';\r\n        export const nameProperty = 'CategoryName';\r\n        export const localTextPrefix = 'Northwind.Category';\r\n        export const lookupKey = 'Northwind.Category';\r\n\r\n        export function getLookup(): Q.Lookup<CategoryRow> {\r\n            return Q.getLookup<CategoryRow>('Northwind.Category');\r\n        }\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            CategoryID = \"CategoryID\",\r\n            CategoryName = \"CategoryName\",\r\n            Description = \"Description\",\r\n            Picture = \"Picture\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace CategoryService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/Category';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<CategoryRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<CategoryRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<CategoryRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<CategoryRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/Category/Create\",\r\n            Update = \"Serenity.Demo.Northwind/Category/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/Category/Delete\",\r\n            Retrieve = \"Serenity.Demo.Northwind/Category/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/Category/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>CategoryService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export class CustomerColumns {\r\n        static columnsKey = 'Northwind.Customer';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CustomerCustomerDemoRow {\r\n        ID?: number;\r\n        CustomerID?: string;\r\n        CustomerTypeID?: string;\r\n        CustomerCompanyName?: string;\r\n        CustomerContactName?: string;\r\n        CustomerContactTitle?: string;\r\n        CustomerAddress?: string;\r\n        CustomerCity?: string;\r\n        CustomerRegion?: string;\r\n        CustomerPostalCode?: string;\r\n        CustomerCountry?: string;\r\n        CustomerPhone?: string;\r\n        CustomerFax?: string;\r\n        CustomerTypeCustomerDesc?: string;\r\n    }\r\n\r\n    export namespace CustomerCustomerDemoRow {\r\n        export const idProperty = 'ID';\r\n        export const nameProperty = 'CustomerID';\r\n        export const localTextPrefix = 'Northwind.CustomerCustomerDemo';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            ID = \"ID\",\r\n            CustomerID = \"CustomerID\",\r\n            CustomerTypeID = \"CustomerTypeID\",\r\n            CustomerCompanyName = \"CustomerCompanyName\",\r\n            CustomerContactName = \"CustomerContactName\",\r\n            CustomerContactTitle = \"CustomerContactTitle\",\r\n            CustomerAddress = \"CustomerAddress\",\r\n            CustomerCity = \"CustomerCity\",\r\n            CustomerRegion = \"CustomerRegion\",\r\n            CustomerPostalCode = \"CustomerPostalCode\",\r\n            CustomerCountry = \"CustomerCountry\",\r\n            CustomerPhone = \"CustomerPhone\",\r\n            CustomerFax = \"CustomerFax\",\r\n            CustomerTypeCustomerDesc = \"CustomerTypeCustomerDesc\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CustomerDemographicRow {\r\n        ID?: number;\r\n        CustomerTypeID?: string;\r\n        CustomerDesc?: string;\r\n    }\r\n\r\n    export namespace CustomerDemographicRow {\r\n        export const idProperty = 'ID';\r\n        export const nameProperty = 'CustomerTypeID';\r\n        export const localTextPrefix = 'Northwind.CustomerDemographic';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            ID = \"ID\",\r\n            CustomerTypeID = \"CustomerTypeID\",\r\n            CustomerDesc = \"CustomerDesc\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CustomerDetailsRow {\r\n        Id?: number;\r\n        LastContactDate?: string;\r\n        LastContactedBy?: number;\r\n        Email?: string;\r\n        SendBulletin?: boolean;\r\n        LastContactedByLastName?: string;\r\n        LastContactedByFirstName?: string;\r\n        LastContactedByTitle?: string;\r\n        LastContactedByTitleOfCourtesy?: string;\r\n        LastContactedByBirthDate?: string;\r\n        LastContactedByHireDate?: string;\r\n        LastContactedByAddress?: string;\r\n        LastContactedByCity?: string;\r\n        LastContactedByRegion?: string;\r\n        LastContactedByPostalCode?: string;\r\n        LastContactedByCountry?: string;\r\n        LastContactedByHomePhone?: string;\r\n        LastContactedByExtension?: string;\r\n        LastContactedByPhoto?: number[];\r\n        LastContactedByNotes?: string;\r\n        LastContactedByReportsTo?: number;\r\n        LastContactedByPhotoPath?: string;\r\n    }\r\n\r\n    export namespace CustomerDetailsRow {\r\n        export const idProperty = 'Id';\r\n        export const nameProperty = 'Email';\r\n        export const localTextPrefix = 'Northwind.CustomerDetails';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            Id = \"Id\",\r\n            LastContactDate = \"LastContactDate\",\r\n            LastContactedBy = \"LastContactedBy\",\r\n            Email = \"Email\",\r\n            SendBulletin = \"SendBulletin\",\r\n            LastContactedByLastName = \"LastContactedByLastName\",\r\n            LastContactedByFirstName = \"LastContactedByFirstName\",\r\n            LastContactedByTitle = \"LastContactedByTitle\",\r\n            LastContactedByTitleOfCourtesy = \"LastContactedByTitleOfCourtesy\",\r\n            LastContactedByBirthDate = \"LastContactedByBirthDate\",\r\n            LastContactedByHireDate = \"LastContactedByHireDate\",\r\n            LastContactedByAddress = \"LastContactedByAddress\",\r\n            LastContactedByCity = \"LastContactedByCity\",\r\n            LastContactedByRegion = \"LastContactedByRegion\",\r\n            LastContactedByPostalCode = \"LastContactedByPostalCode\",\r\n            LastContactedByCountry = \"LastContactedByCountry\",\r\n            LastContactedByHomePhone = \"LastContactedByHomePhone\",\r\n            LastContactedByExtension = \"LastContactedByExtension\",\r\n            LastContactedByPhoto = \"LastContactedByPhoto\",\r\n            LastContactedByNotes = \"LastContactedByNotes\",\r\n            LastContactedByReportsTo = \"LastContactedByReportsTo\",\r\n            LastContactedByPhotoPath = \"LastContactedByPhotoPath\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CustomerForm {\r\n        CustomerID: StringEditor;\r\n        CompanyName: StringEditor;\r\n        ContactName: StringEditor;\r\n        ContactTitle: StringEditor;\r\n        Representatives: LookupEditor;\r\n        Address: StringEditor;\r\n        Country: LookupEditor;\r\n        City: LookupEditor;\r\n        Region: StringEditor;\r\n        PostalCode: StringEditor;\r\n        Phone: StringEditor;\r\n        Fax: StringEditor;\r\n        NoteList: NotesEditor;\r\n        LastContactDate: DateEditor;\r\n        LastContactedBy: LookupEditor;\r\n        Email: EmailAddressEditor;\r\n        SendBulletin: BooleanEditor;\r\n    }\r\n\r\n    export class CustomerForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Northwind.Customer';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!CustomerForm.init)  {\r\n                CustomerForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = StringEditor;\r\n                var w1 = LookupEditor;\r\n                var w2 = NotesEditor;\r\n                var w3 = DateEditor;\r\n                var w4 = EmailAddressEditor;\r\n                var w5 = BooleanEditor;\r\n\r\n                Q.initFormType(CustomerForm, [\r\n                    'CustomerID', w0,\r\n                    'CompanyName', w0,\r\n                    'ContactName', w0,\r\n                    'ContactTitle', w0,\r\n                    'Representatives', w1,\r\n                    'Address', w0,\r\n                    'Country', w1,\r\n                    'City', w1,\r\n                    'Region', w0,\r\n                    'PostalCode', w0,\r\n                    'Phone', w0,\r\n                    'Fax', w0,\r\n                    'NoteList', w2,\r\n                    'LastContactDate', w3,\r\n                    'LastContactedBy', w1,\r\n                    'Email', w4,\r\n                    'SendBulletin', w5\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CustomerGrossSalesRow {\r\n        CustomerId?: string;\r\n        ContactName?: string;\r\n        ProductId?: number;\r\n        ProductName?: string;\r\n        GrossAmount?: number;\r\n    }\r\n\r\n    export namespace CustomerGrossSalesRow {\r\n        export const nameProperty = 'ContactName';\r\n        export const localTextPrefix = 'Northwind.CustomerGrossSales';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            CustomerId = \"CustomerId\",\r\n            ContactName = \"ContactName\",\r\n            ProductId = \"ProductId\",\r\n            ProductName = \"ProductName\",\r\n            GrossAmount = \"GrossAmount\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CustomerRepresentativesRow {\r\n        RepresentativeId?: number;\r\n        CustomerId?: number;\r\n        EmployeeId?: number;\r\n    }\r\n\r\n    export namespace CustomerRepresentativesRow {\r\n        export const idProperty = 'RepresentativeId';\r\n        export const localTextPrefix = 'Northwind.CustomerRepresentatives';\r\n        export const deletePermission = 'Northwind:Customer:View';\r\n        export const insertPermission = 'Northwind:Customer:View';\r\n        export const readPermission = 'Northwind:Customer:View';\r\n        export const updatePermission = 'Northwind:Customer:View';\r\n\r\n        export declare const enum Fields {\r\n            RepresentativeId = \"RepresentativeId\",\r\n            CustomerId = \"CustomerId\",\r\n            EmployeeId = \"EmployeeId\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface CustomerRow {\r\n        ID?: number;\r\n        CustomerID?: string;\r\n        CompanyName?: string;\r\n        ContactName?: string;\r\n        ContactTitle?: string;\r\n        Address?: string;\r\n        City?: string;\r\n        Region?: string;\r\n        PostalCode?: string;\r\n        Country?: string;\r\n        Phone?: string;\r\n        Fax?: string;\r\n        NoteList?: NoteRow[];\r\n        Representatives?: number[];\r\n        LastContactDate?: string;\r\n        LastContactedBy?: number;\r\n        Email?: string;\r\n        SendBulletin?: boolean;\r\n    }\r\n\r\n    export namespace CustomerRow {\r\n        export const idProperty = 'ID';\r\n        export const nameProperty = 'CompanyName';\r\n        export const localTextPrefix = 'Northwind.Customer';\r\n        export const lookupKey = 'Northwind.Customer';\r\n\r\n        export function getLookup(): Q.Lookup<CustomerRow> {\r\n            return Q.getLookup<CustomerRow>('Northwind.Customer');\r\n        }\r\n        export const deletePermission = 'Northwind:Customer:Delete';\r\n        export const insertPermission = 'Northwind:Customer:Modify';\r\n        export const readPermission = 'Northwind:Customer:View';\r\n        export const updatePermission = 'Northwind:Customer:Modify';\r\n\r\n        export declare const enum Fields {\r\n            ID = \"ID\",\r\n            CustomerID = \"CustomerID\",\r\n            CompanyName = \"CompanyName\",\r\n            ContactName = \"ContactName\",\r\n            ContactTitle = \"ContactTitle\",\r\n            Address = \"Address\",\r\n            City = \"City\",\r\n            Region = \"Region\",\r\n            PostalCode = \"PostalCode\",\r\n            Country = \"Country\",\r\n            Phone = \"Phone\",\r\n            Fax = \"Fax\",\r\n            NoteList = \"NoteList\",\r\n            Representatives = \"Representatives\",\r\n            LastContactDate = \"LastContactDate\",\r\n            LastContactedBy = \"LastContactedBy\",\r\n            Email = \"Email\",\r\n            SendBulletin = \"SendBulletin\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace CustomerService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/Customer';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<CustomerRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<CustomerRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function GetNextNumber(request: Extensions.GetNextNumberRequest, onSuccess?: (response: Extensions.GetNextNumberResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<CustomerRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<CustomerRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/Customer/Create\",\r\n            Update = \"Serenity.Demo.Northwind/Customer/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/Customer/Delete\",\r\n            GetNextNumber = \"Serenity.Demo.Northwind/Customer/GetNextNumber\",\r\n            Retrieve = \"Serenity.Demo.Northwind/Customer/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/Customer/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'GetNextNumber', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>CustomerService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface EmployeeRow {\r\n        EmployeeID?: number;\r\n        LastName?: string;\r\n        FirstName?: string;\r\n        FullName?: string;\r\n        Title?: string;\r\n        TitleOfCourtesy?: string;\r\n        BirthDate?: string;\r\n        HireDate?: string;\r\n        Address?: string;\r\n        City?: string;\r\n        Region?: string;\r\n        PostalCode?: string;\r\n        Country?: string;\r\n        HomePhone?: string;\r\n        Extension?: string;\r\n        Photo?: number[];\r\n        Notes?: string;\r\n        ReportsTo?: number;\r\n        PhotoPath?: string;\r\n        ReportsToFullName?: string;\r\n        ReportsToLastName?: string;\r\n        ReportsToFirstName?: string;\r\n        ReportsToTitle?: string;\r\n        ReportsToTitleOfCourtesy?: string;\r\n        ReportsToBirthDate?: string;\r\n        ReportsToHireDate?: string;\r\n        ReportsToAddress?: string;\r\n        ReportsToCity?: string;\r\n        ReportsToRegion?: string;\r\n        ReportsToPostalCode?: string;\r\n        ReportsToCountry?: string;\r\n        ReportsToHomePhone?: string;\r\n        ReportsToExtension?: string;\r\n        ReportsToPhoto?: number[];\r\n        ReportsToNotes?: string;\r\n        ReportsToReportsTo?: number;\r\n        ReportsToPhotoPath?: string;\r\n        Gender?: Gender;\r\n    }\r\n\r\n    export namespace EmployeeRow {\r\n        export const idProperty = 'EmployeeID';\r\n        export const nameProperty = 'FullName';\r\n        export const localTextPrefix = 'Northwind.Employee';\r\n        export const lookupKey = 'Northwind.Employee';\r\n\r\n        export function getLookup(): Q.Lookup<EmployeeRow> {\r\n            return Q.getLookup<EmployeeRow>('Northwind.Employee');\r\n        }\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            EmployeeID = \"EmployeeID\",\r\n            LastName = \"LastName\",\r\n            FirstName = \"FirstName\",\r\n            FullName = \"FullName\",\r\n            Title = \"Title\",\r\n            TitleOfCourtesy = \"TitleOfCourtesy\",\r\n            BirthDate = \"BirthDate\",\r\n            HireDate = \"HireDate\",\r\n            Address = \"Address\",\r\n            City = \"City\",\r\n            Region = \"Region\",\r\n            PostalCode = \"PostalCode\",\r\n            Country = \"Country\",\r\n            HomePhone = \"HomePhone\",\r\n            Extension = \"Extension\",\r\n            Photo = \"Photo\",\r\n            Notes = \"Notes\",\r\n            ReportsTo = \"ReportsTo\",\r\n            PhotoPath = \"PhotoPath\",\r\n            ReportsToFullName = \"ReportsToFullName\",\r\n            ReportsToLastName = \"ReportsToLastName\",\r\n            ReportsToFirstName = \"ReportsToFirstName\",\r\n            ReportsToTitle = \"ReportsToTitle\",\r\n            ReportsToTitleOfCourtesy = \"ReportsToTitleOfCourtesy\",\r\n            ReportsToBirthDate = \"ReportsToBirthDate\",\r\n            ReportsToHireDate = \"ReportsToHireDate\",\r\n            ReportsToAddress = \"ReportsToAddress\",\r\n            ReportsToCity = \"ReportsToCity\",\r\n            ReportsToRegion = \"ReportsToRegion\",\r\n            ReportsToPostalCode = \"ReportsToPostalCode\",\r\n            ReportsToCountry = \"ReportsToCountry\",\r\n            ReportsToHomePhone = \"ReportsToHomePhone\",\r\n            ReportsToExtension = \"ReportsToExtension\",\r\n            ReportsToPhoto = \"ReportsToPhoto\",\r\n            ReportsToNotes = \"ReportsToNotes\",\r\n            ReportsToReportsTo = \"ReportsToReportsTo\",\r\n            ReportsToPhotoPath = \"ReportsToPhotoPath\",\r\n            Gender = \"Gender\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface EmployeeTerritoryRow {\r\n        EmployeeID?: number;\r\n        TerritoryID?: string;\r\n        EmployeeLastName?: string;\r\n        EmployeeFirstName?: string;\r\n        EmployeeTitle?: string;\r\n        EmployeeTitleOfCourtesy?: string;\r\n        EmployeeBirthDate?: string;\r\n        EmployeeHireDate?: string;\r\n        EmployeeAddress?: string;\r\n        EmployeeCity?: string;\r\n        EmployeeRegion?: string;\r\n        EmployeePostalCode?: string;\r\n        EmployeeCountry?: string;\r\n        EmployeeHomePhone?: string;\r\n        EmployeeExtension?: string;\r\n        EmployeePhoto?: number[];\r\n        EmployeeNotes?: string;\r\n        EmployeeReportsTo?: number;\r\n        EmployeePhotoPath?: string;\r\n        TerritoryTerritoryDescription?: string;\r\n        TerritoryRegionID?: number;\r\n    }\r\n\r\n    export namespace EmployeeTerritoryRow {\r\n        export const idProperty = 'EmployeeID';\r\n        export const nameProperty = 'TerritoryID';\r\n        export const localTextPrefix = 'Northwind.EmployeeTerritory';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            EmployeeID = \"EmployeeID\",\r\n            TerritoryID = \"TerritoryID\",\r\n            EmployeeLastName = \"EmployeeLastName\",\r\n            EmployeeFirstName = \"EmployeeFirstName\",\r\n            EmployeeTitle = \"EmployeeTitle\",\r\n            EmployeeTitleOfCourtesy = \"EmployeeTitleOfCourtesy\",\r\n            EmployeeBirthDate = \"EmployeeBirthDate\",\r\n            EmployeeHireDate = \"EmployeeHireDate\",\r\n            EmployeeAddress = \"EmployeeAddress\",\r\n            EmployeeCity = \"EmployeeCity\",\r\n            EmployeeRegion = \"EmployeeRegion\",\r\n            EmployeePostalCode = \"EmployeePostalCode\",\r\n            EmployeeCountry = \"EmployeeCountry\",\r\n            EmployeeHomePhone = \"EmployeeHomePhone\",\r\n            EmployeeExtension = \"EmployeeExtension\",\r\n            EmployeePhoto = \"EmployeePhoto\",\r\n            EmployeeNotes = \"EmployeeNotes\",\r\n            EmployeeReportsTo = \"EmployeeReportsTo\",\r\n            EmployeePhotoPath = \"EmployeePhotoPath\",\r\n            TerritoryTerritoryDescription = \"TerritoryTerritoryDescription\",\r\n            TerritoryRegionID = \"TerritoryRegionID\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export enum Gender {\r\n        Male = 1,\r\n        Female = 2\r\n    }\r\n    Serenity.Decorators.registerEnumType(Gender, 'Serenity.Demo.Northwind.Gender');\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface NoteRow {\r\n        NoteId?: number;\r\n        EntityType?: string;\r\n        EntityId?: number;\r\n        Text?: string;\r\n        InsertUserId?: number;\r\n        InsertDate?: string;\r\n        InsertUserDisplayName?: string;\r\n    }\r\n\r\n    export namespace NoteRow {\r\n        export const idProperty = 'NoteId';\r\n        export const nameProperty = 'EntityType';\r\n        export const localTextPrefix = 'Northwind.Note';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            NoteId = \"NoteId\",\r\n            EntityType = \"EntityType\",\r\n            EntityId = \"EntityId\",\r\n            Text = \"Text\",\r\n            InsertUserId = \"InsertUserId\",\r\n            InsertDate = \"InsertDate\",\r\n            InsertUserDisplayName = \"InsertUserDisplayName\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export class OrderColumns {\r\n        static columnsKey = 'Northwind.Order';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export class OrderDetailColumns {\r\n        static columnsKey = 'Northwind.OrderDetail';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface OrderDetailForm {\r\n        ProductID: LookupEditor;\r\n        UnitPrice: DecimalEditor;\r\n        Quantity: IntegerEditor;\r\n        Discount: DecimalEditor;\r\n    }\r\n\r\n    export class OrderDetailForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Northwind.OrderDetail';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!OrderDetailForm.init)  {\r\n                OrderDetailForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = LookupEditor;\r\n                var w1 = DecimalEditor;\r\n                var w2 = IntegerEditor;\r\n\r\n                Q.initFormType(OrderDetailForm, [\r\n                    'ProductID', w0,\r\n                    'UnitPrice', w1,\r\n                    'Quantity', w2,\r\n                    'Discount', w1\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface OrderDetailRow {\r\n        DetailID?: number;\r\n        OrderID?: number;\r\n        ProductID?: number;\r\n        UnitPrice?: number;\r\n        Quantity?: number;\r\n        Discount?: number;\r\n        OrderCustomerID?: string;\r\n        OrderEmployeeID?: number;\r\n        OrderDate?: string;\r\n        OrderShippedDate?: string;\r\n        OrderShipVia?: number;\r\n        OrderShipCity?: string;\r\n        OrderShipCountry?: string;\r\n        ProductName?: string;\r\n        ProductDiscontinued?: boolean;\r\n        ProductSupplierID?: number;\r\n        ProductQuantityPerUnit?: string;\r\n        ProductUnitPrice?: number;\r\n        LineTotal?: number;\r\n    }\r\n\r\n    export namespace OrderDetailRow {\r\n        export const idProperty = 'DetailID';\r\n        export const localTextPrefix = 'Northwind.OrderDetail';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            DetailID = \"DetailID\",\r\n            OrderID = \"OrderID\",\r\n            ProductID = \"ProductID\",\r\n            UnitPrice = \"UnitPrice\",\r\n            Quantity = \"Quantity\",\r\n            Discount = \"Discount\",\r\n            OrderCustomerID = \"OrderCustomerID\",\r\n            OrderEmployeeID = \"OrderEmployeeID\",\r\n            OrderDate = \"OrderDate\",\r\n            OrderShippedDate = \"OrderShippedDate\",\r\n            OrderShipVia = \"OrderShipVia\",\r\n            OrderShipCity = \"OrderShipCity\",\r\n            OrderShipCountry = \"OrderShipCountry\",\r\n            ProductName = \"ProductName\",\r\n            ProductDiscontinued = \"ProductDiscontinued\",\r\n            ProductSupplierID = \"ProductSupplierID\",\r\n            ProductQuantityPerUnit = \"ProductQuantityPerUnit\",\r\n            ProductUnitPrice = \"ProductUnitPrice\",\r\n            LineTotal = \"LineTotal\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace OrderDetailService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/OrderDetail';\r\n\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<OrderDetailRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<OrderDetailRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Retrieve = \"Serenity.Demo.Northwind/OrderDetail/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/OrderDetail/List\"\r\n        }\r\n\r\n        [\r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>OrderDetailService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface OrderForm {\r\n        CustomerID: CustomerEditor;\r\n        OrderDate: DateEditor;\r\n        RequiredDate: DateEditor;\r\n        EmployeeID: LookupEditor;\r\n        DetailList: OrderDetailsEditor;\r\n        ShippedDate: DateEditor;\r\n        ShipVia: LookupEditor;\r\n        Freight: DecimalEditor;\r\n        ShipName: StringEditor;\r\n        ShipAddress: StringEditor;\r\n        ShipCity: StringEditor;\r\n        ShipRegion: StringEditor;\r\n        ShipPostalCode: StringEditor;\r\n        ShipCountry: StringEditor;\r\n    }\r\n\r\n    export class OrderForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Northwind.Order';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!OrderForm.init)  {\r\n                OrderForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = CustomerEditor;\r\n                var w1 = DateEditor;\r\n                var w2 = LookupEditor;\r\n                var w3 = OrderDetailsEditor;\r\n                var w4 = DecimalEditor;\r\n                var w5 = StringEditor;\r\n\r\n                Q.initFormType(OrderForm, [\r\n                    'CustomerID', w0,\r\n                    'OrderDate', w1,\r\n                    'RequiredDate', w1,\r\n                    'EmployeeID', w2,\r\n                    'DetailList', w3,\r\n                    'ShippedDate', w1,\r\n                    'ShipVia', w2,\r\n                    'Freight', w4,\r\n                    'ShipName', w5,\r\n                    'ShipAddress', w5,\r\n                    'ShipCity', w5,\r\n                    'ShipRegion', w5,\r\n                    'ShipPostalCode', w5,\r\n                    'ShipCountry', w5\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface OrderListRequest extends Serenity.ListRequest {\r\n        ProductID?: number;\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface OrderRow {\r\n        OrderID?: number;\r\n        CustomerID?: string;\r\n        EmployeeID?: number;\r\n        OrderDate?: string;\r\n        RequiredDate?: string;\r\n        ShippedDate?: string;\r\n        ShipVia?: number;\r\n        Freight?: number;\r\n        ShipName?: string;\r\n        ShipAddress?: string;\r\n        ShipCity?: string;\r\n        ShipRegion?: string;\r\n        ShipPostalCode?: string;\r\n        ShipCountry?: string;\r\n        CustomerCompanyName?: string;\r\n        CustomerContactName?: string;\r\n        CustomerContactTitle?: string;\r\n        CustomerCity?: string;\r\n        CustomerRegion?: string;\r\n        CustomerCountry?: string;\r\n        CustomerPhone?: string;\r\n        CustomerFax?: string;\r\n        EmployeeFullName?: string;\r\n        EmployeeGender?: Gender;\r\n        EmployeeReportsToFullName?: string;\r\n        ShipViaCompanyName?: string;\r\n        ShipViaPhone?: string;\r\n        ShippingState?: OrderShippingState;\r\n        DetailList?: OrderDetailRow[];\r\n    }\r\n\r\n    export namespace OrderRow {\r\n        export const idProperty = 'OrderID';\r\n        export const nameProperty = 'CustomerID';\r\n        export const localTextPrefix = 'Northwind.Order';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            OrderID = \"OrderID\",\r\n            CustomerID = \"CustomerID\",\r\n            EmployeeID = \"EmployeeID\",\r\n            OrderDate = \"OrderDate\",\r\n            RequiredDate = \"RequiredDate\",\r\n            ShippedDate = \"ShippedDate\",\r\n            ShipVia = \"ShipVia\",\r\n            Freight = \"Freight\",\r\n            ShipName = \"ShipName\",\r\n            ShipAddress = \"ShipAddress\",\r\n            ShipCity = \"ShipCity\",\r\n            ShipRegion = \"ShipRegion\",\r\n            ShipPostalCode = \"ShipPostalCode\",\r\n            ShipCountry = \"ShipCountry\",\r\n            CustomerCompanyName = \"CustomerCompanyName\",\r\n            CustomerContactName = \"CustomerContactName\",\r\n            CustomerContactTitle = \"CustomerContactTitle\",\r\n            CustomerCity = \"CustomerCity\",\r\n            CustomerRegion = \"CustomerRegion\",\r\n            CustomerCountry = \"CustomerCountry\",\r\n            CustomerPhone = \"CustomerPhone\",\r\n            CustomerFax = \"CustomerFax\",\r\n            EmployeeFullName = \"EmployeeFullName\",\r\n            EmployeeGender = \"EmployeeGender\",\r\n            EmployeeReportsToFullName = \"EmployeeReportsToFullName\",\r\n            ShipViaCompanyName = \"ShipViaCompanyName\",\r\n            ShipViaPhone = \"ShipViaPhone\",\r\n            ShippingState = \"ShippingState\",\r\n            DetailList = \"DetailList\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace OrderService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/Order';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<OrderRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<OrderRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<OrderRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: OrderListRequest, onSuccess?: (response: Serenity.ListResponse<OrderRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/Order/Create\",\r\n            Update = \"Serenity.Demo.Northwind/Order/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/Order/Delete\",\r\n            Retrieve = \"Serenity.Demo.Northwind/Order/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/Order/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>OrderService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export enum OrderShippingState {\r\n        NotShipped = 0,\r\n        Shipped = 1\r\n    }\r\n    Serenity.Decorators.registerEnumType(OrderShippingState, 'Serenity.Demo.Northwind.OrderShippingState', 'Northwind.OrderShippingState');\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace PermissionKeys {\r\n        export const General = \"Northwind:General\";\r\n\r\n        namespace Customer {\r\n            export const Delete = \"Northwind:Customer:Delete\";\r\n            export const Modify = \"Northwind:Customer:Modify\";\r\n            export const View = \"Northwind:Customer:View\";\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export class ProductColumns {\r\n        static columnsKey = 'Northwind.Product';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface ProductForm {\r\n        ProductName: StringEditor;\r\n        ProductImage: ImageUploadEditor;\r\n        Discontinued: BooleanEditor;\r\n        SupplierID: LookupEditor;\r\n        CategoryID: LookupEditor;\r\n        QuantityPerUnit: StringEditor;\r\n        UnitPrice: DecimalEditor;\r\n        UnitsInStock: IntegerEditor;\r\n        UnitsOnOrder: IntegerEditor;\r\n        ReorderLevel: IntegerEditor;\r\n    }\r\n\r\n    export class ProductForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Northwind.Product';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!ProductForm.init)  {\r\n                ProductForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = StringEditor;\r\n                var w1 = ImageUploadEditor;\r\n                var w2 = BooleanEditor;\r\n                var w3 = LookupEditor;\r\n                var w4 = DecimalEditor;\r\n                var w5 = IntegerEditor;\r\n\r\n                Q.initFormType(ProductForm, [\r\n                    'ProductName', w0,\r\n                    'ProductImage', w1,\r\n                    'Discontinued', w2,\r\n                    'SupplierID', w3,\r\n                    'CategoryID', w3,\r\n                    'QuantityPerUnit', w0,\r\n                    'UnitPrice', w4,\r\n                    'UnitsInStock', w5,\r\n                    'UnitsOnOrder', w5,\r\n                    'ReorderLevel', w5\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface ProductLangRow {\r\n        Id?: number;\r\n        ProductId?: number;\r\n        LanguageId?: number;\r\n        ProductName?: string;\r\n    }\r\n\r\n    export namespace ProductLangRow {\r\n        export const idProperty = 'Id';\r\n        export const nameProperty = 'ProductName';\r\n        export const localTextPrefix = 'Northwind.ProductLang';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            Id = \"Id\",\r\n            ProductId = \"ProductId\",\r\n            LanguageId = \"LanguageId\",\r\n            ProductName = \"ProductName\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace ProductLangService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/ProductLang';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<ProductLangRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<ProductLangRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<ProductLangRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<ProductLangRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/ProductLang/Create\",\r\n            Update = \"Serenity.Demo.Northwind/ProductLang/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/ProductLang/Delete\",\r\n            Retrieve = \"Serenity.Demo.Northwind/ProductLang/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/ProductLang/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>ProductLangService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface ProductLogRow {\r\n        ProductLogID?: number;\r\n        OperationType?: CaptureOperationType;\r\n        ChangingUserId?: number;\r\n        ValidFrom?: string;\r\n        ValidUntil?: string;\r\n        ProductID?: number;\r\n        ProductName?: string;\r\n        ProductImage?: string;\r\n        Discontinued?: boolean;\r\n        SupplierID?: number;\r\n        CategoryID?: number;\r\n        QuantityPerUnit?: string;\r\n        UnitPrice?: number;\r\n        UnitsInStock?: number;\r\n        UnitsOnOrder?: number;\r\n        ReorderLevel?: number;\r\n    }\r\n\r\n    export namespace ProductLogRow {\r\n        export const idProperty = 'ProductLogID';\r\n        export const localTextPrefix = 'Northwind.ProductLog';\r\n        export const deletePermission = null;\r\n        export const insertPermission = null;\r\n        export const readPermission = '';\r\n        export const updatePermission = null;\r\n\r\n        export declare const enum Fields {\r\n            ProductLogID = \"ProductLogID\",\r\n            OperationType = \"OperationType\",\r\n            ChangingUserId = \"ChangingUserId\",\r\n            ValidFrom = \"ValidFrom\",\r\n            ValidUntil = \"ValidUntil\",\r\n            ProductID = \"ProductID\",\r\n            ProductName = \"ProductName\",\r\n            ProductImage = \"ProductImage\",\r\n            Discontinued = \"Discontinued\",\r\n            SupplierID = \"SupplierID\",\r\n            CategoryID = \"CategoryID\",\r\n            QuantityPerUnit = \"QuantityPerUnit\",\r\n            UnitPrice = \"UnitPrice\",\r\n            UnitsInStock = \"UnitsInStock\",\r\n            UnitsOnOrder = \"UnitsOnOrder\",\r\n            ReorderLevel = \"ReorderLevel\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface ProductRow {\r\n        ProductID?: number;\r\n        ProductName?: string;\r\n        ProductImage?: string;\r\n        Discontinued?: boolean;\r\n        SupplierID?: number;\r\n        CategoryID?: number;\r\n        QuantityPerUnit?: string;\r\n        UnitPrice?: number;\r\n        UnitsInStock?: number;\r\n        UnitsOnOrder?: number;\r\n        ReorderLevel?: number;\r\n        SupplierCompanyName?: string;\r\n        SupplierContactName?: string;\r\n        SupplierContactTitle?: string;\r\n        SupplierAddress?: string;\r\n        SupplierCity?: string;\r\n        SupplierRegion?: string;\r\n        SupplierPostalCode?: string;\r\n        SupplierCountry?: string;\r\n        SupplierPhone?: string;\r\n        SupplierFax?: string;\r\n        SupplierHomePage?: string;\r\n        CategoryName?: string;\r\n        CategoryDescription?: string;\r\n        CategoryPicture?: number[];\r\n    }\r\n\r\n    export namespace ProductRow {\r\n        export const idProperty = 'ProductID';\r\n        export const nameProperty = 'ProductName';\r\n        export const localTextPrefix = 'Northwind.Product';\r\n        export const lookupKey = 'Northwind.Product';\r\n\r\n        export function getLookup(): Q.Lookup<ProductRow> {\r\n            return Q.getLookup<ProductRow>('Northwind.Product');\r\n        }\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            ProductID = \"ProductID\",\r\n            ProductName = \"ProductName\",\r\n            ProductImage = \"ProductImage\",\r\n            Discontinued = \"Discontinued\",\r\n            SupplierID = \"SupplierID\",\r\n            CategoryID = \"CategoryID\",\r\n            QuantityPerUnit = \"QuantityPerUnit\",\r\n            UnitPrice = \"UnitPrice\",\r\n            UnitsInStock = \"UnitsInStock\",\r\n            UnitsOnOrder = \"UnitsOnOrder\",\r\n            ReorderLevel = \"ReorderLevel\",\r\n            SupplierCompanyName = \"SupplierCompanyName\",\r\n            SupplierContactName = \"SupplierContactName\",\r\n            SupplierContactTitle = \"SupplierContactTitle\",\r\n            SupplierAddress = \"SupplierAddress\",\r\n            SupplierCity = \"SupplierCity\",\r\n            SupplierRegion = \"SupplierRegion\",\r\n            SupplierPostalCode = \"SupplierPostalCode\",\r\n            SupplierCountry = \"SupplierCountry\",\r\n            SupplierPhone = \"SupplierPhone\",\r\n            SupplierFax = \"SupplierFax\",\r\n            SupplierHomePage = \"SupplierHomePage\",\r\n            CategoryName = \"CategoryName\",\r\n            CategoryDescription = \"CategoryDescription\",\r\n            CategoryPicture = \"CategoryPicture\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace ProductService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/Product';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<ProductRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<ProductRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<ProductRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<ProductRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/Product/Create\",\r\n            Update = \"Serenity.Demo.Northwind/Product/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/Product/Delete\",\r\n            Retrieve = \"Serenity.Demo.Northwind/Product/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/Product/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>ProductService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export class RegionColumns {\r\n        static columnsKey = 'Northwind.Region';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface RegionForm {\r\n        RegionID: IntegerEditor;\r\n        RegionDescription: StringEditor;\r\n    }\r\n\r\n    export class RegionForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Northwind.Region';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!RegionForm.init)  {\r\n                RegionForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = IntegerEditor;\r\n                var w1 = StringEditor;\r\n\r\n                Q.initFormType(RegionForm, [\r\n                    'RegionID', w0,\r\n                    'RegionDescription', w1\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface RegionRow {\r\n        RegionID?: number;\r\n        RegionDescription?: string;\r\n    }\r\n\r\n    export namespace RegionRow {\r\n        export const idProperty = 'RegionID';\r\n        export const nameProperty = 'RegionDescription';\r\n        export const localTextPrefix = 'Northwind.Region';\r\n        export const lookupKey = 'Northwind.Region';\r\n\r\n        export function getLookup(): Q.Lookup<RegionRow> {\r\n            return Q.getLookup<RegionRow>('Northwind.Region');\r\n        }\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            RegionID = \"RegionID\",\r\n            RegionDescription = \"RegionDescription\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace RegionService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/Region';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<RegionRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<RegionRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<RegionRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<RegionRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/Region/Create\",\r\n            Update = \"Serenity.Demo.Northwind/Region/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/Region/Delete\",\r\n            Retrieve = \"Serenity.Demo.Northwind/Region/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/Region/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>RegionService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export class SalesByCategoryColumns {\r\n        static columnsKey = 'Northwind.SalesByCategory';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface SalesByCategoryRow {\r\n        CategoryId?: number;\r\n        CategoryName?: string;\r\n        ProductName?: string;\r\n        ProductSales?: number;\r\n    }\r\n\r\n    export namespace SalesByCategoryRow {\r\n        export const nameProperty = 'CategoryName';\r\n        export const localTextPrefix = 'Northwind.SalesByCategory';\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            CategoryId = \"CategoryId\",\r\n            CategoryName = \"CategoryName\",\r\n            ProductName = \"ProductName\",\r\n            ProductSales = \"ProductSales\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace SalesByCategoryService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/SalesByCategory';\r\n\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<SalesByCategoryRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            List = \"Serenity.Demo.Northwind/SalesByCategory/List\"\r\n        }\r\n\r\n        [\r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>SalesByCategoryService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export class ShipperColumns {\r\n        static columnsKey = 'Northwind.Shipper';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface ShipperForm {\r\n        CompanyName: StringEditor;\r\n        Phone: PhoneEditor;\r\n    }\r\n\r\n    export class ShipperForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Northwind.Shipper';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!ShipperForm.init)  {\r\n                ShipperForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = StringEditor;\r\n                var w1 = PhoneEditor;\r\n\r\n                Q.initFormType(ShipperForm, [\r\n                    'CompanyName', w0,\r\n                    'Phone', w1\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface ShipperRow {\r\n        ShipperID?: number;\r\n        CompanyName?: string;\r\n        Phone?: string;\r\n    }\r\n\r\n    export namespace ShipperRow {\r\n        export const idProperty = 'ShipperID';\r\n        export const nameProperty = 'CompanyName';\r\n        export const localTextPrefix = 'Northwind.Shipper';\r\n        export const lookupKey = 'Northwind.Shipper';\r\n\r\n        export function getLookup(): Q.Lookup<ShipperRow> {\r\n            return Q.getLookup<ShipperRow>('Northwind.Shipper');\r\n        }\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            ShipperID = \"ShipperID\",\r\n            CompanyName = \"CompanyName\",\r\n            Phone = \"Phone\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace ShipperService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/Shipper';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<ShipperRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<ShipperRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<ShipperRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<ShipperRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/Shipper/Create\",\r\n            Update = \"Serenity.Demo.Northwind/Shipper/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/Shipper/Delete\",\r\n            Retrieve = \"Serenity.Demo.Northwind/Shipper/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/Shipper/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>ShipperService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export class SupplierColumns {\r\n        static columnsKey = 'Northwind.Supplier';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface SupplierForm {\r\n        CompanyName: StringEditor;\r\n        ContactName: StringEditor;\r\n        ContactTitle: StringEditor;\r\n        Address: StringEditor;\r\n        Region: StringEditor;\r\n        PostalCode: StringEditor;\r\n        Country: StringEditor;\r\n        City: StringEditor;\r\n        Phone: StringEditor;\r\n        Fax: StringEditor;\r\n        HomePage: StringEditor;\r\n    }\r\n\r\n    export class SupplierForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Northwind.Supplier';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!SupplierForm.init)  {\r\n                SupplierForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = StringEditor;\r\n\r\n                Q.initFormType(SupplierForm, [\r\n                    'CompanyName', w0,\r\n                    'ContactName', w0,\r\n                    'ContactTitle', w0,\r\n                    'Address', w0,\r\n                    'Region', w0,\r\n                    'PostalCode', w0,\r\n                    'Country', w0,\r\n                    'City', w0,\r\n                    'Phone', w0,\r\n                    'Fax', w0,\r\n                    'HomePage', w0\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface SupplierRow {\r\n        SupplierID?: number;\r\n        CompanyName?: string;\r\n        ContactName?: string;\r\n        ContactTitle?: string;\r\n        Address?: string;\r\n        City?: string;\r\n        Region?: string;\r\n        PostalCode?: string;\r\n        Country?: string;\r\n        Phone?: string;\r\n        Fax?: string;\r\n        HomePage?: string;\r\n    }\r\n\r\n    export namespace SupplierRow {\r\n        export const idProperty = 'SupplierID';\r\n        export const nameProperty = 'CompanyName';\r\n        export const localTextPrefix = 'Northwind.Supplier';\r\n        export const lookupKey = 'Northwind.Supplier';\r\n\r\n        export function getLookup(): Q.Lookup<SupplierRow> {\r\n            return Q.getLookup<SupplierRow>('Northwind.Supplier');\r\n        }\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            SupplierID = \"SupplierID\",\r\n            CompanyName = \"CompanyName\",\r\n            ContactName = \"ContactName\",\r\n            ContactTitle = \"ContactTitle\",\r\n            Address = \"Address\",\r\n            City = \"City\",\r\n            Region = \"Region\",\r\n            PostalCode = \"PostalCode\",\r\n            Country = \"Country\",\r\n            Phone = \"Phone\",\r\n            Fax = \"Fax\",\r\n            HomePage = \"HomePage\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace SupplierService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/Supplier';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<SupplierRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<SupplierRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<SupplierRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<SupplierRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/Supplier/Create\",\r\n            Update = \"Serenity.Demo.Northwind/Supplier/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/Supplier/Delete\",\r\n            Retrieve = \"Serenity.Demo.Northwind/Supplier/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/Supplier/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>SupplierService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export class TerritoryColumns {\r\n        static columnsKey = 'Northwind.Territory';\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface TerritoryForm {\r\n        TerritoryID: StringEditor;\r\n        TerritoryDescription: StringEditor;\r\n        RegionID: LookupEditor;\r\n    }\r\n\r\n    export class TerritoryForm extends Serenity.PrefixedContext {\r\n        static formKey = 'Northwind.Territory';\r\n        private static init: boolean;\r\n\r\n        constructor(prefix: string) {\r\n            super(prefix);\r\n\r\n            if (!TerritoryForm.init)  {\r\n                TerritoryForm.init = true;\r\n\r\n                var s = Serenity;\r\n                var w0 = StringEditor;\r\n                var w1 = LookupEditor;\r\n\r\n                Q.initFormType(TerritoryForm, [\r\n                    'TerritoryID', w0,\r\n                    'TerritoryDescription', w0,\r\n                    'RegionID', w1\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export interface TerritoryRow {\r\n        ID?: number;\r\n        TerritoryID?: string;\r\n        TerritoryDescription?: string;\r\n        RegionID?: number;\r\n        RegionDescription?: string;\r\n    }\r\n\r\n    export namespace TerritoryRow {\r\n        export const idProperty = 'ID';\r\n        export const nameProperty = 'TerritoryID';\r\n        export const localTextPrefix = 'Northwind.Territory';\r\n        export const lookupKey = 'Northwind.Territory';\r\n\r\n        export function getLookup(): Q.Lookup<TerritoryRow> {\r\n            return Q.getLookup<TerritoryRow>('Northwind.Territory');\r\n        }\r\n        export const deletePermission = 'Northwind:General';\r\n        export const insertPermission = 'Northwind:General';\r\n        export const readPermission = 'Northwind:General';\r\n        export const updatePermission = 'Northwind:General';\r\n\r\n        export declare const enum Fields {\r\n            ID = \"ID\",\r\n            TerritoryID = \"TerritoryID\",\r\n            TerritoryDescription = \"TerritoryDescription\",\r\n            RegionID = \"RegionID\",\r\n            RegionDescription = \"RegionDescription\"\r\n        }\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n    export namespace TerritoryService {\r\n        export const baseUrl = 'Serenity.Demo.Northwind/Territory';\r\n\r\n        export declare function Create(request: Serenity.SaveRequest<TerritoryRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Update(request: Serenity.SaveRequest<TerritoryRow>, onSuccess?: (response: Serenity.SaveResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Delete(request: Serenity.DeleteRequest, onSuccess?: (response: Serenity.DeleteResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Retrieve(request: Serenity.RetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<TerritoryRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function List(request: Serenity.ListRequest, onSuccess?: (response: Serenity.ListResponse<TerritoryRow>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n\r\n        export declare const enum Methods {\r\n            Create = \"Serenity.Demo.Northwind/Territory/Create\",\r\n            Update = \"Serenity.Demo.Northwind/Territory/Update\",\r\n            Delete = \"Serenity.Demo.Northwind/Territory/Delete\",\r\n            Retrieve = \"Serenity.Demo.Northwind/Territory/Retrieve\",\r\n            List = \"Serenity.Demo.Northwind/Territory/List\"\r\n        }\r\n\r\n        [\r\n            'Create', \r\n            'Update', \r\n            'Delete', \r\n            'Retrieve', \r\n            'List'\r\n        ].forEach(x => {\r\n            (<any>TerritoryService)[x] = function (r, s, o) {\r\n                return Q.serviceRequest(baseUrl + '/' + x, r, s, o);\r\n            };\r\n        });\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class CategoryDialog extends Serenity.EntityDialog<CategoryRow, any> {\r\n        protected getFormKey() { return CategoryForm.formKey; }\r\n        protected getIdProperty() { return CategoryRow.idProperty; }\r\n        protected getLocalTextPrefix() { return CategoryRow.localTextPrefix; }\r\n        protected getNameProperty() { return CategoryRow.nameProperty; }\r\n        protected getService() { return CategoryService.baseUrl; }\r\n\r\n        protected form = new CategoryForm(this.idPrefix);\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class CategoryGrid extends Serenity.EntityGrid<CategoryRow, any> {\r\n        protected getColumnsKey() { return CategoryColumns.columnsKey; }\r\n        protected getDialogType() { return <any>CategoryDialog; }\r\n        protected getIdProperty() { return CategoryRow.idProperty; }\r\n        protected getLocalTextPrefix() { return CategoryRow.localTextPrefix; }\r\n        protected getService() { return CategoryService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.panel()\r\n    export class CustomerDialog extends Serenity.EntityDialog<CustomerRow, any> {\r\n        protected getFormKey() { return CustomerForm.formKey; }\r\n        protected getIdProperty() { return CustomerRow.idProperty; }\r\n        protected getLocalTextPrefix() { return CustomerRow.localTextPrefix; }\r\n        protected getNameProperty() { return CustomerRow.nameProperty; }\r\n        protected getService() { return CustomerService.baseUrl; }\r\n\r\n        protected form = new CustomerForm(this.idPrefix);\r\n\r\n        private ordersGrid: CustomerOrdersGrid;\r\n        private loadedState: string;\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.ordersGrid = new CustomerOrdersGrid(this.byId('OrdersGrid'));\r\n            // force order dialog to open in Dialog mode instead of Panel mode\r\n            // which is set as default on OrderDialog with @panelAttribute\r\n            this.ordersGrid.openDialogsAsPanel = false; \r\n\r\n            this.byId('NoteList').closest('.field').hide().end().appendTo(this.byId('TabNotes'));\r\n            Serenity.Extensions.DialogUtils.pendingChangesConfirmation(this.element, () => this.getSaveState() != this.loadedState);\r\n        }\r\n\r\n        getSaveState() {\r\n            try {\r\n                return $.toJSON(this.getSaveEntity());\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        loadResponse(data) {\r\n            super.loadResponse(data);\r\n            this.loadedState = this.getSaveState();\r\n        }\r\n\r\n        loadEntity(entity: CustomerRow) {\r\n            super.loadEntity(entity);\r\n\r\n            Serenity.TabsExtensions.setDisabled(this.tabs, 'Orders', this.isNewOrDeleted());\r\n\r\n            this.ordersGrid.customerID = entity.CustomerID;\r\n        }\r\n\r\n        onSaveSuccess(response) {\r\n            super.onSaveSuccess(response);\r\n\r\n            Q.reloadLookup('Northwind.Customer');\r\n        }\r\n\r\n        getTemplate() {\r\n            return `<div id=\"~_Tabs\" class=\"s-DialogContent\">\r\n    <ul>\r\n        <li><a href=\"#~_TabInfo\"><span>${Q.text(\"Db.Northwind.Customer.EntitySingular\")}</span></a></li>\r\n        <li><a href=\"#~_TabNotes\"><span>${Q.text(\"Db.Northwind.Note.EntityPlural\")}</span></a></li>\r\n        <li><a href=\"#~_TabOrders\"><span>${Q.text(\"Db.Northwind.Order.EntityPlural\")}</span></a></li>\r\n    </ul>\r\n    <div id=\"~_TabInfo\" class=\"tab-pane s-TabInfo\">\r\n        <div id=\"~_Toolbar\" class=\"s-DialogToolbar\">\r\n        </div>\r\n        <div class=\"s-Form\">\r\n            <form id=\"~_Form\" action=\"\">\r\n                <div class=\"fieldset ui-widget ui-widget-content ui-corner-all\">\r\n                    <div id=\"~_PropertyGrid\"></div>\r\n                    <div class=\"clear\"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div id=\"~_TabNotes\" class=\"tab-pane s-TabNotes\">\r\n    </div>\r\n    <div id=\"~_TabOrders\" class=\"tab-pane s-TabOrders\">\r\n        <div id=\"~_OrdersGrid\">\r\n        </div>\r\n    </div>\r\n</div>`;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerEditor()\r\n    export class CustomerEditor extends Serenity.LookupEditorBase<Serenity.LookupEditorOptions, CustomerRow> {\r\n\r\n        constructor(hidden: JQuery, options: Serenity.LookupEditorOptions) {\r\n            super(hidden, options);\r\n        }\r\n\r\n        protected getLookupKey() {\r\n            return 'Northwind.Customer';\r\n        }\r\n\r\n        protected getItemText(item, lookup) {\r\n            return super.getItemText(item, lookup) + ' [' + item.CustomerID + ']';\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.filterable()\r\n    export class CustomerGrid extends Serenity.EntityGrid<CustomerRow, any> {\r\n        protected getColumnsKey() { return CustomerColumns.columnsKey; }\r\n        protected getDialogType() { return <any>CustomerDialog; }\r\n        protected getIdProperty() { return CustomerRow.idProperty; }\r\n        protected getLocalTextPrefix() { return CustomerRow.localTextPrefix; }\r\n        protected getService() { return CustomerService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.panel()\r\n    export class OrderDialog extends Serenity.EntityDialog<OrderRow, any> {\r\n        protected getFormKey() { return OrderForm.formKey; }\r\n        protected getIdProperty() { return OrderRow.idProperty; }\r\n        protected getLocalTextPrefix() { return OrderRow.localTextPrefix; }\r\n        protected getNameProperty() { return OrderRow.nameProperty; }\r\n        protected getService() { return OrderService.baseUrl; }\r\n\r\n        protected form = new OrderForm(this.idPrefix);\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        getToolbarButtons() {\r\n            var buttons = super.getToolbarButtons();\r\n\r\n            buttons.push(Serenity.Extensions.ReportHelper.createToolButton({\r\n                title: 'Invoice',\r\n                cssClass: 'export-pdf-button',\r\n                reportKey: 'Northwind.OrderDetail',\r\n                getParams: () => ({\r\n                    OrderID: this.get_entityId()\r\n                })\r\n            }));\r\n\r\n            return buttons;\r\n        }\r\n\r\n        protected updateInterface() {\r\n            super.updateInterface();\r\n\r\n            this.toolbar.findButton('export-pdf-button').toggle(this.isEditMode());\r\n        }\r\n    }\r\n}","/// <reference path=\"../Order/OrderDialog.ts\" />\r\n\r\nnamespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class CustomerOrderDialog extends OrderDialog {\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        updateInterface() {\r\n            super.updateInterface();\r\n\r\n            Serenity.EditorUtils.setReadOnly(this.form.CustomerID, true);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    import fld = OrderRow.Fields;\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.filterable()\r\n    export class OrderGrid extends Serenity.EntityGrid<OrderRow, any> {\r\n        protected getColumnsKey() { return OrderColumns.columnsKey; }\r\n        protected getDialogType() { return <any>OrderDialog; }\r\n        protected getIdProperty() { return OrderRow.idProperty; }\r\n        protected getLocalTextPrefix() { return OrderRow.localTextPrefix; }\r\n        protected getService() { return OrderService.baseUrl; }\r\n\r\n        protected shippingStateFilter: Serenity.EnumEditor;\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getQuickFilters() {\r\n            var filters = super.getQuickFilters();\r\n\r\n            filters.push({\r\n                type: Serenity.LookupEditor,\r\n                options: {\r\n                    lookupKey: ProductRow.lookupKey\r\n                },\r\n                field: 'ProductID',\r\n                title: 'Contains Product in Details',\r\n                handler: w => {\r\n                    (this.view.params as OrderListRequest).ProductID = Q.toId(w.value);\r\n                },\r\n                cssClass: 'hidden-xs'\r\n            });\r\n\r\n            return filters;\r\n        }\r\n\r\n        protected createQuickFilters() {\r\n            super.createQuickFilters();\r\n\r\n            this.shippingStateFilter = this.findQuickFilter(Serenity.EnumEditor, fld.ShippingState);\r\n        }\r\n\r\n        protected getButtons()\r\n        {\r\n            var buttons = super.getButtons();\r\n\r\n            buttons.push(Extensions.ExcelExportHelper.createToolButton({\r\n                grid: this,\r\n                service: OrderService.baseUrl + '/ListExcel',\r\n                onViewSubmit: () => this.onViewSubmit(),\r\n                separator: true\r\n            }));\r\n\r\n            buttons.push(Extensions.PdfExportHelper.createToolButton({\r\n                grid: this,\r\n                onViewSubmit: () => this.onViewSubmit()\r\n            }));\r\n\r\n            return buttons;\r\n        }\r\n\r\n        protected getColumns() {\r\n            var columns = super.getColumns();\r\n\r\n            columns.splice(1, 0, {\r\n                id: 'Print Invoice',\r\n                field: null,\r\n                name: '',\r\n                cssClass: 'align-center',\r\n                format: ctx => '<a class=\"inline-action print-invoice\" title=\"invoice\">' +\r\n                    '<i class=\"fa fa-file-pdf-o text-red\"></i></a>',\r\n                width: 36,\r\n                minWidth: 36,\r\n                maxWidth: 36\r\n            });\r\n\r\n            return columns;\r\n        }\r\n\r\n        protected onClick(e: JQueryEventObject, row: number, cell: number) {\r\n            super.onClick(e, row, cell);\r\n\r\n            if (e.isDefaultPrevented())\r\n                return;\r\n\r\n            var item = this.itemAt(row);\r\n            var target = $(e.target);\r\n\r\n            // if user clicks \"i\" element, e.g. icon\r\n            if (target.parent().hasClass('inline-action'))\r\n                target = target.parent();\r\n\r\n            if (target.hasClass('inline-action')) {\r\n                e.preventDefault();\r\n\r\n                if (target.hasClass('print-invoice')) {\r\n                    Extensions.ReportHelper.execute({\r\n                        reportKey: 'Northwind.OrderDetail',\r\n                        params: {\r\n                            OrderID: item.OrderID\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        public set_shippingState(value: number): void {\r\n            this.shippingStateFilter.value = value == null ? '' : value.toString();\r\n        }\r\n\r\n        protected addButtonClick() {\r\n            var eq = this.view.params.EqualityFilter;\r\n            this.editItem(<OrderRow>{\r\n                CustomerID: eq ? eq.CustomerID : null\r\n            });\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../Order/OrderGrid.ts\" />\r\n\r\nnamespace Serenity.Demo.Northwind {\r\n\r\n    import fld = OrderRow.Fields;\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class CustomerOrdersGrid extends OrderGrid {\r\n        protected getDialogType() { return CustomerOrderDialog; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        protected getColumns(): Slick.Column[] {\r\n            return super.getColumns().filter(x => x.field !== fld.CustomerCompanyName);\r\n        }\r\n\r\n        protected initEntityDialog(itemType, dialog) {\r\n            super.initEntityDialog(itemType, dialog);\r\n            Serenity.SubDialogHelper.cascade(dialog, this.element.closest('.ui-dialog'));\r\n        }\r\n\r\n        protected addButtonClick() {\r\n            this.editItem({ CustomerID: this.customerID });\r\n        }\r\n\r\n        protected getInitialTitle() {\r\n            return null;\r\n        }\r\n\r\n        protected getGridCanLoad() {\r\n            return super.getGridCanLoad() && !!this.customerID;\r\n        }\r\n\r\n        private _customerID: string;\r\n\r\n        get customerID() {\r\n            return this._customerID;\r\n        }\r\n\r\n        set customerID(value: string) {\r\n            if (this._customerID !== value) {\r\n                this._customerID = value;\r\n                this.setEquality('CustomerID', value);\r\n                this.refresh();\r\n            }\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerFormatter()\r\n    export class EmployeeListFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n            var idList = ctx.value as string[];\r\n            if (!idList || !idList.length)\r\n                return \"\";\r\n\r\n            var byId = EmployeeRow.getLookup().itemById;\r\n            let z: EmployeeRow;\r\n            return idList.map(x => ((z = byId[x]) ? z.FullName : x)).join(\", \");\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerFormatter([Serenity.ISlickFormatter, Serenity.IInitializeColumn])\r\n    export class EmployeeFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n            var text = Q.htmlEncode(ctx.value);\r\n\r\n            if (!this.genderProperty || Q.isTrimmedEmpty(ctx.value)) {\r\n                return text;\r\n            }\r\n\r\n            var gender = ctx.item[this.genderProperty];\r\n            return '<i class=\"fa fa-' + ((gender === Gender.Female) ?\r\n                'female text-danger' : 'male text-primary') + ' text-opacity-75\"></i>' + text;\r\n        }\r\n\r\n        @Serenity.Decorators.option()\r\n        public genderProperty: string;\r\n\r\n        public initializeColumn(column: Slick.Column) {\r\n            column.referencedFields = column.referencedFields || [];\r\n            if (this.genderProperty)\r\n                column.referencedFields.push(this.genderProperty);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class NoteDialog extends Serenity.TemplatedDialog<any> {\r\n\r\n        private textEditor: Serenity.HtmlContentEditor;\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.textEditor = new Serenity.HtmlNoteContentEditor(this.byId('Text'));\r\n        }\r\n\r\n        protected getTemplate() {\r\n            return (\r\n                \"<form id='~_Form' class='s-Form'>\" +\r\n                    \"<textarea id='~_Text' class='required'></textarea>\" +\r\n                \"</form>\");\r\n        }\r\n\r\n        protected getDialogButtons() {\r\n            return [\r\n                {\r\n                    text: Q.text('Dialogs.OkButton'),\r\n                    click: () => {\r\n                        if (!this.validateForm()) {\r\n                            return;\r\n                        }\r\n\r\n                        this.okClick && this.okClick();\r\n                    }\r\n                },\r\n                {\r\n                    text: Q.text('Dialogs.CancelButton'),\r\n                    click: () => this.dialogClose()\r\n                }\r\n            ];\r\n        }\r\n\r\n        get text(): string {\r\n            return this.textEditor.value;\r\n        }\r\n\r\n        set text(value: string) {\r\n            this.textEditor.value = value;\r\n        }\r\n\r\n        public okClick: () => void;\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerEditor([Serenity.IGetEditValue, Serenity.ISetEditValue])\r\n    @Serenity.Decorators.element(\"<div/>\")\r\n    export class NotesEditor extends Serenity.TemplatedWidget<any>\r\n        implements Serenity.IGetEditValue, Serenity.ISetEditValue {\r\n\r\n        private isDirty: boolean;\r\n        private items: NoteRow[];\r\n\r\n        constructor(div: JQuery) {\r\n            super(div);\r\n\r\n            new Serenity.Toolbar(this.byId('Toolbar'), {\r\n                buttons: [{\r\n                    title: 'Add Note',\r\n                    cssClass: 'add-button',\r\n                    onClick: e => {\r\n                        e.preventDefault();\r\n                        this.addClick();\r\n                    }\r\n                }]\r\n            });\r\n        }\r\n\r\n        protected getTemplate() {\r\n            return \"<div><div id='~_Toolbar'></div><ul id='~_NoteList'></ul></div>\";\r\n        }\r\n\r\n        protected updateContent() {\r\n            var noteList = this.byId('NoteList');\r\n            noteList.children().remove();\r\n            if (this.items) {\r\n                var index = 0;\r\n                for (var t1 = 0; t1 < this.items.length; t1++) {\r\n                    var item = this.items[t1];\r\n                    var li = $('<li/>');\r\n                    $('<div/>').addClass('note-text').html(Q.coalesce(item.Text, '')).appendTo(li);\r\n\r\n                    $('<a/>').attr('href', '#').addClass('note-date')\r\n                        .text(item.InsertUserDisplayName + ' - ' +\r\n                            Q.formatDate(item.InsertDate, 'g'))\r\n                        .data('index', index).appendTo(li).click((e) => this.editClick(e));\r\n\r\n                    $('<a/>').attr('href', '#').addClass('note-delete')\r\n                        .attr('title', 'delete note').data('index', index)\r\n                        .appendTo(li).click((e) => this.deleteClick(e));\r\n\r\n                    li.appendTo(noteList);\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n\r\n        protected addClick() {\r\n            var dlg = new NoteDialog();\r\n            dlg.dialogTitle = 'Add Note';\r\n            dlg.okClick = () => {\r\n                var text = Q.trimToNull(dlg.text);\r\n                if (text == null) {\r\n                    return;\r\n                }\r\n\r\n                this.items = this.items || [];\r\n                Q.insert(this.items, 0, {\r\n                    Text: text,\r\n                    InsertUserDisplayName: Q.Authorization.userDefinition.DisplayName,\r\n                    InsertDate: Q.formatISODateTimeUTC(new Date())\r\n                });\r\n\r\n                this.updateContent();\r\n                dlg.dialogClose();\r\n                this.set_isDirty(true);\r\n                this.onChange && this.onChange();\r\n            };\r\n            dlg.dialogOpen();\r\n        }\r\n\r\n        protected editClick(e) {\r\n            e.preventDefault();\r\n            var index = $(e.target).data('index');\r\n            var old = this.items[index];\r\n            var dlg = new NoteDialog();\r\n            dlg.dialogTitle = 'Edit Note';\r\n            dlg.text = old.Text;\r\n            dlg.okClick = () => {\r\n                var text = Q.trimToNull(dlg.text);\r\n                if (!text) {\r\n                    return;\r\n                }\r\n\r\n                this.items[index].Text = text;\r\n                this.updateContent();\r\n                dlg.dialogClose();\r\n                this.set_isDirty(true);\r\n                this.onChange && this.onChange();\r\n            };\r\n            dlg.dialogOpen();\r\n        }\r\n\r\n        public deleteClick(e) {\r\n            e.preventDefault();\r\n            var index = $(e.target).data('index');\r\n            Q.confirm('Delete this note?', () => {\r\n                this.items.splice(index, 1);\r\n                this.updateContent();\r\n                this.set_isDirty(true);\r\n                this.onChange && this.onChange();\r\n            });\r\n        }\r\n\r\n        public get value() {\r\n            return this.items;\r\n        }\r\n\r\n        public set value(value: NoteRow[]) {\r\n            this.items = value || [];\r\n            this.set_isDirty(false);\r\n            this.updateContent();\r\n        }\r\n\r\n        public getEditValue(prop: Serenity.PropertyItem, target) {\r\n            target[prop.name] = this.value;\r\n        }\r\n\r\n        public setEditValue(source, prop: Serenity.PropertyItem) {\r\n            this.value = source[prop.name] || [];\r\n        }\r\n\r\n        public get_isDirty(): boolean {\r\n            return this.isDirty;\r\n        }\r\n\r\n        public set_isDirty(value): void {\r\n            this.isDirty = value;\r\n        }\r\n\r\n        public onChange: () => void;\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerFormatter()\r\n    export class FreightFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n            if (ctx.value == null)\r\n                return \"\";\r\n\r\n            return Q.htmlEncode(ctx.value) +\r\n                ' <i class=\"icon fa fa-balance-scale text-secondary text-opacity-75\"></i>';\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class OrderDetailDialog extends Serenity.Extensions.GridEditorDialog<OrderDetailRow> {\r\n        protected getFormKey() { return OrderDetailForm.formKey; }\r\n        protected getLocalTextPrefix() { return OrderDetailRow.localTextPrefix; }\r\n\r\n        protected form: OrderDetailForm;\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.form = new OrderDetailForm(this.idPrefix);\r\n\r\n            this.form.ProductID.changeSelect2(e => {\r\n                var productID = Q.toId(this.form.ProductID.value);\r\n                if (productID != null) {\r\n                    this.form.UnitPrice.value = ProductRow.getLookup().itemById[productID].UnitPrice;\r\n                }\r\n            });\r\n\r\n            this.form.Discount.addValidationRule(this.uniqueName, e => {\r\n                var price = this.form.UnitPrice.value;\r\n                var quantity = this.form.Quantity.value;\r\n                var discount = this.form.Discount.value;\r\n                if (price != null && quantity != null && discount != null &&\r\n                    discount > 0 && discount >= price * quantity) {\r\n                    return \"Discount can't be higher than total price!\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerEditor('Serenity.Demo.Northwind.OrderDetailsEditor')\r\n    export class OrderDetailsEditor extends Extensions.GridEditorBase<OrderDetailRow> {\r\n        protected getColumnsKey() { return OrderDetailColumns.columnsKey; }\r\n        protected getDialogType() { return OrderDetailDialog; }\r\n        protected getLocalTextPrefix() { return OrderDetailRow.localTextPrefix; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n\r\n        validateEntity(row, id) {\r\n            row.ProductID = Q.toId(row.ProductID);\r\n\r\n            var sameProduct = Q.tryFirst(this.view.getItems(), x => x.ProductID === row.ProductID);\r\n            if (sameProduct && this.id(sameProduct) !== id) {\r\n                Q.alert('This product is already in order details!');\r\n                return false;\r\n            }\r\n\r\n            row.ProductName = ProductRow.getLookup().itemById[row.ProductID].ProductName;\r\n            row.LineTotal = (row.Quantity || 0) * (row.UnitPrice || 0) - (row.Discount || 0);\r\n            return true;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.maximizable()\r\n    export class ProductDialog extends Serenity.EntityDialog<ProductRow, any> {\r\n        protected getFormKey() { return ProductForm.formKey; }\r\n        protected getIdProperty() { return ProductRow.idProperty; }\r\n        protected getLocalTextPrefix() { return ProductRow.localTextPrefix; }\r\n        protected getNameProperty() { return ProductRow.nameProperty; }\r\n        protected getService() { return ProductService.baseUrl; }\r\n\r\n        protected form = new ProductForm(this.idPrefix);\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    import fld = ProductRow.Fields;\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    @Serenity.Decorators.filterable()\r\n    export class ProductGrid extends Serenity.EntityGrid<ProductRow, any> {\r\n        protected getColumnsKey() { return ProductColumns.columnsKey; }\r\n        protected getDialogType() { return <any>ProductDialog; }\r\n        protected getIdProperty() { return ProductRow.idProperty; }\r\n        protected getLocalTextPrefix() { return ProductRow.localTextPrefix; }\r\n        protected getService() { return ProductService.baseUrl; }\r\n\r\n        private pendingChanges: Q.Dictionary<any> = {};\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n\r\n            this.slickContainer.on('change', '.edit:input', (e) => this.inputsChange(e));\r\n        }\r\n\r\n        protected getButtons()\r\n        {\r\n            var buttons = super.getButtons();\r\n\r\n            buttons.push(Extensions.ExcelExportHelper.createToolButton({\r\n                grid: this,\r\n                service: ProductService.baseUrl + '/ListExcel',\r\n                onViewSubmit: () => this.onViewSubmit(),\r\n                separator: true\r\n            }));\r\n\r\n            buttons.push(Extensions.PdfExportHelper.createToolButton({\r\n                grid: this,\r\n                onViewSubmit: () => this.onViewSubmit(),\r\n                reportTitle: 'Product List',\r\n                columnTitles: {\r\n                    'Discontinued': 'Dis.',\r\n                },\r\n                tableOptions: {\r\n                    columnStyles: {\r\n                        ProductID: {\r\n                            columnWidth: 25,\r\n                            halign: 'right'\r\n                        },\r\n                        Discountinued: {\r\n                            columnWidth: 25\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n\r\n            buttons.push({\r\n                title: 'Save Changes',\r\n                cssClass: 'apply-changes-button disabled',\r\n                onClick: e => this.saveClick(),\r\n                separator: true\r\n            });\r\n\r\n            return buttons;\r\n        }\r\n\r\n        protected onViewProcessData(response) {\r\n            this.pendingChanges = {};\r\n            this.setSaveButtonState();\r\n            return super.onViewProcessData(response);\r\n        }\r\n\r\n        // PLEASE NOTE! Inline editing in grids is not something Serenity supports nor recommends.\r\n        // SlickGrid has some set of limitations, UI is very hard to use on some devices like mobile, \r\n        // custom widgets and validations are not possible, and as a bonus the code can become a mess.\r\n        // \r\n        // This was just a sample how-to after much requests, and is not supported. \r\n        // This is all we can offer, please don't ask us to Guide you...\r\n\r\n        /**\r\n         * It would be nice if we could use autonumeric, Serenity editors etc. here, to control input validation,\r\n         * but it's not supported by SlickGrid as we are only allowed to return a string, and should attach\r\n         * no event handlers to rendered cell contents\r\n         */\r\n        private numericInputFormatter(ctx) {\r\n            if ((ctx.item as Slick.NonDataRow).__nonDataRow)\r\n                return Q.htmlEncode(Q.formatNumber(ctx.value, '#0.##'));\r\n\r\n            var klass = 'edit numeric';\r\n            var item = ctx.item as ProductRow;\r\n            var pending = this.pendingChanges[item.ProductID];\r\n\r\n            if (pending && pending[ctx.column.field] !== undefined) {\r\n                klass += ' dirty';\r\n            }\r\n\r\n            var value = this.getEffectiveValue(item, ctx.column.field) as number;\r\n\r\n            return \"<input type='text' class='\" + klass + \r\n                \"' data-field='\" + ctx.column.field + \r\n                \"' value='\" + Q.formatNumber(value, '0.##') + \"'/>\";\r\n        }\r\n\r\n        private stringInputFormatter(ctx) {\r\n            if ((ctx.item as Slick.NonDataRow).__nonDataRow)\r\n                return Q.htmlEncode(ctx.value);\r\n\r\n            var klass = 'edit string';\r\n            var item = ctx.item as ProductRow;\r\n            var pending = this.pendingChanges[item.ProductID];\r\n            var column = ctx.column as Slick.Column;\r\n\r\n            if (pending && pending[column.field] !== undefined) {\r\n                klass += ' dirty';\r\n            }\r\n\r\n            var value = this.getEffectiveValue(item, column.field) as string;\r\n\r\n            return \"<input type='text' class='\" + klass +\r\n                \"' data-field='\" + column.field +\r\n                \"' value='\" + Q.attrEncode(value) + \r\n                \"' maxlength='\" + column.sourceItem.maxLength + \"'/>\";\r\n        }\r\n\r\n        /**\r\n         * Sorry but you cannot use LookupEditor, e.g. Select2 here, only possible is a SELECT element\r\n         */\r\n        private selectFormatter(ctx: Slick.FormatterContext, idField: string, lookup: Q.Lookup<any>) {\r\n            if ((ctx.item as Slick.NonDataRow).__nonDataRow)\r\n                return Q.htmlEncode(ctx.value);\r\n\r\n            var klass = 'edit';\r\n            var item = ctx.item as ProductRow;\r\n            var pending = this.pendingChanges[item.ProductID];\r\n            var column = ctx.column as Slick.Column;\r\n\r\n            if (pending && pending[idField] !== undefined) {\r\n                klass += ' dirty';\r\n            }\r\n\r\n            var value = this.getEffectiveValue(item, idField);\r\n            var markup = \"<select class='\" + klass +\r\n                \"' data-field='\" + idField + \r\n                \"' style='width: 100%; max-width: 100%'>\";\r\n            for (var c of lookup.items) {\r\n                let id = c[lookup.idField];\r\n                markup += \"<option value='\" + Q.attrEncode(id) + \"'\"\r\n                if (id == value) {\r\n                    markup += \" selected\";\r\n                }\r\n                markup += \">\" + Q.htmlEncode(c[lookup.textField]) + \"</option>\";\r\n            }\r\n            return markup + \"</select>\";\r\n        }\r\n\r\n        private getEffectiveValue(item, field): any {\r\n            var pending = this.pendingChanges[item.ProductID];\r\n            if (pending && pending[field] !== undefined) {\r\n                return pending[field];\r\n            }\r\n\r\n            return item[field];\r\n        }\r\n\r\n        protected getColumns() {\r\n            var columns = super.getColumns();\r\n            var num = ctx => this.numericInputFormatter(ctx);\r\n            var str = ctx => this.stringInputFormatter(ctx);\r\n\r\n            Q.first(columns, x => x.field === 'QuantityPerUnit').format = str;\r\n\r\n            var category = Q.first(columns, x => x.field === fld.CategoryName);\r\n            category.referencedFields = [fld.CategoryID];\r\n            category.format = ctx => this.selectFormatter(ctx, fld.CategoryID, CategoryRow.getLookup());\r\n\r\n            var supplier = Q.first(columns, x => x.field === fld.SupplierCompanyName);\r\n            supplier.referencedFields = [fld.SupplierID];\r\n            supplier.format = ctx => this.selectFormatter(ctx, fld.SupplierID, SupplierRow.getLookup());\r\n\r\n            Q.first(columns, x => x.field === fld.UnitPrice).format = num;\r\n            Q.first(columns, x => x.field === fld.UnitsInStock).format = num;\r\n            Q.first(columns, x => x.field === fld.UnitsOnOrder).format = num;\r\n            Q.first(columns, x => x.field === fld.ReorderLevel).format = num;\r\n\r\n            return columns;\r\n        }\r\n\r\n        private inputsChange(e: JQueryEventObject) {\r\n            var cell = this.slickGrid.getCellFromEvent(e);\r\n            var item = this.itemAt(cell.row);\r\n            var input = $(e.target);\r\n            var field = input.data('field');\r\n            var text = Q.coalesce(Q.trimToNull(input.val()), '0');\r\n            var pending = this.pendingChanges[item.ProductID];\r\n\r\n            var effective = this.getEffectiveValue(item, field);\r\n            var oldText: string;\r\n            if (input.hasClass(\"numeric\"))\r\n                oldText = Q.formatNumber(effective, '0.##');\r\n            else\r\n                oldText = effective as string;\r\n\r\n            var value;\r\n            if (field === 'UnitPrice') {\r\n                value = Q.parseDecimal(text);\r\n                if (value == null || isNaN(value)) {\r\n                    Q.notifyError(Q.text('Validation.Decimal'), '', null);\r\n                    input.val(oldText);\r\n                    input.focus();\r\n                    return;\r\n                }\r\n            }\r\n            else if (input.hasClass(\"numeric\")) {\r\n                var i = Q.parseInteger(text);\r\n                if (isNaN(i) || i > 32767 || i < 0) {\r\n                    Q.notifyError(Q.text('Validation.Integer'), '', null);\r\n                    input.val(oldText);\r\n                    input.focus();\r\n                    return;\r\n                }\r\n                value = i;\r\n            }\r\n            else\r\n                value = text;\r\n\r\n            if (!pending) {\r\n                this.pendingChanges[item.ProductID] = pending = {};\r\n            }\r\n\r\n            pending[field] = value;\r\n            item[field] = value;\r\n            this.view.refresh();\r\n\r\n            if (input.hasClass(\"numeric\"))\r\n                value = Q.formatNumber(value, '0.##');\r\n\r\n            input.val(value).addClass('dirty');\r\n\r\n            this.setSaveButtonState();\r\n        }\r\n\r\n        private setSaveButtonState() {\r\n            this.toolbar.findButton('apply-changes-button').toggleClass('disabled',\r\n                Object.keys(this.pendingChanges).length === 0);\r\n        }\r\n\r\n        private saveClick() {\r\n            if (Object.keys(this.pendingChanges).length === 0) {\r\n                return;\r\n            }\r\n\r\n            // this calls save service for all modified rows, one by one\r\n            // you could write a batch update service\r\n            var keys = Object.keys(this.pendingChanges);\r\n            var current = -1;\r\n            var self = this;\r\n\r\n            (function saveNext() {\r\n                if (++current >= keys.length) {\r\n                    self.refresh();\r\n                    return;\r\n                }\r\n\r\n                var key = keys[current];\r\n                var entity = Q.deepClone(self.pendingChanges[key]);\r\n                entity.ProductID = key;\r\n                Q.serviceRequest(ProductService.Methods.Update, {\r\n                    EntityId: key,\r\n                    Entity: entity\r\n                }, (response) => {\r\n                    delete self.pendingChanges[key];\r\n                    saveNext();\r\n                });\r\n            })();\r\n        }\r\n\r\n        protected getQuickFilters() {\r\n            var flt = super.getQuickFilters();\r\n\r\n            var q = Q.parseQueryString();\r\n            if (q[\"cat\"]) {\r\n                var category = Q.tryFirst(flt, x => x.field == \"CategoryID\");\r\n                category.init = e => {\r\n                    e.element.getWidget(Serenity.LookupEditor).value = q[\"cat\"];\r\n                };\r\n            }\r\n\r\n            return flt;\r\n        }\r\n\r\n    }\r\n}\r\n","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class RegionDialog extends Serenity.EntityDialog<RegionRow, any> {\r\n        protected getFormKey() { return RegionForm.formKey; }\r\n        protected getIdProperty() { return RegionRow.idProperty; }\r\n        protected getLocalTextPrefix() { return RegionRow.localTextPrefix; }\r\n        protected getNameProperty() { return RegionRow.nameProperty; }\r\n        protected getService() { return RegionService.baseUrl; }\r\n\r\n        protected form = new RegionForm(this.idPrefix);\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class RegionGrid extends Serenity.EntityGrid<RegionRow, any> {\r\n        protected getColumnsKey() { return RegionColumns.columnsKey; }\r\n        protected getDialogType() { return <any>RegionDialog; }\r\n        protected getIdProperty() { return RegionRow.idProperty; }\r\n        protected getLocalTextPrefix() { return RegionRow.localTextPrefix; }\r\n        protected getService() { return RegionService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerEditor()\r\n    export class PhoneEditor extends Serenity.StringEditor {\r\n\r\n        constructor(input: JQuery) {\r\n            super(input);\r\n\r\n            this.addValidationRule(this.uniqueName, e => {\r\n                var value = Q.trimToNull(this.get_value());\r\n                if (value == null) {\r\n                    return null;\r\n                }\r\n                return PhoneEditor.validate(value, this.multiple);\r\n            });\r\n\r\n            input.bind('change', e => {\r\n                if (!Serenity.WX.hasOriginalEvent(e)) {\r\n                    return;\r\n                }\r\n                this.formatValue();\r\n            });\r\n\r\n            input.bind('blur', e => {\r\n                if (this.element.hasClass('valid')) {\r\n                    this.formatValue();\r\n                }\r\n            });\r\n        }\r\n\r\n        protected formatValue(): void {\r\n            this.element.val(this.getFormattedValue());\r\n        }\r\n\r\n        protected getFormattedValue(): string {\r\n            var value = this.element.val();\r\n            if (this.multiple) {\r\n                return PhoneEditor.formatMulti(value, PhoneEditor.formatPhone);\r\n            }\r\n            return PhoneEditor.formatPhone(value);\r\n        }\r\n\r\n        @Serenity.Decorators.option()\r\n        public multiple: boolean;\r\n\r\n        get_value() {\r\n            return this.getFormattedValue();\r\n        }\r\n\r\n        set_value(value: string) {\r\n            this.element.val(value);\r\n        }\r\n\r\n        static validate(phone: string, isMultiple: boolean) {\r\n            var valid = (isMultiple ? PhoneEditor.isValidMulti(phone, PhoneEditor.isValidPhone) : PhoneEditor.isValidPhone(phone));\r\n            if (valid) {\r\n                return null;\r\n            }\r\n            return Q.text((isMultiple ? 'Validation.NorthwindPhoneMultiple' : 'Validation.NorthwindPhone'));\r\n        }\r\n\r\n        static isValidPhone(phone: string) {\r\n            if (Q.isEmptyOrNull(phone)) {\r\n                return false;\r\n            }\r\n            phone = Q.replaceAll(Q.replaceAll(phone, ' ', ''), '-', '');\r\n            if (phone.length < 10) {\r\n                return false;\r\n            }\r\n\r\n            if (Q.startsWith(phone, '0')) {\r\n                phone = phone.substring(1);\r\n            }\r\n\r\n            if (Q.startsWith(phone, '(') && phone.charAt(4) === ')') {\r\n                phone = phone.substr(1, 3) + phone.substring(5);\r\n            }\r\n\r\n            if (phone.length !== 10) {\r\n                return false;\r\n            }\r\n\r\n            if (Q.startsWith(phone, '0')) {\r\n                return false;\r\n            }\r\n\r\n            for (var i = 0; i < phone.length; i++) {\r\n                var c = phone.charAt(i);\r\n                if (c < '0' || c > '9') {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        static formatPhone(phone) {\r\n            if (!PhoneEditor.isValidPhone(phone)) {\r\n                return phone;\r\n            }\r\n            phone = Q.replaceAll(Q.replaceAll(Q.replaceAll(Q.replaceAll(phone, ' ', ''), '-', ''), '(', ''), ')', '');\r\n            if (Q.startsWith(phone, '0')) {\r\n                phone = phone.substring(1);\r\n            }\r\n            phone = '(' + phone.substr(0, 3) + ') ' + phone.substr(3, 3) + '-' + phone.substr(6, 2) + phone.substr(8, 2);\r\n            return phone;\r\n        }\r\n\r\n        static formatMulti(phone: string, format: (s: string) => string) {\r\n            var phones = Q.replaceAll(phone, String.fromCharCode(59), String.fromCharCode(44)).split(String.fromCharCode(44));\r\n            var result = '';\r\n            for (var x of phones) {\r\n                var s = Q.trimToNull(x);\r\n                if (s == null) {\r\n                    continue;\r\n                }\r\n                if (result.length > 0) {\r\n                    result += ', ';\r\n                }\r\n                result += format(s);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        static isValidMulti(phone: string, check: (s: string) => boolean) {\r\n            if (Q.isEmptyOrNull(phone)) {\r\n                return false;\r\n            }\r\n            var phones = Q.replaceAll(phone, String.fromCharCode(59), String.fromCharCode(44)).split(String.fromCharCode(44));\r\n            var anyValid = false;\r\n            for (var $t1 = 0; $t1 < phones.length; $t1++) {\r\n                var x = phones[$t1];\r\n                var s = Q.trimToNull(x);\r\n                if (s == null) {\r\n                    continue;\r\n                }\r\n                if (!check(s)) {\r\n                    return false;\r\n                }\r\n                anyValid = true;\r\n            }\r\n            if (!anyValid) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class ShipperDialog extends Serenity.EntityDialog<ShipperRow, any> {\r\n        protected getFormKey() { return ShipperForm.formKey; }\r\n        protected getIdProperty() { return ShipperRow.idProperty; }\r\n        protected getLocalTextPrefix() { return ShipperRow.localTextPrefix; }\r\n        protected getNameProperty() { return ShipperRow.nameProperty; }\r\n        protected getService() { return ShipperService.baseUrl; }\r\n\r\n        protected form = new ShipperForm(this.idPrefix);\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerFormatter()\r\n    export class ShipperFormatter implements Slick.Formatter {\r\n        format(ctx: Slick.FormatterContext) {\r\n\r\n            if (!ctx.value)\r\n                return Q.htmlEncode(ctx.value);\r\n\r\n            return '<i class=\"text-info fa fa-' +\r\n                (ctx.value == \"Speedy Express\" ? \"plane\"\r\n                    : (ctx.value == \"Federal Shipping\" ? \"ship\"\r\n                        : \"truck\")) + ' text-opacity-75\"></i> ' + Q.htmlEncode(ctx.value);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class ShipperGrid extends Serenity.EntityGrid<ShipperRow, any> {\r\n        protected getColumnsKey() { return ShipperColumns.columnsKey; }\r\n        protected getDialogType() { return <any>ShipperDialog; }\r\n        protected getIdProperty() { return ShipperRow.idProperty; }\r\n        protected getLocalTextPrefix() { return ShipperRow.localTextPrefix; }\r\n        protected getService() { return ShipperService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class SupplierDialog extends Serenity.EntityDialog<SupplierRow, any> {\r\n        protected getFormKey() { return SupplierForm.formKey; }\r\n        protected getIdProperty() { return SupplierRow.idProperty; }\r\n        protected getLocalTextPrefix() { return SupplierRow.localTextPrefix; }\r\n        protected getNameProperty() { return SupplierRow.nameProperty; }\r\n        protected getService() { return SupplierService.baseUrl; }\r\n\r\n        protected form = new SupplierForm(this.idPrefix);\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class SupplierGrid extends Serenity.EntityGrid<SupplierRow, any> {\r\n        protected getColumnsKey() { return SupplierColumns.columnsKey; }\r\n        protected getDialogType() { return <any>SupplierDialog; }\r\n        protected getIdProperty() { return SupplierRow.idProperty; }\r\n        protected getLocalTextPrefix() { return SupplierRow.localTextPrefix; }\r\n        protected getService() { return SupplierService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class TerritoryDialog extends Serenity.EntityDialog<TerritoryRow, any> {\r\n        protected getFormKey() { return TerritoryForm.formKey; }\r\n        protected getIdProperty() { return TerritoryRow.idProperty; }\r\n        protected getLocalTextPrefix() { return TerritoryRow.localTextPrefix; }\r\n        protected getNameProperty() { return TerritoryRow.nameProperty; }\r\n        protected getService() { return TerritoryService.baseUrl; }\r\n\r\n        protected form = new TerritoryForm(this.idPrefix);\r\n    }\r\n}","namespace Serenity.Demo.Northwind {\r\n\r\n    @Serenity.Decorators.registerClass()\r\n    export class TerritoryGrid extends Serenity.EntityGrid<TerritoryRow, any> {\r\n        protected getColumnsKey() { return TerritoryColumns.columnsKey; }\r\n        protected getDialogType() { return <any>TerritoryDialog; }\r\n        protected getIdProperty() { return TerritoryRow.idProperty; }\r\n        protected getLocalTextPrefix() { return TerritoryRow.localTextPrefix; }\r\n        protected getService() { return TerritoryService.baseUrl; }\r\n\r\n        constructor(container: JQuery) {\r\n            super(container);\r\n        }\r\n    }\r\n}"]}